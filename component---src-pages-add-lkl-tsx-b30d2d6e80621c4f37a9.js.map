{"version":3,"sources":["webpack:///./src/components/FormSections/LocationDetails.tsx","webpack:///./src/components/Forms/LKLForm.tsx","webpack:///./src/pages/addLKL.tsx"],"names":["filterOnTextChange","e","target","value","replace","validateLongLat","range","regexMatch","RegExp","inRange","parseFloat","LocationDetails","useFormContext","trigger","register","errors","setValue","dirtyFields","formState","countryRef","useRef","postRef","stateRef","locationTypeRef","descriptionRef","watchCountry","useWatch","name","watchLongitude","watchLatitude","watchStreetAddress","watchCity","countries","useMemo","countriesList","countries_json","filter","_","index","push","label","sort","countryA","countryB","localeCompare","stateComp","Box","gridColumn","base","md","labelText","labelId","required","rules","onFocus","current","focus","render","onChange","onBlur","ref","id","aria-labelledby","options","states","size","disabled","validationState","state","ValidationState","ERROR","undefined","errorMessage","message","changes","selectedItem","provinceComp","maxLength","Form","title","showDivider","Grid","lg","gridGap","gridTemplateColumns","locationTitle","country","posts","post","country_cd","city","longitude","validate","latitude","locationTypes","locationType","pattern","description","replaceMSWordChars","LKLForm","p","formMethods","useForm","mode","defaultValues","activeIndicator","Layout","pageTitle","pageHeading","pageDescription","breadcrumbs","as","aria-label","alignSelf","marginTop","gridRow","type","onClick","preventDefault","window","scrollTo","buttonType","navigate","justifySelf","addLKLPage","formMode"],"mappings":"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","file":"component---src-pages-add-lkl-tsx-b30d2d6e80621c4f37a9.js","sourcesContent":["import React, { useRef, useMemo } from \"react\"\r\nimport { LKLFormData } from \"../Forms/LKLForm\"\r\nimport { FormSection, replaceMSWordChars } from \"../Forms/Form\"\r\nimport { Box, Grid } from \"@chakra-ui/core\"\r\nimport { Controller, useFormContext, useWatch } from \"react-hook-form\"\r\nimport { Switch, Select, FormInput, Text, ValidationState, Textarea } from \"@c1ds/components\"\r\nimport countries_json from \"../../../content/countries.json\"\r\nimport posts from \"../../../content/posts.json\"\r\nimport states from \"../../../content/states.json\"\r\nimport locationTypes from \"../../../content/locationTypes.json\"\r\n\r\nconst LocationDetails: React.FC = () => {\r\n\tconst { trigger, register, errors, setValue, formState } = useFormContext<LKLFormData>()\r\n\tconst { dirtyFields } = formState\r\n\r\n\tconst countryRef = useRef<HTMLButtonElement>(null)\r\n\tconst postRef = useRef<HTMLButtonElement>(null)\r\n\tconst stateRef = useRef<HTMLButtonElement>(null)\r\n\tconst locationTypeRef = useRef<HTMLButtonElement>(null)\r\n\tconst descriptionRef = useRef<HTMLTextAreaElement>(null)\r\n\r\n\tconst watchCountry: string | undefined = useWatch({ name: \"country\" })\r\n\tconst watchLongitude: string | undefined = useWatch({ name: \"longitude\" })\r\n\tconst watchLatitude: string | undefined = useWatch({ name: \"latitude\" })\r\n\tconst watchStreetAddress: string | undefined = useWatch({ name: \"streetAddress\" })\r\n\tconst watchCity: string | undefined = useWatch({ name: \"city\" })\r\n\r\n\t// Temporarily decrease size of country list while performance is investigated\r\n\tconst countries = useMemo(() => {\r\n\t\tconst countriesList = countries_json.filter((_, index) => index % 5 === 0)\r\n\t\tcountriesList.push({\r\n\t\t\tlabel: \"UNITED STATES OF AMERICA\",\r\n\t\t\tvalue: \"USA\",\r\n\t\t})\r\n\t\tcountriesList.sort((countryA, countryB) => countryA.label.localeCompare(countryB.label))\r\n\t\treturn countriesList\r\n\t}, [])\r\n\r\n\tconst isDisabled = false\r\n\r\n\tconst stateComp = (\r\n\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 7\" }}>\r\n\t\t\t<FormInput labelText=\"State\" labelId=\"stateLabel\" required>\r\n\t\t\t\t<Controller\r\n\t\t\t\t\tname=\"state\"\r\n\t\t\t\t\trules={{\r\n\t\t\t\t\t\trequired: \"Please select a State\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonFocus={() => stateRef.current?.focus()}\r\n\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tref={stateRef}\r\n\t\t\t\t\t\t\tid=\"state\"\r\n\t\t\t\t\t\t\tname=\"state\"\r\n\t\t\t\t\t\t\taria-labelledby=\"stateLabel\"\r\n\t\t\t\t\t\t\toptions={states}\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tvalidationState={errors?.state ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\terrorMessage={errors?.state?.message}\r\n\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\tonChange(changes.selectedItem?.value)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\t\tdirtyFields?.state && onBlur()\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</FormInput>\r\n\t\t</Box>\r\n\t)\r\n\tconst provinceComp = (\r\n\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 7\" }}>\r\n\t\t\t<FormInput labelText=\"Province\" labelId=\"provinceLabel\">\r\n\t\t\t\t<Text\r\n\t\t\t\t\tid=\"province\"\r\n\t\t\t\t\tname=\"province\"\r\n\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\tmaxLength={50}\r\n\t\t\t\t/>\r\n\t\t\t</FormInput>\r\n\t\t</Box>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<FormSection title=\"\" showDivider={true}>\r\n\t\t\t<Grid\r\n\t\t\t\tgridColumn={{ base: \"1 / -1\", lg: \"1 / 9\" }}\r\n\t\t\t\tgridGap={{ base: \"16px\", md: \"24px\" }}\r\n\t\t\t\tgridTemplateColumns={{ base: \"1\", md: \"repeat(12,1fr)\" }}>\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 11\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"Location Title\" labelId=\"locationTitleLabel\" required>\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tid=\"locationTitle\"\r\n\t\t\t\t\t\t\tname=\"locationTitle\"\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\t\t\tvalidationState={errors?.locationTitle ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\terrorMessage={errors?.locationTitle?.message}\r\n\t\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\t\trequired: \"Please enter a Location Title\",\r\n\t\t\t\t\t\t\t\tmaxLength: { value: 50, message: \"Location Title cannot exceed 25 characters\" },\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tmaxLength={50}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 1\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"Active\" labelId=\"activeIndicatorLabel\">\r\n\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\tid=\"activeIndicator\"\r\n\t\t\t\t\t\t\tname=\"activeIndicator\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tvalue=\"Active\"\r\n\t\t\t\t\t\t\tref={register()}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"1 / 5\" }}>\r\n\t\t\t\t<FormInput labelText=\"Country\" labelId=\"countryLabel\" required>\r\n\t\t\t\t\t<Controller\r\n\t\t\t\t\t\tname=\"country\"\r\n\t\t\t\t\t\trules={{\r\n\t\t\t\t\t\t\trequired: \"Please select a Country\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonFocus={() => countryRef.current?.focus()}\r\n\t\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tref={countryRef}\r\n\t\t\t\t\t\t\t\tid=\"country\"\r\n\t\t\t\t\t\t\t\tname=\"country\"\r\n\t\t\t\t\t\t\t\taria-labelledby=\"countryLabel\"\r\n\t\t\t\t\t\t\t\toptions={countries}\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\t\tvalidationState={errors?.country ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\t\terrorMessage={errors?.country?.message}\r\n\t\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\t\tonChange(changes.selectedItem?.value)\r\n\t\t\t\t\t\t\t\t\tsetValue(\"post\", \"\")\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\t\t\tdirtyFields?.country && onBlur()\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 4\" }}>\r\n\t\t\t\t<FormInput labelText=\"Post\" labelId=\"postLabel\" required>\r\n\t\t\t\t\t<Controller\r\n\t\t\t\t\t\tname=\"post\"\r\n\t\t\t\t\t\trules={{\r\n\t\t\t\t\t\t\trequired: \"Please select a Post\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonFocus={() => postRef.current?.focus()}\r\n\t\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tref={postRef}\r\n\t\t\t\t\t\t\t\tid=\"post\"\r\n\t\t\t\t\t\t\t\tname=\"post\"\r\n\t\t\t\t\t\t\t\taria-labelledby=\"postLabel\"\r\n\t\t\t\t\t\t\t\toptions={posts.filter(post => post.country_cd === watchCountry)}\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\t\tvalidationState={errors?.post ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\t\terrorMessage={errors?.post?.message}\r\n\t\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\t\tonChange(changes.selectedItem?.value)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\t\t\tdirtyFields?.post && onBlur()\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 8\" }}>\r\n\t\t\t\t<FormInput labelText=\"Street Address\" labelId=\"streetAddressLabel\">\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tid=\"streetAddress\"\r\n\t\t\t\t\t\tname=\"streetAddress\"\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\tfilterOnTextChange(changes)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonBlur={() => trigger(\"city\")}\r\n\t\t\t\t\t\tmaxLength={200}\r\n\t\t\t\t\t\tref={register()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 8\" }}>\r\n\t\t\t\t<FormInput labelText=\"Apartment, Suite, Other\" labelId=\"additionalAddressLabel\">\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tid=\"additionalAddress\"\r\n\t\t\t\t\t\tname=\"additionalAddress\"\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\t\tmaxLength={200}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Grid\r\n\t\t\t\tgridColumn={{ base: \"1 / -1\", lg: \"1 / 9\" }}\r\n\t\t\t\tgridGap={{ base: \"16px\", md: \"24px\" }}\r\n\t\t\t\tgridTemplateColumns={{ base: \"repeat(4,1fr)\", md: \"repeat(22,1fr)\" }}>\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 11\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"City\" labelId=\"cityLabel\">\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tid=\"city\"\r\n\t\t\t\t\t\t\tname=\"city\"\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tvalidationState={errors?.city ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\terrorMessage={errors?.city?.message}\r\n\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\tfilterOnTextChange(changes)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tmaxLength={30}\r\n\t\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\t\trequired: watchStreetAddress && !watchCity ? \"City also required with Street Address\" : false,\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t\t{watchCountry === \"USA\" ? stateComp : provinceComp}\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / 2\", md: \"span 4\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"Postal Code\" labelId=\"postalCodeLabel\">\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tid=\"postalCode\"\r\n\t\t\t\t\t\t\tname=\"postalCode\"\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\t\t\tmaxLength={10}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / 3\", md: \"1 / 3\" }}>\r\n\t\t\t\t<FormInput labelText=\"Longitude\" labelId=\"longitudeLabel\">\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tid=\"longitude\"\r\n\t\t\t\t\t\tname=\"longitude\"\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\tvalidationState={errors?.longitude ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\terrorMessage={errors?.longitude?.message}\r\n\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\ttrigger(\"latitude\")\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\tvalidate: value => (validateLongLat(value, 180) ? true : \"Invalid input\"),\r\n\t\t\t\t\t\t\trequired: watchLatitude && !watchLongitude ? \"Longitude value also required\" : false,\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"3 / 5\", md: \"span 2\" }}>\r\n\t\t\t\t<FormInput labelText=\"Latitude\" labelId=\"latitudeLabel\">\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tid=\"latitude\"\r\n\t\t\t\t\t\tname=\"latitude\"\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\tvalidationState={errors?.latitude ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\terrorMessage={errors?.latitude?.message}\r\n\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\ttrigger(\"longitude\")\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\tvalidate: value => (validateLongLat(value, 90) ? true : \"Invalid input\"),\r\n\t\t\t\t\t\t\trequired: watchLongitude && !watchLatitude ? \"Latitude value also required\" : false,\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 4\" }}>\r\n\t\t\t\t<FormInput labelText=\"Location Type\" labelId=\"locationTypeLabel\">\r\n\t\t\t\t\t<Controller\r\n\t\t\t\t\t\tname=\"locationType\"\r\n\t\t\t\t\t\tonFocus={() => locationTypeRef.current?.focus()}\r\n\t\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tref={locationTypeRef}\r\n\t\t\t\t\t\t\t\tid=\"locationType\"\r\n\t\t\t\t\t\t\t\tname=\"locationType\"\r\n\t\t\t\t\t\t\t\taria-labelledby=\"locationTypeLabel\"\r\n\t\t\t\t\t\t\t\toptions={locationTypes}\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\t\tvalidationState={errors?.locationType ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\t\terrorMessage={errors?.locationType?.message}\r\n\t\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\t\tonChange(changes.selectedItem?.value)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\t\t\tdirtyFields?.locationType && onBlur()\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 8\" }}>\r\n\t\t\t\t<FormInput labelText=\"Description\" labelId=\"descriptionLabel\">\r\n\t\t\t\t\t<Controller\r\n\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\trules={{\r\n\t\t\t\t\t\t\tpattern: {\r\n\t\t\t\t\t\t\t\tvalue: /^[A-Za-z0-9`~!@#$%^&*()_+•\\-=[\\]:\";',./?\\s]*$/,\r\n\t\t\t\t\t\t\t\tmessage: \"Please enter only plain text in the Description field\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tmaxLength: { value: 500, message: \"Description cannot exceed 500 characters\" },\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonFocus={() => descriptionRef.current?.focus()}\r\n\t\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t\t<Textarea\r\n\t\t\t\t\t\t\t\tref={descriptionRef}\r\n\t\t\t\t\t\t\t\tid=\"description\"\r\n\t\t\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\t\t\taria-labelledby=\"descriptionLabel\"\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\tmaxLength={500}\r\n\t\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\t\tvalidationState={errors?.description ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\t\terrorMessage={errors?.description?.message}\r\n\t\t\t\t\t\t\t\tonChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n\t\t\t\t\t\t\t\t\te.target.value = replaceMSWordChars(e.target.value).replace(\r\n\t\t\t\t\t\t\t\t\t\t/[^A-Za-z0-9`~!@#$%^&*()_+•\\-=[\\]:\";',./?\\s]/g,\r\n\t\t\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\tonChange(e)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\t\t</FormSection>\r\n\t)\r\n}\r\n\r\nconst filterOnTextChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n\te.target.value = e.target.value.replace(/^[^A-Za-z0-9]+/, \"\")\r\n}\r\n\r\nconst validateLongLat = (value: string, range: number) => {\r\n\tif (!value) {\r\n\t\treturn true\r\n\t}\r\n\tconst regexMatch = RegExp(/^([-+]?)([\\d]{1,3})([.]?)([\\d]*)$/)\r\n\tconst inRange = parseFloat(value) >= -range && parseFloat(value) <= range\r\n\treturn regexMatch && inRange\r\n}\r\n\r\nexport default LocationDetails\r\n","import React from \"react\"\r\nimport Layout from \"../../components/Layout\"\r\nimport { navigate } from \"gatsby\"\r\nimport { FormProvider, useForm } from \"react-hook-form\"\r\nimport { Button, LinkButton } from \"@c1ds/components\"\r\nimport { Box, Grid } from \"@chakra-ui/core\"\r\nimport { Form } from \"./Form\"\r\nimport LocationDetails from \"../FormSections/LocationDetails\"\r\n\r\nexport interface LKLFormData extends Record<string, boolean | string | number | LookupLklDto | undefined> {\r\n\teventId: number\r\n\teventLklId: number\r\n\tactiveIndicator: boolean\r\n\tlklTypeCd: string\r\n\tcreatedDateTime: string\r\n\tlastUpdatedDateTime: string\r\n\tlookupLklDto: LookupLklDto\r\n}\r\n\r\ninterface LookupLklDto {\r\n\tlookupLklId: number\r\n\tlklTitle: string\r\n\tlocationDesc: string\r\n\tpostCd: string\r\n\tcountryCd: string\r\n\tlklAddressDto: LklAddressDto\r\n}\r\n\r\ninterface LklAddressDto {\r\n\tlklAddressId: number\r\n\taddressDto: AddressDto\r\n}\r\n\r\ninterface AddressDto {\r\n\taddressId: number\r\n\taddressTypeCd: string\r\n\taddress1: string\r\n\taddress2: string\r\n\tcity: string\r\n\tcountryCd: string\r\n\tpostalCode: number\r\n\tstateCd: string\r\n}\r\n\r\ninterface LKLFormProps {\r\n\tsavedEvent?: LKLFormData\r\n}\r\n\r\nconst LKLForm: React.FC<LKLFormProps> = (p: LKLFormProps) => {\r\n\tconst defaultValues = {\r\n\t\tactiveIndicator: true,\r\n\t}\r\n\r\n\tconst formMethods = useForm<LKLFormData>({\r\n\t\tmode: \"onBlur\",\r\n\t\tdefaultValues: defaultValues,\r\n\t})\r\n\r\n\tconst breadcrumbs = [{ label: \"Event\" }, { label: \"Add Location\" }, { label: \"New Location\" }]\r\n\r\n\treturn (\r\n\t\t<Layout\r\n\t\t\tpageTitle=\"Location Details\"\r\n\t\t\tpageHeading=\"New Location\"\r\n\t\t\tpageDescription=\"Provide as much information as you have for the new location.\"\r\n\t\t\tbreadcrumbs={breadcrumbs}>\r\n\t\t\t<FormProvider {...formMethods}>\r\n\t\t\t\t<Form id=\"LKLForm\">\r\n\t\t\t\t\t<LocationDetails />\r\n\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tas=\"nav\"\r\n\t\t\t\t\t\taria-label=\"page\"\r\n\t\t\t\t\t\tid=\"pageNav\"\r\n\t\t\t\t\t\tgridColumn=\"1 / -1\"\r\n\t\t\t\t\t\talignSelf=\"center\"\r\n\t\t\t\t\t\tgridGap={{ base: \"16px\", md: \"24px\" }}\r\n\t\t\t\t\t\tmarginTop={{ md: \"72\" }}\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tgridTemplateColumns={{ base: \"1\", md: \"repeat(14, 1fr)\", lg: \"repeat(12, 1fr)\" }}>\r\n\t\t\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"10 / 15\", lg: \"10 / 13\" }} gridRow={{ md: \"1\" }}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\tonClick={(e: React.MouseEvent) => {\r\n\t\t\t\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\t\t\t\twindow.scrollTo(0, 0)\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\tCreate New Location\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"5 / 10\", lg: \"7 / 10\" }} gridRow={{ md: \"1\" }}>\r\n\t\t\t\t\t\t\t<Button size=\"full\" buttonType=\"secondary\" type=\"button\" onClick={() => navigate(\"/\")}>\r\n\t\t\t\t\t\t\t\tCreate and Add Another\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"1 / 2\" }} gridRow={{ md: \"1\" }} justifySelf=\"center\">\r\n\t\t\t\t\t\t\t<LinkButton onClick={() => navigate(\"/\")}>Cancel</LinkButton>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Form>\r\n\t\t\t</FormProvider>\r\n\t\t</Layout>\r\n\t)\r\n}\r\n\r\nexport default LKLForm\r\n","import React from \"react\"\r\nimport { CTFFormProvider } from \"../components/Forms/Form\"\r\nimport LKLForm, { LKLFormData } from \"../components/Forms/LKLForm\"\r\n\r\ninterface LKLFormProps {\r\n\tsavedEvent?: LKLFormData\r\n}\r\n\r\nconst addLKLPage: React.FC<LKLFormProps> = (p: LKLFormProps) => {\r\n\treturn (\r\n\t\t<CTFFormProvider formMode=\"view\">\r\n\t\t\t<LKLForm />\r\n\t\t</CTFFormProvider>\r\n\t)\r\n}\r\n\r\nexport default addLKLPage\r\n"],"sourceRoot":""}