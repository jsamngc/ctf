{"version":3,"sources":["webpack:///./src/components/Modals/DataLossModal.tsx","webpack:///./src/components/Forms/Form.tsx","webpack:///./node_modules/@chakra-ui/core/dist/es/Divider/index.js","webpack:///./src/components/FormSections/LocationDetails.tsx","webpack:///./node_modules/@material-ui/icons/esm/Person.js","webpack:///./node_modules/@chakra-ui/core/dist/es/FormLabel/index.js","webpack:///./src/components/FormIconInput.tsx","webpack:///./node_modules/@material-ui/icons/esm/Email.js","webpack:///./node_modules/@material-ui/icons/esm/AddCircle.js","webpack:///./node_modules/@material-ui/icons/esm/HighlightOff.js","webpack:///./src/components/POCEmail.tsx","webpack:///./node_modules/@material-ui/icons/esm/Phone.js","webpack:///./src/components/POCPhone.tsx","webpack:///./src/components/POCBox.tsx","webpack:///./src/components/FormSections/POCDetails.tsx","webpack:///./src/components/Forms/LKLForm.tsx","webpack:///./src/pages/addLKL.tsx","webpack:///./node_modules/@chakra-ui/core/dist/es/FormControl/index.js"],"names":["DataLossModal","p","isOpen","onClose","isCentered","size","align","marginRight","onClick","onLeave","buttonType","Form","children","formProps","as","gridColumn","gridGap","base","md","gridTemplateColumns","FormSection","lg","title","marginBottom","showDivider","borderColor","marginY","marginX","opacity","FormContext","React","createContext","displayName","useCTFFormContext","useContext","CTFFormProvider","formMode","providerProps","formSection","isCreate","isEdit","isView","Provider","value","replaceMSWordChars","s","replace","Divider","_ref","ref","orientation","props","borderProps","borderLeft","height","mx","borderBottom","width","my","border","filterOnTextChange","e","target","validateLongLat","range","regexMatch","RegExp","inRange","parseFloat","LocationDetails","useFormContext","trigger","register","errors","setValue","dirtyFields","formState","countryRef","useRef","postRef","stateRef","locationTypeRef","descriptionRef","watchCountry","useWatch","name","watchLongitude","watchLatitude","watchStreetAddress","watchCity","countries","useMemo","countriesList","countries_json","filter","_","index","push","label","sort","countryA","countryB","localeCompare","stateComp","undefined","locationTypes_json","locTypeA","locTypeB","Box","labelText","labelId","required","rules","onFocus","current","focus","render","onChange","onBlur","id","aria-labelledby","options","states_json","disabled","validationState","state","ValidationState","ERROR","errorMessage","message","changes","selectedItem","provinceComp","maxLength","Grid","lklTitle","country","posts_json","post","country_cd","city","longitude","validate","latitude","locationType","pattern","description","createSvgIcon","createElement","d","colorMode","ml","color","light","dark","FormLabel","formControl","fontSize","pr","pb","isDisabled","fontWeight","textAlign","verticalAlign","display","isRequired","FormIconInput","icon","input","FormControl","fontFamily","lineHeight","Text","position","mr","m","trim","EMAIL_REGEX","POCEmail","onEmailAddressChange","triggerPhoneEmail","addable","onAdd","onRemove","isFirst","watchEmailAddress","watchEmailType","errorFree","sectionDirty","console","log","validateAddable","errorMsgExist","sm","Email","emailTypes_json","alignSelf","justifySelf","mt","AddCircle","cursor","HighlightOff","PHONE_REGEX","POCPhone","onPhoneNumberChange","watchPhoneType","watchPhoneNumber","Phone","phoneTypes_json","phoneListAllowed","emailListAllowed","POCBox","setError","clearErrors","useState","phoneList","setPhoneList","emailList","setEmailList","errorsOnName","type","errorsOnEmailPhone","isAllPhoneEmailEmpty","filterOnNameBlur","length","forEach","map","field","onNameTextChange","onAddEmail","prevEmailList","unused","email","includes","onAddPhone","prevPhoneList","phone","borderStyle","padding","Person","key","emailName","phoneName","POCDetails","pocBoxes","setPocBoxes","currPocBoxes","LKLForm","eventId","savedForm","useDisclosure","isDataLossOpen","onDataLossOpen","onOpen","onDataLossClose","formMethods","useForm","mode","defaultValues","activeIndicator","handleSubmit","breadcrumbs","getValues","onSubmit","useCallback","data","skipNavigate","Layout","pageTitle","pageHeading","pageDescription","aria-label","marginTop","gridRow","navigate","pageState","addLKLPage","savedLkl","location","eventLklId","savedEvents","getSavedForm","savedEvent","find","event","eventLklDtoList","lklDto","createdDateTime","moment","toDate","lastUpdatedDateTime","useFormControl","context","useFormControlContext","Object","keys","reduce","acc","prop","FormControlContext","isInvalid","isReadOnly","rest","role"],"mappings":"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","file":"component---src-pages-add-lkl-tsx-c8097b566615bb80571a.js","sourcesContent":["import React from \"react\"\r\nimport { H4, P, Button, Modal, ModalBody, ModalFooter, ModalHeader, ModalCloseButton, LinkButton } from \"@c1ds/components\"\r\nimport { Flex, Box } from \"@chakra-ui/core\"\r\n\r\ninterface DataLossModalProps {\r\n\tisOpen: boolean\r\n\tonClose: React.ComponentProps<typeof Modal>[\"onClose\"]\r\n\tonLeave: (e: React.MouseEvent<HTMLButtonElement>) => void\r\n}\r\n\r\nexport const DataLossModal: React.FC<DataLossModalProps> = (p: DataLossModalProps) => (\r\n\t<Modal isOpen={p.isOpen} onClose={p.onClose} isCentered={true} size=\"sm\">\r\n\t\t<ModalHeader>\r\n\t\t\t<H4>Leave Page?</H4>\r\n\t\t</ModalHeader>\r\n\t\t<ModalCloseButton />\r\n\t\t<ModalBody>\r\n\t\t\t<P>Do you want to leave this page and lose unsaved data?</P>\r\n\t\t</ModalBody>\r\n\r\n\t\t<ModalFooter>\r\n\t\t\t<Flex align=\"center\">\r\n\t\t\t\t<Box marginRight=\"20\">\r\n\t\t\t\t\t<LinkButton onClick={p.onLeave}>Leave</LinkButton>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Button size=\"sm\" onClick={p.onClose} buttonType=\"secondary\">\r\n\t\t\t\t\tStay\r\n\t\t\t\t</Button>\r\n\t\t\t</Flex>\r\n\t\t</ModalFooter>\r\n\t</Modal>\r\n)\r\n","import React, { useContext } from \"react\"\r\nimport { Box, Grid, Divider } from \"@chakra-ui/core\"\r\nimport { H2 } from \"@c1ds/components\"\r\n\r\ntype FormModes = \"create\" | \"view\" | \"edit\"\r\n\r\ntype FormProps<T = HTMLFormElement> = React.FormHTMLAttributes<T> & React.RefAttributes<T>\r\n\r\n/**\r\n * Form wrapper component which includes standard C1DS grid layout\r\n */\r\nexport const Form: React.FC<FormProps> = p => {\r\n\tconst { children, ...formProps } = p\r\n\treturn (\r\n\t\t<Grid\r\n\t\t\tas=\"form\"\r\n\t\t\tgridColumn=\"1 / -1\"\r\n\t\t\tgridGap={{ base: \"16px\", md: \"24px\" }}\r\n\t\t\tgridTemplateColumns={[\"repeat(4, 1fr)\", \"repeat(4, 1fr)\", \"repeat(4, 1fr)\", \"repeat(8, 1fr)\", \"repeat(12, 1fr)\"]}\r\n\t\t\t{...formProps}>\r\n\t\t\t{children}\r\n\t\t</Grid>\r\n\t)\r\n}\r\n\r\ninterface FormSectionProps {\r\n\t/**\r\n\t * Section title\r\n\t */\r\n\ttitle?: string\r\n\t/**\r\n\t * Controls whether hr section separator is displayed at the end of the section\r\n\t */\r\n\tshowDivider?: boolean\r\n}\r\n\r\n/**\r\n * Renders form sections with standard C1DS grid layout\r\n */\r\nexport const FormSection: React.FC<FormSectionProps> = p => (\r\n\t<Grid\r\n\t\tas=\"section\"\r\n\t\tgridColumn=\"1 / -1\"\r\n\t\tgridGap={{ base: \"16px\", md: \"24px\" }}\r\n\t\tgridTemplateColumns={{\r\n\t\t\tbase: \"repeat(4, 1fr)\",\r\n\t\t\tmd: \"repeat(8, 1fr)\",\r\n\t\t\tlg: \"repeat(12, 1fr)\",\r\n\t\t}}>\r\n\t\t{p.title && (\r\n\t\t\t<Box marginBottom=\"4\" gridColumn=\"1 / -1\">\r\n\t\t\t\t<H2>{p.title}</H2>\r\n\t\t\t</Box>\r\n\t\t)}\r\n\t\t{p.children}\r\n\t\t{p.showDivider && (\r\n\t\t\t<Box gridColumn=\"1 / -1\">\r\n\t\t\t\t<Divider borderColor=\"disabledDark\" marginY=\"2\" marginX={0} opacity={1} />\r\n\t\t\t</Box>\r\n\t\t)}\r\n\t</Grid>\r\n)\r\n\r\nexport type EventFormSections = \"overview\" | \"locations\" | \"evacuation\" | \"attachments\" \r\n\r\ninterface FormContextProps {\r\n\t/**\r\n\t * Current form mode\r\n\t */\r\n\tformMode: FormModes\r\n\t/**\r\n\t * Current form section.\r\n\t * Only applicable for edit mode\r\n\t */\r\n\tformSection?: EventFormSections\r\n\t/**\r\n\t * `true` if form is currently in create mode\r\n\t */\r\n\tisCreate: boolean\r\n\t/**\r\n\t * `true` if form is  form currently in edit mode\r\n\t */\r\n\tisEdit: boolean\r\n\t/**\r\n\t * `true` if form is  form currently in view mode\r\n\t */\r\n\tisView: boolean\r\n}\r\n\r\nconst FormContext = React.createContext<FormContextProps | null>(null)\r\nFormContext.displayName = \"CTFFormContext\"\r\n\r\n/**\r\n * Hook allowing access to CTF Form Context.\r\n *\r\n * CTF Form context includes props to:\r\n * - View form mode (view/create/edit) state\r\n * - Manage/update form mode state\r\n *\r\n * There must be a parent `CTFFormProvider` component in the component tree\r\n * for `useCTFFormContext` to work.\r\n */\r\nexport const useCTFFormContext = (): FormContextProps => useContext(FormContext) as FormContextProps\r\n\r\nexport interface CTFFormProviderProps {\r\n\t/**\r\n\t * Form mode to use as initial state\r\n\t */\r\n\tformMode: FormContextProps[\"formMode\"]\r\n\t/**\r\n\t * Form section to use as initial state\r\n\t */\r\n\tformSection?: FormContextProps[\"formSection\"]\r\n}\r\n\r\n/**\r\n * Provider for CTF Form context\r\n * @see useCTFFormContext\r\n */\r\nexport const CTFFormProvider: React.FC<CTFFormProviderProps> = p => {\r\n\tconst { formMode, formSection } = p\r\n\r\n\tconst providerProps = {\r\n\t\tformMode,\r\n\t\tformSection,\r\n\t\tisCreate: formMode === \"create\",\r\n\t\tisEdit: formMode === \"edit\",\r\n\t\tisView: formMode === \"view\",\r\n\t}\r\n\r\n\treturn <FormContext.Provider value={providerProps}>{p.children}</FormContext.Provider>\r\n}\r\n\r\n/**\r\n * Helper function to replace special MS Word\r\n * characters with their ASCII equivalent\r\n */\r\nexport const replaceMSWordChars = (s: string): string =>\r\n\ts &&\r\n\ts\r\n\t\t.replace(/[\\u2018\\u2019\\u201A]/g, `'`)\r\n\t\t.replace(/[\\u201C\\u201D\\u201E]/g, `\"`)\r\n\t\t.replace(/[\\u2013\\u2014]/g, `-`)\r\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport Box from \"../Box\";\nimport { forwardRef } from \"react\";\nvar Divider = forwardRef(function (_ref, ref) {\n  var orientation = _ref.orientation,\n      props = _objectWithoutPropertiesLoose(_ref, [\"orientation\"]);\n\n  var borderProps = orientation === \"vertical\" ? {\n    borderLeft: \"0.0625rem solid\",\n    height: \"auto\",\n    mx: 2\n  } : {\n    borderBottom: \"0.0625rem solid\",\n    width: \"auto\",\n    my: 2\n  };\n  return jsx(Box, _extends({\n    ref: ref,\n    as: \"hr\",\n    \"aria-orientation\": orientation,\n    border: \"0\",\n    opacity: \"0.6\"\n  }, borderProps, {\n    borderColor: \"inherit\"\n  }, props));\n});\nexport default Divider;","import React, { useRef, useMemo } from \"react\"\r\nimport { FormSection, replaceMSWordChars } from \"../Forms/Form\"\r\nimport { Box, Grid } from \"@chakra-ui/core\"\r\nimport { Controller, useFormContext, useWatch } from \"react-hook-form\"\r\nimport { Switch, Select, FormInput, Text, ValidationState, Textarea } from \"@c1ds/components\"\r\nimport countries_json from \"../../../content/countries.json\"\r\nimport posts_json from \"../../../content/posts.json\"\r\nimport states_json from \"../../../content/states.json\"\r\nimport locationTypes_json from \"../../../content/locationTypes.json\"\r\n\r\nconst LocationDetails: React.FC = () => {\r\n\tconst { trigger, register, errors, setValue, formState } = useFormContext<LklDto>()\r\n\tconst { dirtyFields } = formState\r\n\r\n\tconst countryRef = useRef<HTMLButtonElement>(null)\r\n\tconst postRef = useRef<HTMLButtonElement>(null)\r\n\tconst stateRef = useRef<HTMLButtonElement>(null)\r\n\tconst locationTypeRef = useRef<HTMLButtonElement>(null)\r\n\tconst descriptionRef = useRef<HTMLTextAreaElement>(null)\r\n\r\n\tconst watchCountry: string | undefined = useWatch({ name: \"country\" })\r\n\tconst watchLongitude: string | undefined = useWatch({ name: \"longitude\" })\r\n\tconst watchLatitude: string | undefined = useWatch({ name: \"latitude\" })\r\n\tconst watchStreetAddress: string | undefined = useWatch({ name: \"streetAddress\" })\r\n\tconst watchCity: string | undefined = useWatch({ name: \"city\" })\r\n\r\n\t// Temporarily decrease size of country list while performance is investigated\r\n\tconst countries = useMemo(() => {\r\n\t\tconst countriesList = countries_json.filter((_, index) => index % 5 === 0)\r\n\t\tcountriesList.push({\r\n\t\t\tlabel: \"UNITED STATES OF AMERICA\",\r\n\t\t\tvalue: \"USA\",\r\n\t\t})\r\n\t\tcountriesList.sort((countryA, countryB) => countryA.label.localeCompare(countryB.label))\r\n\t\treturn countriesList\r\n\t}, [])\r\n\r\n\tconst locationTypes = [\r\n\t\t{\r\n\t\t\tlabel: \" \",\r\n\t\t\tvalue: undefined,\r\n\t\t},\r\n\t\t...locationTypes_json.sort((locTypeA, locTypeB) => locTypeA.label.localeCompare(locTypeB.label)),\r\n\t]\r\n\r\n\tconst isDisabled = false\r\n\r\n\tconst stateComp = (\r\n\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 7\" }}>\r\n\t\t\t<FormInput labelText=\"State\" labelId=\"stateLabel\" required>\r\n\t\t\t\t<Controller\r\n\t\t\t\t\tname=\"state\"\r\n\t\t\t\t\trules={{\r\n\t\t\t\t\t\trequired: \"Please select a State\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonFocus={() => stateRef.current?.focus()}\r\n\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tref={stateRef}\r\n\t\t\t\t\t\t\tid=\"state\"\r\n\t\t\t\t\t\t\tname=\"state\"\r\n\t\t\t\t\t\t\taria-labelledby=\"stateLabel\"\r\n\t\t\t\t\t\t\toptions={states_json}\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tvalidationState={errors?.state ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\terrorMessage={errors?.state?.message}\r\n\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\tonChange(changes.selectedItem?.value)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\t\tdirtyFields?.state && onBlur()\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</FormInput>\r\n\t\t</Box>\r\n\t)\r\n\tconst provinceComp = (\r\n\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 7\" }}>\r\n\t\t\t<FormInput labelText=\"Province\" labelId=\"provinceLabel\">\r\n\t\t\t\t<Text\r\n\t\t\t\t\tid=\"province\"\r\n\t\t\t\t\tname=\"province\"\r\n\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\tmaxLength={50}\r\n\t\t\t\t/>\r\n\t\t\t</FormInput>\r\n\t\t</Box>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<FormSection title=\"\" showDivider={true}>\r\n\t\t\t<Grid\r\n\t\t\t\tgridColumn={{ base: \"1 / -1\", lg: \"1 / 9\" }}\r\n\t\t\t\tgridGap={{ base: \"16px\", md: \"24px\" }}\r\n\t\t\t\tgridTemplateColumns={{ base: \"1\", md: \"repeat(12,1fr)\" }}>\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 11\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"Location Title\" labelId=\"lklTitleLabel\" required>\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tid=\"lklTitle\"\r\n\t\t\t\t\t\t\tname=\"lklTitle\"\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\t\t\tvalidationState={errors?.lklTitle ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\terrorMessage={errors?.lklTitle?.message}\r\n\t\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\t\trequired: \"Please enter a Location Title\",\r\n\t\t\t\t\t\t\t\tmaxLength: { value: 50, message: \"Location Title cannot exceed 25 characters\" },\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tmaxLength={50}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 1\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"Active\" labelId=\"activeIndicatorLabel\">\r\n\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\tid=\"activeIndicator\"\r\n\t\t\t\t\t\t\tname=\"activeIndicator\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tvalue=\"Active\"\r\n\t\t\t\t\t\t\tref={register()}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"1 / 5\" }}>\r\n\t\t\t\t<FormInput labelText=\"Country\" labelId=\"countryLabel\" required>\r\n\t\t\t\t\t<Controller\r\n\t\t\t\t\t\tname=\"country\"\r\n\t\t\t\t\t\trules={{\r\n\t\t\t\t\t\t\trequired: \"Please select a Country\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonFocus={() => countryRef.current?.focus()}\r\n\t\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tref={countryRef}\r\n\t\t\t\t\t\t\t\tid=\"country\"\r\n\t\t\t\t\t\t\t\tname=\"country\"\r\n\t\t\t\t\t\t\t\taria-labelledby=\"countryLabel\"\r\n\t\t\t\t\t\t\t\toptions={countries}\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\t\tvalidationState={errors?.country ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\t\terrorMessage={errors?.country?.message}\r\n\t\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\t\tonChange(changes.selectedItem?.value)\r\n\t\t\t\t\t\t\t\t\tsetValue(\"post\", \"\")\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\t\t\tdirtyFields?.country && onBlur()\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 4\" }}>\r\n\t\t\t\t<FormInput labelText=\"Post\" labelId=\"postLabel\" required>\r\n\t\t\t\t\t<Controller\r\n\t\t\t\t\t\tname=\"post\"\r\n\t\t\t\t\t\trules={{\r\n\t\t\t\t\t\t\trequired: \"Please select a Post\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonFocus={() => postRef.current?.focus()}\r\n\t\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tref={postRef}\r\n\t\t\t\t\t\t\t\tid=\"post\"\r\n\t\t\t\t\t\t\t\tname=\"post\"\r\n\t\t\t\t\t\t\t\taria-labelledby=\"postLabel\"\r\n\t\t\t\t\t\t\t\toptions={posts_json.filter(post => post.country_cd === watchCountry)}\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\t\tvalidationState={errors?.post ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\t\terrorMessage={errors?.post?.message}\r\n\t\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\t\tonChange(changes.selectedItem?.value)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\t\t\tdirtyFields?.post && onBlur()\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 8\" }}>\r\n\t\t\t\t<FormInput labelText=\"Street Address\" labelId=\"streetAddressLabel\">\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tid=\"streetAddress\"\r\n\t\t\t\t\t\tname=\"streetAddress\"\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\tfilterOnTextChange(changes)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonBlur={() => trigger(\"city\")}\r\n\t\t\t\t\t\tmaxLength={200}\r\n\t\t\t\t\t\tref={register()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 8\" }}>\r\n\t\t\t\t<FormInput labelText=\"Apartment, Suite, Other\" labelId=\"additionalAddressLabel\">\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tid=\"additionalAddress\"\r\n\t\t\t\t\t\tname=\"additionalAddress\"\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\t\tmaxLength={200}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Grid\r\n\t\t\t\tgridColumn={{ base: \"1 / -1\", lg: \"1 / 9\" }}\r\n\t\t\t\tgridGap={{ base: \"16px\", md: \"24px\" }}\r\n\t\t\t\tgridTemplateColumns={{ base: \"repeat(4,1fr)\", md: \"repeat(22,1fr)\" }}>\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 11\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"City\" labelId=\"cityLabel\">\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tid=\"city\"\r\n\t\t\t\t\t\t\tname=\"city\"\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tvalidationState={errors?.city ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\terrorMessage={errors?.city?.message}\r\n\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\tfilterOnTextChange(changes)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tmaxLength={30}\r\n\t\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\t\trequired: watchStreetAddress && !watchCity ? \"City also required with Street Address\" : false,\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t\t{watchCountry === \"USA\" ? stateComp : provinceComp}\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / 2\", md: \"span 4\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"Postal Code\" labelId=\"postalCodeLabel\">\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tid=\"postalCode\"\r\n\t\t\t\t\t\t\tname=\"postalCode\"\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\t\t\tmaxLength={10}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / 3\", md: \"1 / 3\" }}>\r\n\t\t\t\t<FormInput labelText=\"Longitude\" labelId=\"longitudeLabel\">\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tid=\"longitude\"\r\n\t\t\t\t\t\tname=\"longitude\"\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\tvalidationState={errors?.longitude ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\terrorMessage={errors?.longitude?.message}\r\n\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\ttrigger(\"latitude\")\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\tvalidate: value => (validateLongLat(value, 180) ? true : \"Invalid input\"),\r\n\t\t\t\t\t\t\trequired: watchLatitude && !watchLongitude ? \"Longitude value also required\" : false,\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"3 / 5\", md: \"span 2\" }}>\r\n\t\t\t\t<FormInput labelText=\"Latitude\" labelId=\"latitudeLabel\">\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tid=\"latitude\"\r\n\t\t\t\t\t\tname=\"latitude\"\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\tvalidationState={errors?.latitude ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\terrorMessage={errors?.latitude?.message}\r\n\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\ttrigger(\"longitude\")\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\tvalidate: value => (validateLongLat(value, 90) ? true : \"Invalid input\"),\r\n\t\t\t\t\t\t\trequired: watchLongitude && !watchLatitude ? \"Latitude value also required\" : false,\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 4\" }}>\r\n\t\t\t\t<FormInput labelText=\"Location Type\" labelId=\"locationTypeLabel\">\r\n\t\t\t\t\t<Controller\r\n\t\t\t\t\t\tname=\"locationType\"\r\n\t\t\t\t\t\tonFocus={() => locationTypeRef.current?.focus()}\r\n\t\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tref={locationTypeRef}\r\n\t\t\t\t\t\t\t\tid=\"locationType\"\r\n\t\t\t\t\t\t\t\tname=\"locationType\"\r\n\t\t\t\t\t\t\t\taria-labelledby=\"locationTypeLabel\"\r\n\t\t\t\t\t\t\t\toptions={locationTypes_json}\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\t\tvalidationState={errors?.locationType ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\t\terrorMessage={errors?.locationType?.message}\r\n\t\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\t\tonChange(changes.selectedItem?.value)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\t\t\tdirtyFields?.locationType && onBlur()\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 8\" }}>\r\n\t\t\t\t<FormInput labelText=\"Description\" labelId=\"descriptionLabel\">\r\n\t\t\t\t\t<Controller\r\n\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\trules={{\r\n\t\t\t\t\t\t\tpattern: {\r\n\t\t\t\t\t\t\t\tvalue: /^[A-Za-z0-9`~!@#$%^&*()_+•\\-=[\\]:\";',./?\\s]*$/,\r\n\t\t\t\t\t\t\t\tmessage: \"Please enter only plain text in the Description field\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tmaxLength: { value: 500, message: \"Description cannot exceed 500 characters\" },\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonFocus={() => descriptionRef.current?.focus()}\r\n\t\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t\t<Textarea\r\n\t\t\t\t\t\t\t\tref={descriptionRef}\r\n\t\t\t\t\t\t\t\tid=\"description\"\r\n\t\t\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\t\t\taria-labelledby=\"descriptionLabel\"\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\tmaxLength={500}\r\n\t\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\t\tvalidationState={errors?.description ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\t\terrorMessage={errors?.description?.message}\r\n\t\t\t\t\t\t\t\tonChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n\t\t\t\t\t\t\t\t\te.target.value = replaceMSWordChars(e.target.value).replace(\r\n\t\t\t\t\t\t\t\t\t\t/[^A-Za-z0-9`~!@#$%^&*()_+•\\-=[\\]:\";',./?\\s]/g,\r\n\t\t\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\tonChange(e)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\t\t</FormSection>\r\n\t)\r\n}\r\n\r\nconst filterOnTextChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n\te.target.value = e.target.value.replace(/^[^A-Za-z0-9]+/, \"\")\r\n}\r\n\r\nconst validateLongLat = (value: string, range: number) => {\r\n\tif (!value) {\r\n\t\treturn true\r\n\t}\r\n\tconst regexMatch = RegExp(/^([-+]?)([\\d]{1,3})([.]?)([\\d]*)$/)\r\n\tconst inRange = parseFloat(value) >= -range && parseFloat(value) <= range\r\n\treturn regexMatch && inRange\r\n}\r\n\r\nexport default LocationDetails\r\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { forwardRef } from \"react\";\nimport Box from \"../Box\";\nimport { useFormControl } from \"../FormControl\";\nimport { useColorMode } from \"../ColorModeProvider\";\nexport var RequiredIndicator = function RequiredIndicator(props) {\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var color = {\n    light: \"red.500\",\n    dark: \"red.300\"\n  };\n  return jsx(Box, _extends({\n    as: \"span\",\n    ml: 1,\n    color: color[colorMode],\n    \"aria-hidden\": \"true\",\n    children: \"*\"\n  }, props));\n};\nexport var FormLabel = forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\"]);\n\n  var formControl = useFormControl(props);\n  return jsx(Box, _extends({\n    ref: ref,\n    fontSize: \"md\",\n    pr: \"12px\",\n    pb: \"4px\",\n    opacity: formControl.isDisabled ? \"0.4\" : \"1\",\n    fontWeight: \"medium\",\n    textAlign: \"left\",\n    verticalAlign: \"middle\",\n    display: \"inline-block\",\n    as: \"label\"\n  }, props), children, formControl.isRequired && jsx(RequiredIndicator, null));\n});\nFormLabel.displayName = \"FormLabel\";\nexport default FormLabel;","import { FormControl, FormLabel, Text, Box } from \"@chakra-ui/core\"\r\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\r\nimport * as React from \"react\"\r\n\r\ntype FormIconInputProps = {\r\n\tlabelText: string\r\n\tlabelId: string\r\n\trequired?: boolean\r\n\tdisabled?: boolean\r\n    children: React.ReactElement<React.InputHTMLAttributes<HTMLElement>>\r\n    icon?: typeof SvgIcon\r\n}\r\n\r\nexport const FormIconInput: React.FC<FormIconInputProps> = (p: FormIconInputProps) => {\r\n\tconst { labelText, labelId, children, required, icon, ...input } = p\r\n\r\n\treturn (\r\n\t\t<FormControl>\r\n\t\t\t<FormLabel\r\n\t\t\t\tid={labelId}\r\n\t\t\t\tfontFamily=\"body\"\r\n\t\t\t\tfontSize=\"label\"\r\n\t\t\t\tfontWeight=\"normal\"\r\n\t\t\t\tpb={0}\r\n\t\t\t\tcolor=\"label\"\r\n\t\t\t\tdisplay=\"block\"\r\n\t\t\t\tlineHeight=\"label\">\r\n\t\t\t\t{required && (\r\n\t\t\t\t\t<Text color=\"required\" as=\"span\">\r\n\t\t\t\t\t\t*&nbsp;\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t)}\r\n                {icon && <Box position=\"absolute\" as={icon} mr={4} color=\"label\" />}\r\n\t\t\t\t<Text m={0} ml={28}>{labelText}</Text>\r\n\t\t\t</FormLabel>\r\n\t\t\t{React.cloneElement(children, {\r\n\t\t\t\trequired,\r\n\t\t\t\t\"aria-labelledby\": `${labelId} ${children.props[\"aria-labelledby\"] ?? \"\"}`.trim(),\r\n\t\t\t\t...input,\r\n\t\t\t})}\r\n\t\t</FormControl>\r\n\t)\r\n}\r\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"\n}), 'Email');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddCircle');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'HighlightOff');","import React from \"react\"\r\nimport { Box } from \"@chakra-ui/core\"\r\nimport { Controller, useFormContext, useWatch } from \"react-hook-form\"\r\nimport { Select, FormInput, Text, ValidationState } from \"@c1ds/components\"\r\n\r\nimport { FormIconInput } from './FormIconInput'\r\nimport { Email, AddCircle, HighlightOff } from \"@material-ui/icons\"\r\n\r\nimport emailTypes_json from \"../../content/emailTypes.json\"\r\n\r\nconst EMAIL_REGEX = /^((?:[A-Za-z0-9!#&'+\\-/?_`{|}~]+|\"(?:\\\\\"|\\\\\\\\|[A-Za-z0-9.!#&'+\\-/?_`{|}~ ,:;<>@[].])+\")(?:\\.(?:[A-Za-z0-9!#&'+\\-/?_`{|}~]+|\"(?:\\\\\"|\\\\\\\\|[A-Za-z0-9.!#&'+\\-/?_`{|}~ ,:;<>@[].])+\"))*)@((?:[A-Za-z0-9]+(?:(?:[A-Za-z0-9-]*[A-Za-z0-9])?)\\.)+[A-Za-z]{1,})$/\r\ntype POCEmailProps = {\r\n    id?: string\r\n    onEmailAddressChange : (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\r\n    watchNames? : string | undefined\r\n    triggerPhoneEmail : () => void\r\n    addable: boolean\r\n    onAdd : () => void\r\n    onRemove : () => void\r\n    isFirst : boolean\r\n}\r\n\r\nconst POCEmail: React.FC<POCEmailProps> = ( p : POCEmailProps) => {\r\n    const { id, onEmailAddressChange, triggerPhoneEmail, addable, onAdd, onRemove, isFirst } = p\r\n    const { errors, formState, register, trigger } = useFormContext<LklDto>()\r\n    const { dirtyFields } = formState\r\n\r\n\tconst watchEmailAddress: string | undefined = useWatch({ name: `${id}-emailAddress` })\r\n    const watchEmailType: string | undefined = useWatch({ name: `${id}-emailType` })\r\n\r\n    const errorFree = errors[`${id}-emailAddress`] === undefined && errors[`${id}-emailType`] === undefined\r\n    const sectionDirty = dirtyFields[`${id}-emailAddress`] && dirtyFields[`${id}-emailType`]\r\n    console.log(errorFree , sectionDirty , addable)\r\n    const validateAddable = (errorFree && sectionDirty && addable)\r\n\r\n    const errorMsgExist = errors[`${id}-emailAddress`]?.message !== '' || errors[`${id}-emailType`]?.message !== ''\r\n    \r\n    return (\r\n        <>\r\n        <Box gridColumn={{ base: \"1 / -1\", sm: \"1 / 9\", md: \"1 / 7\" }}>\r\n            <FormIconInput labelText=\"Email Address\" labelId=\"emailAddressLabel\" icon={Email}>\r\n                <Text\r\n                    ref={register({\r\n                        required: watchEmailType && !watchEmailAddress ? \"Email Address is required\" : false,\r\n                        pattern: {\r\n                            value: EMAIL_REGEX,\r\n                            message: \"Please enter valid email in the field\",\r\n                        }\r\n                    })}\r\n                    id={`${id}-emailAddress`}\r\n                    name={`${id}-emailAddress`}\r\n                    size=\"full\"\r\n                    disabled={false}\r\n                    validationState={errors[`${id}-emailAddress`] ? ValidationState.ERROR : undefined}\r\n                    errorMessage={errors[`${id}-emailAddress`]?.message}\r\n                    onChange={onEmailAddressChange}\r\n                    maxLength={67}\r\n                    onBlur={() => {\r\n                        trigger(`${id}-emailType`)\r\n                        triggerPhoneEmail()\r\n                    }}\r\n                />\r\n            </FormIconInput>\r\n        </Box>\r\n\r\n        <Box gridColumn={{ base: \"1 / 12\", sm: \"9 / 12 \", md: \"7 / 12\" }}>\r\n            <FormInput labelText=\"Type\" labelId=\"emailTypeLabel\">\r\n                <Controller\r\n                    name={`${id}-emailType`}\r\n                    rules={{\r\n                        required: watchEmailAddress && !watchEmailType ? \"Email Type is required\" : false\r\n                    }}\r\n                    render={({ onChange, onBlur, value }) => (\r\n                        <Select\r\n                            id={`${id}-emailType`}\r\n                            name={`${id}-emailType`}\r\n                            aria-labelledby=\"emailTypeLabel\"\r\n                            options={emailTypes_json}\r\n                            size=\"full\"\r\n                            disabled={false}\r\n                            validationState={errors[`${id}-emailType`] ? ValidationState.ERROR : undefined}\r\n                            errorMessage={errors[`${id}-emailType`]?.message}\r\n                            onChange={changes => {\r\n                                onChange(changes.selectedItem?.value)\r\n                            }}\r\n                            onBlur={() => {\r\n                                trigger(`${id}-emailAddress`)\r\n                                triggerPhoneEmail()\r\n                            }}\r\n                            value={value}\r\n                        />\r\n                    )}\r\n                />\r\n            </FormInput>\r\n        </Box>\r\n\r\n\r\n        <Box gridColumn={{ base: \"12 / 13\"}} alignSelf=\"center\" justifySelf=\"center\">\r\n            {isFirst ?\r\n                <Box mt={errorFree ? 32 : errorMsgExist ? 0 : 32} as={AddCircle} \r\n                    cursor={ validateAddable ? \"pointer\" : \"cursor\"} \r\n                    color={ validateAddable ? \"clickable\" : \"disabledInputText\" }\r\n                    onClick={() => {\r\n                        if(validateAddable) onAdd()\r\n                    }}\r\n                    />\r\n            :\r\n                <Box mt={errorFree ? 32 : errorMsgExist ? 0 : 32} as={HighlightOff} cursor=\"pointer\" color=\"clickable\" \r\n                    onClick={onRemove}/>\r\n            }\r\n        </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default POCEmail\r\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z\"\n}), 'Phone');","import React from \"react\"\r\nimport { Box } from \"@chakra-ui/core\"\r\nimport { Controller, useFormContext, useWatch } from \"react-hook-form\"\r\nimport { Select, FormInput, Text, ValidationState } from \"@c1ds/components\"\r\n\r\nimport { FormIconInput } from './FormIconInput'\r\nimport { Phone, AddCircle, HighlightOff } from \"@material-ui/icons\"\r\n\r\nimport phoneTypes_json from \"../../content/phoneTypes.json\"\r\n\r\nconst PHONE_REGEX = /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s./0-9]*$/\r\n\r\ntype POCPhoneProps = {\r\n    id?: string\r\n    onPhoneNumberChange : (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\r\n    watchNames? : string | undefined\r\n    triggerPhoneEmail : () => void\r\n    addable: boolean\r\n    onAdd : () => void\r\n    onRemove : () => void\r\n    isFirst : boolean\r\n}\r\n\r\n/**\r\n * Search Input component for searching for particular events.\r\n * Search is case-insensitive\r\n */\r\nconst POCPhone: React.FC<POCPhoneProps> = ( p : POCPhoneProps) => {\r\n    const { id, onPhoneNumberChange, triggerPhoneEmail, addable, onAdd, onRemove, isFirst } = p\r\n    const { errors, formState, register, trigger } = useFormContext<LklDto>()\r\n    const { dirtyFields } = formState\r\n\r\n    const watchPhoneType: string | undefined = useWatch({ name: `${id}-phoneType` })\r\n\tconst watchPhoneNumber: string | undefined = useWatch({ name: `${id}-phoneNumber` })\r\n    \r\n    const errorFree = errors[`${id}-phoneNumber`] === undefined && errors[`${id}-phoneType`] === undefined\r\n    const sectionDirty = dirtyFields[`${id}-phoneNumber`] && dirtyFields[`${id}-phoneType`]\r\n    const validateAddable = (errorFree && sectionDirty && addable)\r\n\r\n    const errorMsgExist = errors[`${id}-phoneNumber`]?.message !== '' || errors[`${id}-phoneType`]?.message !== ''\r\n\r\n    return (\r\n        <>\r\n        \r\n        <Box gridColumn={{ base: \"1 / -1\", sm: \"1 / 9\", md: \"1 / 7\" }}>\r\n            <FormIconInput labelText=\"Phone Number\" labelId=\"phoneNumberLabel\" icon={Phone}>\r\n                <Text\r\n                    ref={register({\r\n                        required: watchPhoneType && !watchPhoneNumber ? \"Phone Number is required\" : false,\r\n                        pattern: {\r\n                            value: PHONE_REGEX,\r\n                            message: \"Please enter valid phone number in the field\",\r\n                        }\r\n                    })}\r\n                    id={`${id}-phoneNumber`}\r\n                    name={`${id}-phoneNumber`}\r\n                    size=\"full\"\r\n                    disabled={false}\r\n                    validationState={errors[`${id}-phoneNumber`] ? ValidationState.ERROR : undefined}\r\n                    errorMessage={errors[`${id}-phoneNumber`]?.message}\r\n                    onChange={onPhoneNumberChange}\r\n                    maxLength={30}\r\n                    onBlur={() => {\r\n                        trigger(`${id}-phoneType`)\r\n                        triggerPhoneEmail()\r\n                    }}\r\n                />\r\n            </FormIconInput>\r\n        </Box>\r\n\r\n        <Box gridColumn={{ base: \"1 / 12\", sm: \"9 / 12\", md: \"7 / 12\" }}>\r\n            <FormInput labelText=\"Type\" labelId=\"phoneTypeLabel\">\r\n                <Controller\r\n                    name={`${id}-phoneType`}\r\n                    rules={\r\n                        {required: watchPhoneNumber && !watchPhoneType ? \"Phone Type is required\" : false\r\n                    }}\r\n                    render={({ onChange, onBlur, value }) => (\r\n                        <Select\r\n                            id={`${id}-phoneType`}\r\n                            name={`${id}-phoneType`}\r\n                            aria-labelledby=\"phoneTypeLabel\"\r\n                            options={phoneTypes_json}\r\n                            size=\"full\"\r\n                            disabled={false}\r\n                            validationState={errors[`${id}-phoneType`] ? ValidationState.ERROR : undefined}\r\n                            errorMessage={errors[`${id}-phoneType`]?.message}\r\n                            onChange={changes => {\r\n                                onChange(changes.selectedItem?.value)\r\n                            }}\r\n                            onBlur={() => {\r\n                                trigger(`${id}-phoneNumber`)\r\n                                triggerPhoneEmail()\r\n                            }}\r\n                            value={value}\r\n                        />\r\n                    )}\r\n                />\r\n            </FormInput>\r\n        </Box>\r\n\r\n        <Box gridColumn={{ base: \"12 / 13\"}} alignSelf=\"center\" justifySelf=\"center\">\r\n            {isFirst ?\r\n                <Box mt={errorFree ? 32 : errorMsgExist ? 0 : 32} as={AddCircle} \r\n                    cursor={ validateAddable ? \"pointer\" : \"cursor\"} \r\n                    color={ validateAddable ? \"clickable\" : \"disabledInputText\" }\r\n                    onClick={() => {\r\n                        if(validateAddable) onAdd()\r\n                    }}\r\n                    />\r\n            :\r\n                <Box mt={errorFree ? 32 : errorMsgExist ? 0 : 32} as={HighlightOff} cursor=\"pointer\" color=\"clickable\" \r\n                    onClick={onRemove}/>\r\n            }\r\n        </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default POCPhone\r\n","import React, { useState } from \"react\"\r\nimport { Box, Grid } from \"@chakra-ui/core\"\r\nimport { useFormContext, useWatch } from \"react-hook-form\"\r\nimport {  FormInput, Text } from \"@c1ds/components\"\r\n\r\nimport { Person } from \"@material-ui/icons\"\r\n\r\nimport { FormIconInput } from './FormIconInput'\r\nimport POCEmail from './POCEmail'\r\nimport POCPhone from './POCPhone'\r\n\r\nconst phoneListAllowed = ['phoneDto1', 'phoneDto2', 'phoneDto3']\r\nconst emailListAllowed = ['emailDto1', 'emailDto2', 'emailDto3']\r\n\r\ninterface POCBoxProps {\r\n\tid?: string\r\n\t// used for updating the list of POCBoxes - should be called when user clicks CloseIcon\r\n\tpocBoxes: string[]\r\n\tsetPocBoxes: React.Dispatch<React.SetStateAction<string[]>>\r\n}\r\nconst POCBox: React.FC<POCBoxProps> = (p: POCBoxProps) => {\r\n\tconst { id } = p\r\n\tconst { setError, clearErrors, formState, register, trigger } = useFormContext<LklDto>()\r\n\tconst { dirtyFields } = formState\r\n\r\n\tconst [ phoneList, setPhoneList ] = useState<string[]>(['phoneDto1'])\r\n\tconst [ emailList, setEmailList ] = useState<string[]>(['emailDto1'])\r\n\r\n\r\n\tconst watchFirstName: string | undefined = useWatch({ name: \"firstName\" })\r\n\tconst watchLastName: string | undefined = useWatch({ name: \"lastName\" })\r\n\r\n\tconst errorsOnName = [\r\n\t\t{ type: \"manual\", name: \"firstName\", message: \"\" },\r\n\t\t{ type: \"manual\", name: \"lastName\", message: \"\" },\r\n\t]\r\n\tconst errorsOnEmailPhone = [\r\n\t\t{ type: \"manual\", name: \"emailDto1-emailAddress\", message: \"\" },\r\n\t\t{ type: \"manual\", name: \"emailDto1-emailType\", message: \"\" },\r\n\t\t{ type: \"manual\", name: \"phoneDto1-phoneNumber\", message: \"\" },\r\n\t\t{ type: \"manual\", name: \"phoneDto1-phoneType\", message: \"\" },\r\n\t]\r\n\r\n\t// If none of Phone or Email field has value, it's true otherwise : at least one field in Phone or Email has value.\r\n\tconst isAllPhoneEmailEmpty = !(dirtyFields[\"emailDto1-emailAddress\"] || \r\n\t\t\t\t\t\t\t\t   dirtyFields[\"emailDto1-emailType\"] || \r\n\t\t\t\t\t\t\t\t   dirtyFields[\"phoneDto1-phoneNumber\"] || \r\n\t\t\t\t\t\t\t\t   dirtyFields[\"phoneDto1-phoneType\"])\r\n\r\n\tconst filterOnNameBlur = (e : React.FocusEvent<HTMLInputElement>) => {\r\n\t\t// If none of the fields are touched\r\n\t\tif(e.target.value.length > 0){\r\n\t\t\tif(isAllPhoneEmailEmpty) {\r\n\t\t\t\terrorsOnEmailPhone.forEach(({ name, type, message }) =>\r\n\t\t\t\t\tsetError(name, { type, message })\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tif(isAllPhoneEmailEmpty){\r\n\t\t\t\tclearErrors(errorsOnEmailPhone.map(field => field.name))\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst filterOnTextChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n\t\te.target.value = e.target.value.replace(/^[^A-Za-z0-9]+/, \"\")\r\n\t}\r\n\r\n\tconst onNameTextChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n\t\tfilterOnTextChange(e)\r\n\t\tclearErrors(errorsOnName.map(field => field.name))\r\n\t}\r\n\t\r\n\r\n\tconst isDisabled = false\r\n\r\n\t//------------------POC Email and Phone component functions\r\n\r\n\tconst onEmailAddressChange =  (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n\t\tclearErrors(errorsOnEmailPhone.map(field => field.name))\r\n\t}\r\n\r\n\tconst onPhoneNumberChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n\t\tfilterOnTextChange(e)\r\n\t\tclearErrors(errorsOnEmailPhone.map(field => field.name))\r\n\t}\r\n\r\n\tconst triggerPhoneEmail = () => {\r\n\t\ttrigger(errorsOnEmailPhone.map(field => field.name))\r\n\t}\r\n\r\n\tconst onAddEmail = () => {\r\n\r\n\t\tsetEmailList(prevEmailList => {\r\n\t\t\tconst unused = emailListAllowed.filter(email => {\r\n\t\t\t\treturn !prevEmailList.includes(email)\r\n\t\t\t})\r\n\t\t\treturn (unused.length > 0) ? [...prevEmailList, unused[0]] : prevEmailList\r\n\t\t})\r\n\t}\r\n\tconst onRemoveEmail = (emailName : string) => {\r\n\r\n\t\tsetEmailList(prevEmailList => {\r\n\t\t\tconst filteredList = prevEmailList.filter(email => {\r\n\t\t\t\treturn email !== emailName\r\n\t\t\t})\r\n\t\t\treturn filteredList\r\n\t\t})\r\n\t}\r\n\r\n\tconst onAddPhone = () => {\r\n\r\n\t\tsetPhoneList(prevPhoneList => {\r\n\t\t\tconst unused = phoneListAllowed.filter(phone => {\r\n\t\t\t\treturn !prevPhoneList.includes(phone)\r\n\t\t\t})\r\n\t\t\treturn (unused.length > 0) ? [...prevPhoneList, unused[0]] : prevPhoneList\r\n\t\t})\r\n\t}\r\n\tconst onRemovePhone = (phoneName : string) => {\r\n\r\n\t\tsetPhoneList(prevPhoneList => {\r\n\t\t\tconst filteredList = prevPhoneList.filter(phone => {\r\n\t\t\t\treturn phone !== phoneName\r\n\t\t\t})\r\n\t\t\treturn filteredList\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t// TO-DO\r\n\t\t// 3. Find a way to insert the icons onto the form inputs: C1DS limitation\r\n\t\t// 4. Position the AddCircleIcon correctly on the right side of each set\r\n\t\t// 6. For phone number, we might need an update to C1DS to allow Select component\r\n\t\t//    to accept both dropdown and user input\r\n\t\t<Grid\r\n\t\t\tborder=\"2px\"\r\n\t\t\tborderStyle=\"solid\"\r\n\t\t\tborderColor=\"lightGray\"\r\n\t\t\tgridColumn={{ base: \"1 / -1\", md: \"1 / 9\" }}\r\n\t\t\tgridGap={{ base: \"16px\", md: \"24px\" }}\r\n\t\t\tpadding={{ base: \"16px\", md: \"30px\" }}\r\n\t\t\tgridTemplateColumns={{ base: \"repeat(12,1fr)\" }}>\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"1 / 7\" }}>\r\n\t\t\t\t<FormIconInput labelText=\"First Name\" labelId=\"firstNameLabel\" icon={Person}>\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t\tid=\"firstName\"\r\n\t\t\t\t\t\tname=\"firstName\"\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\tonChange={onNameTextChange}\r\n\t\t\t\t\t\tonBlur={(filterOnNameBlur)}\r\n\t\t\t\t\t\tmaxLength={33}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormIconInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"7 / -1\" }}>\r\n\t\t\t\t<FormInput labelText=\"Last Name\" labelId=\"lastNameLabel\">\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t\tid=\"lastName\"\r\n\t\t\t\t\t\tname=\"lastName\"\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\tonChange={onNameTextChange}\r\n\t\t\t\t\t\tonBlur={filterOnNameBlur}\r\n\t\t\t\t\t\tmaxLength={33}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\t\t\t\r\n\t\t\t{/* Email List , max = 3*/}\r\n\t\t\t{emailList.map((value: string, index: number) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<POCEmail \r\n\t\t\t\t\t\t// PocBox1-emailDto1, '-' is deliminator\r\n\t\t\t\t\t\tkey={`${id}-${value}`}\r\n\t\t\t\t\t\tid={value}\r\n\t\t\t\t\t\tisFirst={index === 0}\r\n\t\t\t\t\t\tonEmailAddressChange={onEmailAddressChange}\r\n\t\t\t\t\t\ttriggerPhoneEmail={triggerPhoneEmail}\r\n\t\t\t\t\t\taddable={emailList.length < 3 && index === 0 }\r\n\t\t\t\t\t\tonAdd={onAddEmail}\r\n\t\t\t\t\t\tonRemove={()=> {\r\n\t\t\t\t\t\t\tonRemoveEmail(value)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\r\n\t\t\t{/* Phone List , max = 3*/}\r\n\t\t\t{phoneList.map((value: string, index: number) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<POCPhone\r\n\t\t\t\t\t\t// PocBox1-phoneDto1, '-' is deliminator\r\n\t\t\t\t\t\tkey={`${id}-${value}`}\r\n\t\t\t\t\t\tid={value}\r\n\t\t\t\t\t\tisFirst={index === 0}\r\n\t\t\t\t\t\tonPhoneNumberChange={onPhoneNumberChange}\r\n\t\t\t\t\t\ttriggerPhoneEmail={triggerPhoneEmail}\r\n\t\t\t\t\t\taddable={phoneList.length < 3 }\r\n\t\t\t\t\t\tonAdd={onAddPhone}\r\n\t\t\t\t\t\tonRemove={()=> {\r\n\t\t\t\t\t\t\tonRemovePhone(value)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\r\n\t\t</Grid>\r\n\t)\r\n}\r\n\r\n\r\n\r\nexport default POCBox\r\n","import React, { useState } from \"react\"\r\nimport { FormSection } from \"../Forms/Form\"\r\nimport { Box } from \"@chakra-ui/core\"\r\nimport { P, Link } from \"@c1ds/components\"\r\nimport POCBox from \"../POCBox\"\r\n\r\nconst POCDetails: React.FC = () => {\r\n\t// Couldn't figure out what values to use to identify each pocBox.\r\n\t// Feel free to change it to whatever you want\r\n\tconst [pocBoxes, setPocBoxes] = useState([\"PocBox\"])\r\n\r\n\treturn (\r\n\t\t<FormSection title=\"Point Of Contact\" showDivider={false}>\r\n\t\t\t<Box gridColumn=\"1 / -1\">\r\n\t\t\t\t<P>Enter a point of contact at this location.</P>\r\n\t\t\t</Box>\r\n\t\t\t{/* Display all pocBoxes available */}\r\n\t\t\t{pocBoxes.map((value: string, index: number) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Box key={`${value}${index}`} gridColumn=\"1 / 9\">\r\n\t\t\t\t\t\t<POCBox pocBoxes={pocBoxes} id={`${value}-${index}`} setPocBoxes={setPocBoxes}></POCBox>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t\t{/* This link adds more pocBoxes */}\r\n\t\t\t<Box gridColumn=\"1 / -1\">\r\n\t\t\t\t<Link\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetPocBoxes((currPocBoxes) => {\r\n\t\t\t\t\t\t\treturn [...currPocBoxes, \"PocBox\"]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\tAdd Another Point of Contact\r\n\t\t\t\t</Link>\r\n\t\t\t</Box>\r\n\t\t</FormSection>\r\n\t)\r\n}\r\n\r\nexport default POCDetails\r\n","import React, { useCallback }from \"react\"\r\nimport Layout, { LayoutProps } from \"../../components/Layout\"\r\nimport { navigate } from \"gatsby\"\r\nimport { FormProvider, useForm } from \"react-hook-form\"\r\nimport { Button, LinkButton } from \"@c1ds/components\"\r\nimport { Box, Grid, useDisclosure } from \"@chakra-ui/core\"\r\nimport { Form, useCTFFormContext } from \"./Form\"\r\nimport LocationDetails from \"../FormSections/LocationDetails\"\r\nimport POCDetails from \"../FormSections/POCDetails\"\r\nimport { DataLossModal } from \"../Modals/DataLossModal\"\r\nimport { EventPageState } from \"../../pages/event\"\r\n\r\ninterface LKLFormProps {\r\n\teventId: string\r\n\tsavedForm?: LklDto\r\n}\r\n\r\nconst LKLForm: React.FC<LKLFormProps> = (p: LKLFormProps) => {\r\n\tconst { eventId, savedForm } = p\r\n\t// const { isCreate, isEdit } = useCTFFormContext()\r\n\tconst { isOpen: isDataLossOpen, onOpen: onDataLossOpen, onClose: onDataLossClose } = useDisclosure()\r\n\r\n\tconst defaultValues = {\r\n\t\tactiveIndicator: true,\r\n\t}\r\n\t\r\n\tconst formMethods = useForm<LklDto>({\r\n\t\tmode: \"onBlur\",\r\n\t\tdefaultValues: defaultValues,\r\n\t})\r\n\tconst { register, handleSubmit, getValues } = formMethods\r\n\r\n\tconst breadcrumbs: LayoutProps[\"breadcrumbs\"] = [\r\n\t\t{ label: \"Event\", onClick: onDataLossOpen },\r\n\t\t{ label: \"Add Location\" },\r\n\t\t{ label: \"New Location\" },\r\n\t]\r\n\r\n\tconst onSubmit = useCallback(\r\n\t\t(data, skipNavigate = false) => {\r\n\t\t\t// console.log(data)\r\n\t\t},\r\n\t\t[]\r\n\t)\r\n\r\n\treturn (\r\n\t\t<Layout\r\n\t\t\tpageTitle=\"Location Details\"\r\n\t\t\tpageHeading=\"New Location\"\r\n\t\t\tpageDescription=\"Provide as much information as you have for the new location.\"\r\n\t\t\tbreadcrumbs={breadcrumbs}>\r\n\t\t\t<FormProvider {...formMethods}>\r\n\t\t\t\t<Form id=\"LKLForm\"\r\n\t\t\t\t\tonSubmit={handleSubmit(data => {\r\n\t\t\t\t\t\tonSubmit(data, false)\r\n\t\t\t\t\t})}>\r\n\t\t\t\t\t<LocationDetails />\r\n\t\t\t\t\t<POCDetails />\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tas=\"nav\"\r\n\t\t\t\t\t\taria-label=\"page\"\r\n\t\t\t\t\t\tid=\"pageNav\"\r\n\t\t\t\t\t\tgridColumn=\"1 / -1\"\r\n\t\t\t\t\t\talignSelf=\"center\"\r\n\t\t\t\t\t\tgridGap={{ base: \"16px\", md: \"24px\" }}\r\n\t\t\t\t\t\tmarginTop={{ md: \"72\" }}\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tgridTemplateColumns={{ base: \"1\", md: \"repeat(14, 1fr)\", lg: \"repeat(12, 1fr)\" }}>\r\n\t\t\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"10 / 15\", lg: \"10 / 13\" }} gridRow={{ md: \"1\" }}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tCreate New Location\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"5 / 10\", lg: \"7 / 10\" }} gridRow={{ md: \"1\" }}>\r\n\t\t\t\t\t\t\t<Button size=\"full\" buttonType=\"secondary\" type=\"button\" onClick={() => navigate(\"/\")}>\r\n\t\t\t\t\t\t\t\tCreate and Add Another\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"1 / 2\" }} gridRow={{ md: \"1\" }} justifySelf=\"center\">\r\n\t\t\t\t\t\t\t<LinkButton type=\"button\" onClick={onDataLossOpen}>\r\n\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t</LinkButton>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<DataLossModal\r\n\t\t\t\t\t\tisOpen={isDataLossOpen}\r\n\t\t\t\t\t\tonClose={onDataLossClose}\r\n\t\t\t\t\t\tonLeave={() => {\r\n\t\t\t\t\t\t\tconst pageState: EventPageState = {\r\n\t\t\t\t\t\t\t\t// TODO: Uncomment once form integration is established\r\n\t\t\t\t\t\t\t\t// eventId: getValues(\"eventId\"),\r\n\t\t\t\t\t\t\t\teventId: eventId,\r\n\t\t\t\t\t\t\t\tformSection: \"locations\",\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tnavigate(\"/event\", { state: pageState })\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form>\r\n\t\t\t</FormProvider>\r\n\t\t</Layout>\r\n\t)\r\n}\r\n\r\nexport default LKLForm\r\n","import React from \"react\"\r\nimport moment from \"moment\"\r\nimport { getSavedForm } from \"../components/Utility/formHelpers\"\r\nimport { CTFFormProvider, CTFFormProviderProps } from \"../components/Forms/Form\"\r\nimport LKLForm from \"../components/Forms/LKLForm\"\r\n\r\nexport interface LklPageState {\r\n\teventId: string\r\n\teventLklId?: string\r\n}\r\n\r\ntype LklPageProps = {\r\n\tlocation: {\r\n\t\tstate: LklPageState\r\n\t}\r\n}\r\n\r\nconst addLKLPage: React.FC<LklPageProps> = (p: LklPageProps) => {\r\n\tlet savedLkl: LklDto | undefined\r\n\tif (p.location?.state?.eventLklId) {\r\n\t\tconst savedEvents = getSavedForm<Array<EventFormData>>(\"ctfForms\", \"events\")\r\n\t\tconst savedEvent = savedEvents && savedEvents.find((event: EventFormData) => event.eventId === p.location?.state?.eventId)\r\n\t\tsavedLkl = savedEvent?.eventLklDtoList?.find((lklDto: LklDto) => lklDto.eventLklId === p.location?.state?.eventLklId)\r\n\t\tif (savedLkl) {\r\n\t\t\tif (savedLkl.createdDateTime) savedLkl.createdDateTime = moment(savedLkl.createdDateTime).toDate()\r\n\t\t\tif (savedLkl.lastUpdatedDateTime) savedLkl.lastUpdatedDateTime = moment(savedLkl.lastUpdatedDateTime).toDate()\r\n\t\t}\r\n\t}\r\n\r\n\tconst formMode: CTFFormProviderProps[\"formMode\"] = typeof savedLkl === \"undefined\" ? \"create\" : \"edit\"\r\n\r\n\treturn (\r\n\t\t<CTFFormProvider formMode={formMode}>\r\n\t\t\t<LKLForm eventId={p.location?.state?.eventId} savedForm={savedLkl} />\r\n\t\t</CTFFormProvider>\r\n\t)\r\n}\r\n\r\nexport default addLKLPage\r\n","import \"core-js/modules/es6.array.reduce\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { createContext, useContext, forwardRef } from \"react\";\nimport Box from \"../Box\";\nexport var useFormControl = function useFormControl(props) {\n  var context = useFormControlContext();\n\n  if (!context) {\n    return props;\n  }\n\n  var keys = Object.keys(context);\n  return keys.reduce(function (acc, prop) {\n    /** Giving precedence to `props` over `context` */\n    acc[prop] = props[prop];\n\n    if (context) {\n      if (props[prop] == null) {\n        acc[prop] = context[prop];\n      }\n    }\n\n    return acc;\n  }, {});\n};\nvar FormControlContext = createContext();\nexport var useFormControlContext = function useFormControlContext() {\n  return useContext(FormControlContext);\n};\nvar FormControl = forwardRef(function (_ref, ref) {\n  var isInvalid = _ref.isInvalid,\n      isRequired = _ref.isRequired,\n      isDisabled = _ref.isDisabled,\n      isReadOnly = _ref.isReadOnly,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"isInvalid\", \"isRequired\", \"isDisabled\", \"isReadOnly\"]);\n\n  var context = {\n    isRequired: isRequired,\n    isDisabled: isDisabled,\n    isInvalid: isInvalid,\n    isReadOnly: isReadOnly\n  };\n  return jsx(FormControlContext.Provider, {\n    value: context\n  }, jsx(Box, _extends({\n    role: \"group\",\n    ref: ref\n  }, rest)));\n});\nFormControl.displayName = \"FormControl\";\nexport default FormControl;"],"sourceRoot":""}