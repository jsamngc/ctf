{"version":3,"sources":["webpack:///./node_modules/@chakra-ui/core/dist/es/FormLabel/index.js","webpack:///./src/components/FormSections/LocationDetails.tsx","webpack:///./node_modules/@material-ui/icons/esm/Close.js","webpack:///./node_modules/@material-ui/icons/esm/Person.js","webpack:///./src/components/FormIconInput.tsx","webpack:///./node_modules/@material-ui/icons/esm/Email.js","webpack:///./node_modules/@material-ui/icons/esm/AddCircle.js","webpack:///./node_modules/@material-ui/icons/esm/HighlightOff.js","webpack:///./src/components/POCEmail.tsx","webpack:///./node_modules/@material-ui/icons/esm/Phone.js","webpack:///./src/components/POCPhone.tsx","webpack:///./src/components/POCBox.tsx","webpack:///./src/components/FormSections/POCDetails.tsx","webpack:///./src/components/Utility/lklFormHelpers.tsx","webpack:///./src/components/Forms/LKLForm.tsx","webpack:///./src/pages/addLKL.tsx","webpack:///./node_modules/@chakra-ui/core/dist/es/FormControl/index.js"],"names":["RequiredIndicator","props","colorMode","as","ml","color","light","dark","children","FormLabel","_ref","ref","formControl","fontSize","pr","pb","opacity","isDisabled","fontWeight","textAlign","verticalAlign","display","isRequired","displayName","filterOnTextChange","e","target","value","replace","validateLongLat","range","regexMatch","RegExp","inRange","parseFloat","LocationDetails","useFormContext","trigger","register","errors","setValue","formState","useCTFFormContext","isView","isEdit","dirtyFields","countryRef","useRef","postRef","stateRef","locationTypeRef","descriptionRef","watchCountry","useWatch","name","watchLongitude","watchLatitude","watchStreetAddress","watchCity","countries","useMemo","countriesList","countries_json","filter","_","index","push","label","sort","countryA","countryB","localeCompare","undefined","locationTypes_json","locTypeA","locTypeB","stateComp","Box","gridColumn","base","md","lg","labelText","labelId","required","rules","onFocus","current","focus","render","onChange","onBlur","id","aria-labelledby","options","states_json","size","disabled","validationState","stateCd","ValidationState","ERROR","errorMessage","message","changes","selectedItem","provinceComp","maxLength","Form","title","showDivider","Grid","gridGap","gridTemplateColumns","lklTitle","country","placeholder","posts_json","post","country_cd","city","longitude","validate","latitude","locationType","pattern","locationDesc","replaceMSWordChars","createSvgIcon","createElement","d","FormIconInput","p","icon","input","FormControl","fontFamily","lineHeight","Text","position","mr","m","React","trim","EMAIL_VALIDATION_PATTERN","join","POCEmail","namePrefix","addable","isFirst","onEmptyEmail","triggerAllFields","onAdd","onRemove","split","prefix","pocIndex","emailList","setNumber","setNameOrder","nameOfInput","nameEmailAddress","nameEmailType","watchEmailAddress","watchEmailType","errorsPOC","pocList","errorsEmailDto","dirtyPOC","dirtyEmailDto","errorFree","emailAddress","emailType","sectionDirty","validateAddable","errorMsgExist","sm","Email","emailTypes_json","alignSelf","justifySelf","mt","AddCircle","cursor","onClick","HighlightOff","PHONE_REGEX","POCPhone","onEmptyPhone","onPhoneNumberChange","phoneList","namePhoneNumber","namePhoneType","watchPhoneNumber","watchPhoneType","errorsPhoneList","dirtyPhoneList","phoneNum","phoneTypeCd","Phone","phoneTypes_json","phoneListAllowed","emailListAllowed","POCBox","initialEmailList","initialPhoneList","setError","clearErrors","watch","errorFirstName","givenName","errorLastName","surName","useState","nameFieldList","contactFieldList","setContactFieldList","length","map","setPhoneList","setEmailList","isNameFieldsEmpty","Object","values","every","isAllPhoneEmailEmpty","filterOnNameBlur","forEach","type","Close","right","border","borderStyle","borderColor","padding","hidden","defaultValue","Person","charAt","key","prevEmailList","unused","email","includes","prevList","onAddEmail","emailName","prevPhoneList","phone","onAddPhone","phoneName","POCDetails","setPocIndex","pocBoxes","setPocBoxes","isEmailListEmpty","isPhoneListEmpty","boxName","currPocBoxes","replaceValue","dataObj","replacement","prototype","hasOwnProperty","call","LKLForm","lklDto","activeIndicator","lookupLklDto","postCd","lklAddressDto","lklPocListDto","addressDto","addressTypeCd","address1","address2","countryCd","postalCode","province","pageHeading","pageDescription","breadcrumbs","eventId","savedForm","updateSavedForm","useSavedForm","useDisclosure","isDataLossOpen","isOpen","onDataLossOpen","onOpen","onDataLossClose","onClose","pointOfContact","streetAddress","additionalAddress","lklPocListDtoData","personDto","personId","personEmailDtoList","personPhoneDtoList","emailData","emailDto","phoneData","phoneDto","formMethods","useForm","mode","defaultValues","handleSubmit","onSubmit","useCallback","data","skipNavigate","newLklDto","lklFormData","pocListDtoList","poc","personEmailId","emailId","personPhoneId","phoneId","lklPocId","eventLklId","lklTypeCd","createdDateTime","Date","lastUpdatedDateTime","lookupLklId","lklAddressId","addressId","LlkFormData_To_LklDto","allEvents","getSavedForm","selectedEvent","find","event","selectedEventIndex","findIndex","savedLklIndex","eventLklDtoList","splice","pageState","formSection","navigate","state","Layout","pageTitle","aria-label","marginTop","height","gridRow","buttonType","DataLossModal","onLeave","addLKLPage","savedLkl","location","savedEvents","savedEvent","moment","toDate","formMode","useFormControl","context","useFormControlContext","keys","reduce","acc","prop","FormControlContext","isInvalid","isReadOnly","rest","Provider","role"],"mappings":"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","file":"component---src-pages-add-lkl-tsx-5aaef1bd7afa7996e34a.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { forwardRef } from \"react\";\nimport Box from \"../Box\";\nimport { useFormControl } from \"../FormControl\";\nimport { useColorMode } from \"../ColorModeProvider\";\nexport var RequiredIndicator = function RequiredIndicator(props) {\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var color = {\n    light: \"red.500\",\n    dark: \"red.300\"\n  };\n  return jsx(Box, _extends({\n    as: \"span\",\n    ml: 1,\n    color: color[colorMode],\n    \"aria-hidden\": \"true\",\n    children: \"*\"\n  }, props));\n};\nexport var FormLabel = forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\"]);\n\n  var formControl = useFormControl(props);\n  return jsx(Box, _extends({\n    ref: ref,\n    fontSize: \"md\",\n    pr: \"12px\",\n    pb: \"4px\",\n    opacity: formControl.isDisabled ? \"0.4\" : \"1\",\n    fontWeight: \"medium\",\n    textAlign: \"left\",\n    verticalAlign: \"middle\",\n    display: \"inline-block\",\n    as: \"label\"\n  }, props), children, formControl.isRequired && jsx(RequiredIndicator, null));\n});\nFormLabel.displayName = \"FormLabel\";\nexport default FormLabel;","import React, { useRef, useMemo } from \"react\"\r\nimport { FormSection, replaceMSWordChars } from \"../Forms/Form\"\r\nimport { Box, Grid } from \"@chakra-ui/core\"\r\nimport { Controller, useFormContext, useWatch } from \"react-hook-form\"\r\nimport { Switch, Select, FormInput, Text, ValidationState, Textarea } from \"@c1ds/components\"\r\nimport { useCTFFormContext } from \"../Forms/Form\"\r\nimport countries_json from \"../../../content/countries.json\"\r\nimport posts_json from \"../../../content/posts.json\"\r\nimport states_json from \"../../../content/states.json\"\r\nimport locationTypes_json from \"../../../content/locationTypes.json\"\r\n\r\nconst LocationDetails: React.FC = () => {\r\n\tconst { trigger, register, errors, setValue, formState } = useFormContext<LklDto>()\r\n\tconst { isEdit, isView } = useCTFFormContext()\r\n\tconst { dirtyFields } = formState\r\n\r\n\tconst countryRef = useRef<HTMLButtonElement>(null)\r\n\tconst postRef = useRef<HTMLButtonElement>(null)\r\n\tconst stateRef = useRef<HTMLButtonElement>(null)\r\n\tconst locationTypeRef = useRef<HTMLButtonElement>(null)\r\n\tconst descriptionRef = useRef<HTMLTextAreaElement>(null)\r\n\r\n\tconst watchCountry: string | undefined = useWatch({ name: \"country\" })\r\n\tconst watchLongitude: string | undefined = useWatch({ name: \"longitude\" })\r\n\tconst watchLatitude: string | undefined = useWatch({ name: \"latitude\" })\r\n\tconst watchStreetAddress: string | undefined = useWatch({ name: \"streetAddress\" })\r\n\tconst watchCity: string | undefined = useWatch({ name: \"city\" })\r\n\r\n\t// Temporarily decrease size of country list while performance is investigated\r\n\tconst countries = useMemo(() => {\r\n\t\tconst countriesList = countries_json.filter((_, index) => index % 5 === 0)\r\n\t\tcountriesList.push({\r\n\t\t\tlabel: \"UNITED STATES OF AMERICA\",\r\n\t\t\tvalue: \"USA\",\r\n\t\t})\r\n\t\tcountriesList.push({\r\n\t\t\tlabel: \"JAPAN\",\r\n\t\t\tvalue: \"JPN\",\r\n\t\t})\r\n\t\tcountriesList.sort((countryA, countryB) => countryA.label.localeCompare(countryB.label))\r\n\t\treturn countriesList\r\n\t}, [])\r\n\r\n\tconst locationTypes = [\r\n\t\t{\r\n\t\t\tlabel: \" \",\r\n\t\t\tvalue: undefined,\r\n\t\t},\r\n\t\t...locationTypes_json.sort((locTypeA, locTypeB) => locTypeA.label.localeCompare(locTypeB.label)),\r\n\t]\r\n\r\n\tconst isDisabled = isView\r\n\r\n\tconst stateComp = (\r\n\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 3\", lg: \"span 7\" }}>\r\n\t\t\t<FormInput labelText=\"State\" labelId=\"stateLabel\" required>\r\n\t\t\t\t<Controller\r\n\t\t\t\t\tname=\"stateCd\"\r\n\t\t\t\t\trules={{\r\n\t\t\t\t\t\trequired: \"Please select a State\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonFocus={() => stateRef.current?.focus()}\r\n\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tref={stateRef}\r\n\t\t\t\t\t\t\tid=\"stateCd\"\r\n\t\t\t\t\t\t\tname=\"stateCd\"\r\n\t\t\t\t\t\t\taria-labelledby=\"stateLabel\"\r\n\t\t\t\t\t\t\toptions={states_json}\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tvalidationState={errors?.stateCd ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\terrorMessage={errors?.stateCd?.message}\r\n\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\tonChange(changes.selectedItem?.value)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\t\tdirtyFields?.stateCd && onBlur()\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</FormInput>\r\n\t\t</Box>\r\n\t)\r\n\tconst provinceComp = (\r\n\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 3\", lg: \"span 7\" }}>\r\n\t\t\t<FormInput labelText=\"Province\" labelId=\"provinceLabel\">\r\n\t\t\t\t<Text\r\n\t\t\t\t\tref={register}\r\n\t\t\t\t\tid=\"province\"\r\n\t\t\t\t\tname=\"province\"\r\n\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\tmaxLength={50}\r\n\t\t\t\t/>\r\n\t\t\t</FormInput>\r\n\t\t</Box>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<FormSection title=\"\" showDivider={true}>\r\n\t\t\t<Grid\r\n\t\t\t\tgridColumn={{ base: \"1 / -1\", md: \"1 / 7\" , lg: \"1 / 9\" }}\r\n\t\t\t\tgridGap={{ base: \"16px\", md: \"24px\" }}\r\n\t\t\t\tgridTemplateColumns={{ base: \"1\", md: \"repeat(12,1fr)\" }}>\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 11\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"Location Title\" labelId=\"lklTitleLabel\" required>\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tid=\"lklTitle\"\r\n\t\t\t\t\t\t\tname=\"lklTitle\"\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\t\t\tvalidationState={errors?.lklTitle ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\terrorMessage={errors?.lklTitle?.message}\r\n\t\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\t\trequired: \"Please enter a Location Title\",\r\n\t\t\t\t\t\t\t\tmaxLength: { value: 50, message: \"Location Title cannot exceed 25 characters\" },\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tmaxLength={50}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 1\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"Active\" labelId=\"activeIndicatorLabel\">\r\n\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\tid=\"activeIndicator\"\r\n\t\t\t\t\t\t\tname=\"activeIndicator\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tvalue=\"Active\"\r\n\t\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"1 / 4\", lg: \"1 / 5\" }}>\r\n\t\t\t\t<FormInput labelText=\"Country\" labelId=\"countryLabel\" required>\r\n\t\t\t\t\t<Controller\r\n\t\t\t\t\t\tname=\"country\"\r\n\t\t\t\t\t\trules={{\r\n\t\t\t\t\t\t\trequired: \"Please select a Country\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonFocus={() => countryRef.current?.focus()}\r\n\t\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tref={countryRef}\r\n\t\t\t\t\t\t\t\tid=\"country\"\r\n\t\t\t\t\t\t\t\tname=\"country\"\r\n\t\t\t\t\t\t\t\taria-labelledby=\"countryLabel\"\r\n\t\t\t\t\t\t\t\toptions={countries}\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\t\tvalidationState={errors?.country ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\t\terrorMessage={errors?.country?.message}\r\n\t\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\t\tonChange(changes.selectedItem?.value)\r\n\t\t\t\t\t\t\t\t\tsetValue(\"post\", \"\")\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\t\t\tdirtyFields?.country && onBlur()\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Type to filter countries\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"4 / 7\",  lg: \"span 4\" }}>\r\n\t\t\t\t<FormInput labelText=\"Post\" labelId=\"postLabel\" required>\r\n\t\t\t\t\t<Controller\r\n\t\t\t\t\t\tname=\"post\"\r\n\t\t\t\t\t\trules={{\r\n\t\t\t\t\t\t\trequired: \"Please select a Post\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonFocus={() => postRef.current?.focus()}\r\n\t\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tref={postRef}\r\n\t\t\t\t\t\t\t\tid=\"post\"\r\n\t\t\t\t\t\t\t\tname=\"post\"\r\n\t\t\t\t\t\t\t\taria-labelledby=\"postLabel\"\r\n\t\t\t\t\t\t\t\toptions={posts_json.filter(post => post.country_cd === watchCountry)}\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\tdisabled={isDisabled ? true : (watchCountry ? false : true)}\r\n\t\t\t\t\t\t\t\tvalidationState={errors?.post ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\t\terrorMessage={errors?.post?.message}\r\n\t\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\t\tonChange(changes.selectedItem?.value)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\t\t\tdirtyFields?.post && onBlur()\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"1 / 7\",  lg: \"span 8\" }}>\r\n\t\t\t\t<FormInput labelText=\"Street Address\" labelId=\"streetAddressLabel\">\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tid=\"streetAddress\"\r\n\t\t\t\t\t\tname=\"streetAddress\"\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\tfilterOnTextChange(changes)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonBlur={() => trigger(\"city\")}\r\n\t\t\t\t\t\tmaxLength={200}\r\n\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"1 / 7\",  lg: \"span 8\" }}>\r\n\t\t\t\t<FormInput labelText=\"Apartment, Suite, Other\" labelId=\"additionalAddressLabel\">\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t\tid=\"additionalAddress\"\r\n\t\t\t\t\t\tname=\"additionalAddress\"\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\t\tmaxLength={200}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Grid\r\n\t\t\t\tgridColumn={{ base: \"1 / -1\", md:\"1 / 7\", lg: \"1 / 9\" }}\r\n\t\t\t\tgridGap={{ base: \"16px\", md: \"24px\" }}\r\n\t\t\t\tgridTemplateColumns={{ base: \"repeat(4,1fr)\", md: \"repeat(8,1fr)\", lg: \"repeat(22,1fr)\" }}>\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 3\", lg: \"span 11\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"City\" labelId=\"cityLabel\">\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tid=\"city\"\r\n\t\t\t\t\t\t\tname=\"city\"\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tvalidationState={errors?.city ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\terrorMessage={errors?.city?.message}\r\n\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\tfilterOnTextChange(changes)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tmaxLength={30}\r\n\t\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\t\trequired: watchStreetAddress && !watchCity ? \"City also required with Street Address\" : false,\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t\t{watchCountry === \"USA\" ? stateComp : provinceComp}\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / 2\", md: \"span 2\", lg: \"span 4\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"Postal Code\" labelId=\"postalCodeLabel\">\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t\t\tid=\"postalCode\"\r\n\t\t\t\t\t\t\tname=\"postalCode\"\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\t\t\tmaxLength={10}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / 3\", md: \"1 / 4\", lg: \"1 / 3\" }}>\r\n\t\t\t\t<FormInput labelText=\"Longitude\" labelId=\"longitudeLabel\">\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tid=\"longitude\"\r\n\t\t\t\t\t\tname=\"longitude\"\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\tvalidationState={errors?.longitude ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\terrorMessage={errors?.longitude?.message}\r\n\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\ttrigger(\"latitude\")\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\tvalidate: value => (validateLongLat(value, 180) ? true : \"Invalid input\"),\r\n\t\t\t\t\t\t\trequired: watchLatitude && !watchLongitude ? \"Longitude value also required\" : false,\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"3 / 5\", md: \"4 / 7\", lg: \"span 2\" }}>\r\n\t\t\t\t<FormInput labelText=\"Latitude\" labelId=\"latitudeLabel\">\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tid=\"latitude\"\r\n\t\t\t\t\t\tname=\"latitude\"\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\tvalidationState={errors?.latitude ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\terrorMessage={errors?.latitude?.message}\r\n\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\ttrigger(\"longitude\")\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\tvalidate: value => (validateLongLat(value, 90) ? true : \"Invalid input\"),\r\n\t\t\t\t\t\t\trequired: watchLongitude && !watchLatitude ? \"Latitude value also required\" : false,\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"1 / 7\", lg: \"span 4\" }}>\r\n\t\t\t\t<FormInput labelText=\"Location Type\" labelId=\"locationTypeLabel\">\r\n\t\t\t\t\t<Controller\r\n\t\t\t\t\t\tname=\"locationType\"\r\n\t\t\t\t\t\tonFocus={() => locationTypeRef.current?.focus()}\r\n\t\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tref={locationTypeRef}\r\n\t\t\t\t\t\t\t\tid=\"locationType\"\r\n\t\t\t\t\t\t\t\tname=\"locationType\"\r\n\t\t\t\t\t\t\t\taria-labelledby=\"locationTypeLabel\"\r\n\t\t\t\t\t\t\t\toptions={locationTypes_json}\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\t\tvalidationState={errors?.locationType ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\t\terrorMessage={errors?.locationType?.message}\r\n\t\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\t\tonChange(changes.selectedItem?.value)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\t\t\tdirtyFields?.locationType && onBlur()\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"1 / 7\", lg: \"span 8\" }}>\r\n\t\t\t\t<FormInput labelText=\"Description\" labelId=\"descriptionLabel\">\r\n\t\t\t\t\t<Controller\r\n\t\t\t\t\t\tname=\"locationDesc\"\r\n\t\t\t\t\t\trules={{\r\n\t\t\t\t\t\t\tpattern: {\r\n\t\t\t\t\t\t\t\tvalue: /^[A-Za-z0-9`~!@#$%^&*()_+•\\-=[\\]:\";',./?\\s]*$/,\r\n\t\t\t\t\t\t\t\tmessage: \"Please enter only plain text in the Description field\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tmaxLength: { value: 500, message: \"Description cannot exceed 500 characters\" },\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonFocus={() => descriptionRef.current?.focus()}\r\n\t\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t\t<Textarea\r\n\t\t\t\t\t\t\t\tref={descriptionRef}\r\n\t\t\t\t\t\t\t\tid=\"locationDesc\"\r\n\t\t\t\t\t\t\t\tname=\"locationDesc\"\r\n\t\t\t\t\t\t\t\taria-labelledby=\"descriptionLabel\"\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\tmaxLength={500}\r\n\t\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\t\tvalidationState={errors?.locationDesc ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\t\terrorMessage={errors?.locationDesc?.message}\r\n\t\t\t\t\t\t\t\tonChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n\t\t\t\t\t\t\t\t\te.target.value = replaceMSWordChars(e.target.value).replace(\r\n\t\t\t\t\t\t\t\t\t\t/[^A-Za-z0-9`~!@#$%^&*()_+•\\-=[\\]:\";',./?\\s]/g,\r\n\t\t\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\tonChange(e)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\t\t</FormSection>\r\n\t)\r\n}\r\n\r\nconst filterOnTextChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n\te.target.value = e.target.value.replace(/^[^A-Za-z0-9]+/, \"\")\r\n}\r\n\r\nconst validateLongLat = (value: string, range: number) => {\r\n\tif (!value) {\r\n\t\treturn true\r\n\t}\r\n\tconst regexMatch = RegExp(/^([-+]?)([\\d]{1,3})([.]?)([\\d]*)$/)\r\n\tconst inRange = parseFloat(value) >= -range && parseFloat(value) <= range\r\n\treturn regexMatch && inRange\r\n}\r\n\r\nexport default LocationDetails\r\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import { FormControl, FormLabel, Text, Box } from \"@chakra-ui/core\"\r\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\r\nimport * as React from \"react\"\r\n\r\ntype FormIconInputProps = {\r\n\tlabelText: string\r\n\tlabelId: string\r\n\trequired?: boolean\r\n\tdisabled?: boolean\r\n    children: React.ReactElement<React.InputHTMLAttributes<HTMLElement>>\r\n    icon?: typeof SvgIcon\r\n}\r\n\r\nexport const FormIconInput: React.FC<FormIconInputProps> = (p: FormIconInputProps) => {\r\n\tconst { labelText, labelId, children, required, icon, ...input } = p\r\n\r\n\treturn (\r\n\t\t<FormControl>\r\n\t\t\t<FormLabel\r\n\t\t\t\tid={labelId}\r\n\t\t\t\tfontFamily=\"body\"\r\n\t\t\t\tfontSize=\"label\"\r\n\t\t\t\tfontWeight=\"normal\"\r\n\t\t\t\tpb={0}\r\n\t\t\t\tcolor=\"label\"\r\n\t\t\t\tdisplay=\"block\"\r\n\t\t\t\tlineHeight=\"label\">\r\n\t\t\t\t{required && (\r\n\t\t\t\t\t<Text color=\"required\" as=\"span\">\r\n\t\t\t\t\t\t*&nbsp;\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t)}\r\n                {icon && <Box position=\"absolute\" as={icon} mr={4} color=\"label\" />}\r\n\t\t\t\t<Text m={0} ml={28}>{labelText}</Text>\r\n\t\t\t</FormLabel>\r\n\t\t\t{React.cloneElement(children, {\r\n\t\t\t\trequired,\r\n\t\t\t\t\"aria-labelledby\": `${labelId} ${children.props[\"aria-labelledby\"] ?? \"\"}`.trim(),\r\n\t\t\t\t...input,\r\n\t\t\t})}\r\n\t\t</FormControl>\r\n\t)\r\n}\r\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"\n}), 'Email');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddCircle');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'HighlightOff');","import React from \"react\"\r\nimport { Box, Grid } from \"@chakra-ui/core\"\r\nimport { Controller, useFormContext, useWatch } from \"react-hook-form\"\r\nimport { Select, FormInput, Text, ValidationState } from \"@c1ds/components\"\r\n\r\nimport { useCTFFormContext } from \"./Forms/Form\"\r\nimport { FormIconInput } from './FormIconInput'\r\nimport { Email, AddCircle, HighlightOff } from \"@material-ui/icons\"\r\n\r\nimport emailTypes_json from \"../../content/emailTypes.json\"\r\n\r\n/**\r\n  * Email field validation pattern\r\n  * // '(?:(?:\"[A-Za-z0-9!#&\\'... --> Local-part (quoted) - Allows alphanumeric, !#$%&'*+-/=?^_`{|}~, and leading/terminating/consecutive dots\r\n  * // '(?:[A-Za-z0-9!#&\\'+\\\\-... --> Local-part (non-quoted): Allows alphanumeric, !#$%&'*+-/=?^_`{|}~, and non-leading, non-terminating, non-consecutive dots\r\n  * // '(?:(?:[A-Za-z0-9]{1,63... --> Domain-part (second/lower level domains): Allows alphanumeric and non-leading, non-terminating hyphens\r\n  * // '(?:(?:[A-Za-z0-9]-*)*[... --> Domain-part (top level domains): Allows alphanumeric and non-leading, non-terminating hyphens. Requires at least one non-numeric character\r\n  */\r\n\r\n const EMAIL_VALIDATION_PATTERN = new RegExp([\r\n    '^(?:',\r\n    '(?:(?:\"[A-Za-z0-9!#&\\'+\\\\-/?_`{}~.]*\")|',                                         \r\n    '(?:[A-Za-z0-9!#&\\'+\\\\-/?_`{}~]+(?:\\\\.?[A-Za-z0-9!#&\\'+\\\\-/?_`{}~])*))',           \r\n    '@',\r\n    '(?:(?:[A-Za-z0-9]{1,63}\\\\.)|(?:[A-Za-z0-9][A-Za-z0-9\\\\-]{1,61}[A-Za-z0-9]\\\\.))+', \r\n    '(?:(?:[A-Za-z0-9]-*)*[A-Za-z](?:-*[A-Za-z0-9])*)',                                \r\n    ')$',\r\n    ].join(''))\r\n\r\ntype POCEmailProps = {\r\n    namePrefix: string\r\n    isFirst : boolean\r\n    addable: boolean\r\n    onEmptyEmail: boolean\r\n    triggerAllFields : () => void\r\n    onAdd : () => void\r\n    onRemove : () => void\r\n}\r\n\r\n// One set of Email address and type\r\nconst POCEmail: React.FC<POCEmailProps> = ( p : POCEmailProps) => {\r\n    const { namePrefix, addable, isFirst, onEmptyEmail,\r\n            triggerAllFields, onAdd, onRemove } = p\r\n    const { isView } = useCTFFormContext()\r\n    const { errors, formState, register } = useFormContext<LKLFormData>()\r\n    const { dirtyFields } = formState\r\n\r\n    // namePrefix : {prefix}-{index of POC}-{string \"emailList\"}-{Email set index}\r\n    // Ex, pocList-0-emailList-0\r\n    const [ prefix, pocIndex, emailList ,setNumber ] = namePrefix.split('-')\r\n    const setNameOrder = (nameOfInput : string) => {\r\n        return `${prefix}[${pocIndex}][${emailList}][${setNumber}][${nameOfInput}]`\r\n    }\r\n    \r\n    const nameEmailAddress = setNameOrder('emailAddress')\r\n    const nameEmailType = setNameOrder(`emailType`)\r\n    \r\n    const watchEmailAddress: string | undefined = useWatch({ name: nameEmailAddress })\r\n    const watchEmailType: string | undefined = useWatch({ name: nameEmailType })\r\n    \r\n    // Get Errors specific to this email set\r\n    const errorsPOC = errors && errors.pocList && errors.pocList[+pocIndex] ? errors.pocList[+pocIndex] : null\r\n    const errorsEmailDto = errorsPOC && errorsPOC.emailList ? errorsPOC.emailList[+setNumber] : null\r\n\r\n    // Get Dirty fields in the email set\r\n    const dirtyPOC = dirtyFields && dirtyFields.pocList && dirtyFields.pocList[+pocIndex] ? dirtyFields.pocList[+pocIndex] : null\r\n    const dirtyEmailDto = dirtyPOC && dirtyPOC.emailList ? dirtyPOC.emailList[+setNumber] : null\r\n\r\n    const errorFree = errorsEmailDto?.emailAddress === undefined && errorsEmailDto?.emailType === undefined\r\n    const sectionDirty = dirtyEmailDto?.emailAddress !== undefined && dirtyEmailDto?.emailType !== undefined\r\n    const validateAddable = (errorFree && (onEmptyEmail ? sectionDirty : true ) && addable && !isView)\r\n\r\n    const errorMsgExist = errorsEmailDto?.emailType?.message !== '' && errorsEmailDto?.emailType?.message !== undefined\r\n    return (\r\n        <>\r\n            <Box gridColumn={{ base: \"1 / -1\", sm: \"1 / 9\", md: \"1 / 7\" }}>\r\n                <FormIconInput labelText=\"Email Address\" labelId=\"emailAddressLabel\" icon={Email}>\r\n                    <Text\r\n                        ref={register({\r\n                            required: watchEmailType && !watchEmailAddress ? \"Email Address is required\" : false,\r\n                            pattern: {\r\n                                value: EMAIL_VALIDATION_PATTERN,\r\n                                message: \"Please enter valid email in the field\",\r\n                            }\r\n                        })}\r\n                        id={nameEmailAddress}\r\n                        name={nameEmailAddress}\r\n                        size=\"full\"\r\n                        disabled={isView}\r\n                        validationState={errorsEmailDto?.emailAddress ? ValidationState.ERROR : undefined}\r\n                        errorMessage={errorsEmailDto?.emailAddress?.message}\r\n                        // Email validation covers email value\r\n                        // onChange={onEmailAddressChange}\r\n                        maxLength={67}\r\n                        onBlur={() => {\r\n                            triggerAllFields()\r\n                        }}\r\n                    />\r\n                </FormIconInput>\r\n            </Box>\r\n\r\n            <Box gridColumn={{ base: \"1 / 13\", sm: \"9 / 13 \", md: \"7 / 13\" }}>\r\n                <Grid\r\n                    gridColumn={{ base: \"1 / -1\"}}\r\n                    gridGap={{ base: \"8px\", md: \"16px\" }}\r\n                    gridTemplateColumns={{ base: \"repeat(12,1fr)\" }}>\r\n                    <Box gridColumn={{ base: \"1 / 12\" }}>\r\n                        <FormInput labelText=\"Type\" labelId=\"emailTypeLabel\">\r\n                            <Controller\r\n                                name={nameEmailType}\r\n                                rules={{\r\n                                    required: watchEmailAddress && !watchEmailType ? \"Email Type is required\" : false\r\n                                }}\r\n                                render={({ onChange, value }) => (\r\n                                    <Select\r\n                                        id={nameEmailType}\r\n                                        name={nameEmailType}\r\n                                        aria-labelledby=\"emailTypeLabel\"\r\n                                        options={emailTypes_json}\r\n                                        size=\"full\"\r\n                                        disabled={isView}\r\n                                        validationState={errorsEmailDto?.emailType ? ValidationState.ERROR : undefined}\r\n                                        errorMessage={ errorsEmailDto?.emailType?.message}\r\n                                        onChange={changes => {\r\n                                            onChange(changes.selectedItem?.value)\r\n                                        }}\r\n                                        onBlur={() => {\r\n                                            triggerAllFields()\r\n                                        }}\r\n                                        value={value}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </FormInput>\r\n                    </Box>\r\n                    <Box gridColumn={{ base: \"12 / 13\"}} alignSelf=\"center\" justifySelf=\"center\">\r\n                        {isFirst ?\r\n                            <Box mt={errorFree ? 32 : errorMsgExist ? 0 : 32} as={AddCircle} \r\n                                cursor={validateAddable ? \"pointer\" : \"cursor\"} \r\n                                color={validateAddable ? \"clickable\" : \"disabledInputText\"}\r\n                                onClick={() => {\r\n                                    if(validateAddable) onAdd()\r\n                                }}\r\n                                />\r\n                        :\r\n                            <Box mt={errorFree ? 32 : errorMsgExist ? 0 : 32} as={HighlightOff} cursor=\"pointer\" color=\"clickable\" \r\n                                onClick={onRemove}/>\r\n                        }\r\n                    </Box>\r\n                </Grid>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default POCEmail\r\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z\"\n}), 'Phone');","import React from \"react\"\r\nimport { Box, Grid } from \"@chakra-ui/core\"\r\nimport { Controller, useFormContext, useWatch } from \"react-hook-form\"\r\nimport { Select, FormInput, Text, ValidationState } from \"@c1ds/components\"\r\n\r\nimport { useCTFFormContext } from \"./Forms/Form\"\r\nimport { FormIconInput } from './FormIconInput'\r\nimport { Phone, AddCircle, HighlightOff } from \"@material-ui/icons\"\r\n\r\nimport phoneTypes_json from \"../../content/phoneTypes.json\"\r\n\r\nconst PHONE_REGEX = /^([+]?\\d{1,2}[.-\\s]?)?(\\(?\\d{3}\\)?[\\s.-]?){2}\\d{4}$/\r\n\r\ntype POCPhoneProps = {\r\n    namePrefix: string\r\n    isFirst : boolean\r\n    addable: boolean\r\n    onEmptyPhone: boolean\r\n    onPhoneNumberChange : (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\r\n    triggerAllFields : () => void\r\n    onAdd : () => void\r\n    onRemove : () => void\r\n}\r\n\r\n// One set of Phone number and type\r\nconst POCPhone: React.FC<POCPhoneProps> = ( p : POCPhoneProps) => {\r\n    const {namePrefix,  isFirst, addable, onEmptyPhone,\r\n            onPhoneNumberChange, triggerAllFields, onAdd, onRemove } = p\r\n    const { isView } = useCTFFormContext()\r\n    const { errors, formState, register } = useFormContext<LKLFormData>()\r\n    const { dirtyFields } = formState\r\n\r\n    // namePrefix : {prefix}-{index of POC}-{string \"phoneList\"}-{Phone set index}\r\n    // Ex, pocList-0-phoneList-0\r\n    const [ prefix, pocIndex, phoneList ,setNumber ] = namePrefix.split('-')\r\n    const setNameOrder = (nameOfInput : string) => {\r\n        return `${prefix}[${pocIndex}][${phoneList}][${setNumber}][${nameOfInput}]`\r\n    }\r\n    const namePhoneNumber = setNameOrder('phoneNum')\r\n    const namePhoneType = setNameOrder(`phoneTypeCd`)\r\n\r\n    const watchPhoneNumber: string | undefined = useWatch({ name: namePhoneNumber })\r\n    const watchPhoneType: string | undefined = useWatch({ name: namePhoneType })\r\n    \r\n    // Get Errors specific to this phone set\r\n    const errorsPOC = errors && errors.pocList && errors.pocList[+pocIndex] ? errors.pocList[+pocIndex] : null\r\n    const errorsPhoneList = errorsPOC && errorsPOC.phoneList ? errorsPOC.phoneList[+setNumber] : null\r\n\r\n    // Get Dirty fields in the email set\r\n    const dirtyPOC = dirtyFields && dirtyFields.pocList && dirtyFields.pocList[+pocIndex] ? dirtyFields.pocList[+pocIndex] : null\r\n    const dirtyPhoneList = dirtyPOC && dirtyPOC.phoneList ? dirtyPOC.phoneList[+setNumber] : null\r\n\r\n    const errorFree = errorsPhoneList?.phoneNum === undefined && errorsPhoneList?.phoneTypeCd === undefined\r\n    const sectionDirty = dirtyPhoneList?.phoneNum && dirtyPhoneList?.phoneTypeCd\r\n    const validateAddable = (errorFree && (onEmptyPhone ? sectionDirty : true) && addable && !isView)\r\n\r\n    const errorMsgExist = errors[namePhoneType]?.message  !== undefined && errors[namePhoneType]?.message !== ''\r\n    return (\r\n        <>\r\n            <Box gridColumn={{ base: \"1 / -1\", sm: \"1 / 9\", md: \"1 / 7\" }}>\r\n                <FormIconInput labelText=\"Phone Number\" labelId=\"phoneNumberLabel\" icon={Phone}>\r\n                    <Text\r\n                        ref={register({\r\n                            required: watchPhoneType && !watchPhoneNumber ? \"Phone Number is required\" : false,\r\n                            pattern: {\r\n                                value: PHONE_REGEX,\r\n                                message: \"Please enter valid phone number in the field\",\r\n                            }\r\n                        })}\r\n                        id={namePhoneNumber}\r\n                        name={namePhoneNumber}\r\n                        size=\"full\"\r\n                        disabled={isView}\r\n                        validationState={errorsPhoneList?.phoneNum ? ValidationState.ERROR : undefined}\r\n                        errorMessage={errorsPhoneList?.phoneNum?.message}\r\n                        onChange={onPhoneNumberChange}\r\n                        maxLength={30}\r\n                        onBlur={() => {\r\n                            triggerAllFields()\r\n                        }}\r\n                    />\r\n                </FormIconInput>\r\n            </Box>\r\n\r\n            <Box gridColumn={{ base: \"1 / 13\", sm: \"9 / 13 \", md: \"7 / 13\" }}>\r\n                <Grid\r\n                    gridColumn={{ base: \"1 / -1\"}}\r\n                    gridGap={{ base: \"8px\", md: \"16px\" }}\r\n                    gridTemplateColumns={{ base: \"repeat(12,1fr)\" }}>\r\n                    <Box gridColumn={{ base: \"1 / 12\" }}>\r\n                        <FormInput labelText=\"Type\" labelId=\"phoneTypeLabel\">\r\n                            <Controller\r\n                                name={namePhoneType}\r\n                                rules={\r\n                                    {required: watchPhoneNumber && !watchPhoneType ? \"Phone Type is required\" : false\r\n                                }}\r\n                                render={({ onChange, value }) => (\r\n                                    <Select\r\n                                        id={namePhoneType}\r\n                                        name={namePhoneType}\r\n                                        aria-labelledby=\"phoneTypeLabel\"\r\n                                        options={phoneTypes_json}\r\n                                        size=\"full\"\r\n                                        disabled={isView}\r\n                                        validationState={errorsPhoneList?.phoneTypeCd ? ValidationState.ERROR : undefined}\r\n                                        errorMessage={errorsPhoneList?.phoneTypeCd?.message}\r\n                                        onChange={changes => {\r\n                                            onChange(changes.selectedItem?.value)\r\n                                        }}\r\n                                        onBlur={() => {\r\n                                            triggerAllFields()\r\n                                        }}\r\n                                        value={value}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </FormInput>\r\n                    </Box>\r\n                    <Box gridColumn={{ base: \"12 / 13\"}} alignSelf=\"center\" justifySelf=\"center\">\r\n                        {isFirst ?\r\n                            <Box mt={errorFree ? 32 : errorMsgExist ? 0 : 32} as={AddCircle} \r\n                                cursor={ validateAddable ? \"pointer\" : \"cursor\"} \r\n                                color={ validateAddable ? \"clickable\" : \"disabledInputText\" }\r\n                                onClick={() => {\r\n                                    if(validateAddable) onAdd()\r\n                                }}\r\n                                />\r\n                        :\r\n                            <Box mt={errorFree ? 32 : errorMsgExist ? 0 : 32} as={HighlightOff} cursor=\"pointer\" color=\"clickable\" \r\n                                onClick={onRemove}/>\r\n                        }\r\n                    </Box>\r\n                </Grid>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default POCPhone\r\n","import React, { useState } from \"react\"\r\nimport { Box, Grid, VisuallyHidden } from \"@chakra-ui/core\"\r\nimport { useFormContext, useWatch } from \"react-hook-form\"\r\nimport { FormInput, Text, ValidationState } from \"@c1ds/components\"\r\n\r\nimport { Person, Close } from \"@material-ui/icons\"\r\n\r\nimport { useCTFFormContext } from \"./Forms/Form\"\r\nimport { FormIconInput } from './FormIconInput'\r\nimport POCEmail from './POCEmail'\r\nimport POCPhone from './POCPhone'\r\n\r\nconst phoneListAllowed = ['phoneDto0', 'phoneDto1', 'phoneDto2']\r\nconst emailListAllowed = ['emailDto0', 'emailDto1', 'emailDto2']\r\n\r\ninterface POCBoxProps {\r\n\tpocIndex: number\r\n\tinitialEmailList: EmailData[]\r\n\tinitialPhoneList: PhoneData[]\r\n\tonRemove: () => void\r\n}\r\nconst POCBox: React.FC<POCBoxProps> = (p: POCBoxProps) => {\r\n\r\n\tconst { pocIndex, initialEmailList, initialPhoneList, onRemove } = p\r\n\tconst { isView } = useCTFFormContext()\r\n\tconst { errors, setError, clearErrors, register, watch, trigger } = useFormContext<LKLFormData>()\r\n\tconst isDisabled = isView\r\n\r\n\t// Parse the LKLFormData structure names with current POC index\r\n\tconst prefix = `pocList[${pocIndex}]`\r\n\r\n\t// Check if there is error in either of first name or last name\r\n\tconst errorFirstName = errors.pocList ? errors.pocList[pocIndex]?.givenName : undefined\r\n\tconst errorLastName = errors.pocList ? errors.pocList[pocIndex]?.surName : undefined\r\n\r\n\t// Default name sets for Names and Phone&Email\r\n\tconst [ nameFieldList, setNameFieldList ] = useState<string[]>([\r\n\t\t`${prefix}[givenName]`,\r\n\t\t`${prefix}[surName]`\r\n\t])\r\n\tconst [ contactFieldList, setContactFieldList ] = useState<string[]>([\r\n\t\t`${prefix}[phoneList][0][phoneNum]`,\r\n\t\t`${prefix}[phoneList][0][phoneTypeCd]`,\r\n\t\t`${prefix}[emailList][0][emailAddress]`,\r\n\t\t`${prefix}[emailList][0][emailType]`,\r\n\t])\r\n\tconst [ phoneList, setPhoneList ] = useState<string[]>(initialPhoneList.length > 0 ? initialPhoneList.map((_,index) => {\r\n\t\treturn 'phoneDto' + index\r\n\t}) : ['phoneDto0'] )\r\n\tconst [ emailList, setEmailList ] = useState<string[]>(initialEmailList.length > 0 ? initialEmailList.map((_,index) => {\r\n\t\treturn 'emailDto' + index\r\n\t}) : ['emailDto0'] )\r\n\t\r\n\t// Check if both first name and last name are empty\r\n\tconst isNameFieldsEmpty = () => {\r\n\t\treturn Object.values(watch(nameFieldList)).every((value : string | number | boolean | POC[] | undefined ) => {\r\n\t\t\treturn value === undefined || value === \"\"\r\n\t\t})\r\n\t}\r\n\r\n\t// Check if all of phone and email fields are empty\r\n\tconst isAllPhoneEmailEmpty = () => {\r\n\t\treturn Object.values(watch(contactFieldList)).every(\r\n\t\t\t(value : string | number | boolean | POC[] | undefined) => {\r\n\t\t\t\treturn value === undefined || value === \"\"\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\tconst filterOnTextChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n\t\te.target.value = e.target.value.replace(/^[^A-Za-z0-9]+/, \"\")\r\n\t}\r\n\r\n\t// Name set onBlur behavior\r\n\tconst filterOnNameBlur = (e : React.FocusEvent<HTMLInputElement>) => {\r\n\t\tif(e.target.value.length > 0){\r\n\t\t\tif(isAllPhoneEmailEmpty()) {\r\n\t\t\t\tcontactFieldList.forEach((name : string) =>\r\n\t\t\t\t\tsetError(name, { type: \"manual\", message: \"\"})\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\ttrigger(nameFieldList)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif(isAllPhoneEmailEmpty()){\r\n\t\t\t\tclearErrors(contactFieldList)\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\ttrigger(nameFieldList)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Email and Phone onBlur behavior\r\n\tconst triggerAllFields = () => {\r\n\t\ttrigger([...contactFieldList, ...nameFieldList])\r\n\t}\r\n\r\n\tconst onAddEmail = (setNumber : string) => {\r\n\r\n\t\tsetEmailList(prevEmailList => {\r\n\t\t\tconst unused = emailListAllowed.filter(email => {\r\n\t\t\t\treturn !prevEmailList.includes(email)\r\n\t\t\t})\r\n\t\t\treturn (unused.length > 0) ? [...prevEmailList, unused[0]] : prevEmailList\r\n\t\t})\r\n\t\t\r\n\t\tsetContactFieldList(prevList => {\r\n\t\t\treturn [...prevList, \r\n\t\t\t\t`${prefix}[emailList][${setNumber}][emailAddress]`,\r\n\t\t\t\t`${prefix}[emailList][${setNumber}][emailType]`\r\n\t\t\t]\r\n\t\t})\r\n\t}\r\n\tconst onRemoveEmail = (emailName : string) => {\r\n\r\n\t\tsetEmailList(prevEmailList => {\r\n\t\t\tconst filteredList = prevEmailList.filter(email => {\r\n\t\t\t\treturn email !== emailName\r\n\t\t\t})\r\n\t\t\treturn filteredList\r\n\t\t})\r\n\t}\r\n\r\n\tconst onAddPhone = (setNumber : string) => {\r\n\r\n\t\tsetPhoneList(prevPhoneList => {\r\n\t\t\tconst unused = phoneListAllowed.filter(phone => {\r\n\t\t\t\treturn !prevPhoneList.includes(phone)\r\n\t\t\t})\r\n\t\t\treturn (unused.length > 0) ? [...prevPhoneList, unused[0]] : prevPhoneList\r\n\t\t})\r\n\r\n\t\tsetContactFieldList(prevList => {\r\n\t\t\treturn [...prevList, \r\n\t\t\t\t`${prefix}[phoneList][${setNumber}][phoneNum]`,\r\n\t\t\t\t`${prefix}[phoneList][${setNumber}][phoneTypeCd]`\r\n\t\t\t]\r\n\t\t})\r\n\t}\r\n\tconst onRemovePhone = (phoneName : string) => {\r\n\r\n\t\tsetPhoneList(prevPhoneList => {\r\n\t\t\tconst filteredList = prevPhoneList.filter(phone => {\r\n\t\t\t\treturn phone !== phoneName\r\n\t\t\t})\r\n\t\t\treturn filteredList\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t// TO-DO\r\n\t\t// 6. For phone number, we might need an update to C1DS to allow Select component\r\n\t\t//    to accept both dropdown and user input\r\n\t\t<Box position=\"relative\">\r\n\t\t\t{ pocIndex !== 0 && \r\n\t\t\t\t<Box \r\n\t\t\t\t\tas={Close} \r\n\t\t\t\t\tm={8} \r\n\t\t\t\t\tright={0} \r\n\t\t\t\t\tcolor=\"text\"\r\n\t\t\t\t\tposition=\"absolute\"\r\n\t\t\t\t\tcursor=\"pointer\"\r\n\t\t\t\t\tonClick={onRemove} />\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t<Grid\r\n\t\t\t\tborder=\"1px\"\r\n\t\t\t\tborderStyle=\"solid\"\r\n\t\t\t\tborderColor=\"lightGray\"\r\n\t\t\t\tgridColumn={{ base: \"1 / -1\", md: \"1 / 9\" }}\r\n\t\t\t\tgridGap={{ base: \"16px\", md: \"24px\" }}\r\n\t\t\t\tpadding={{ base: \"16px\", md: \"24px\" }}\r\n\t\t\t\tgridTemplateColumns={{ base: \"repeat(12,1fr)\" }}>\r\n\r\n\t\t\t\t{/* Placeholder for Phone ID */}\r\n\t\t\t\t<input \r\n\t\t\t\t\tref={register}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname={`${prefix}[personId]`} \r\n\t\t\t\t\thidden\r\n\t\t\t\t\tdefaultValue={`person${pocIndex}`}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"1 / 7\" }}>\r\n\t\t\t\t\t<FormIconInput labelText=\"First Name\" labelId=\"firstNameLabel\" icon={Person}>\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\t\trequired: isAllPhoneEmailEmpty() || !isNameFieldsEmpty() ? false : \"First Name is required\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tid=\"givenName\"\r\n\t\t\t\t\t\t\tname={`${prefix}[givenName]`}\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tvalidationState={ errorFirstName ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\terrorMessage={errorFirstName?.message}\r\n\t\t\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\t\t\tonBlur={(filterOnNameBlur)}\r\n\t\t\t\t\t\t\tmaxLength={33}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormIconInput>\r\n\t\t\t\t</Box>\r\n\t\t\t\t\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"7 / -1\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"Last Name\" labelId=\"lastNameLabel\">\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\t\trequired: isAllPhoneEmailEmpty() || !isNameFieldsEmpty() ? false : \"Last Name is required\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tid=\"surName\"\r\n\t\t\t\t\t\t\tname={`${prefix}[surName]`}\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tvalidationState={ errorLastName ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\terrorMessage={errorLastName?.message}\r\n\t\t\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\t\t\tonBlur={filterOnNameBlur}\r\n\t\t\t\t\t\t\tmaxLength={33}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t\t\r\n\t\t\t\t{/* Email Set(address and type) List  , max = 3 */}\r\n\t\t\t\t{emailList.map((value: string, index: number) => {\r\n\t\t\t\t\tconst setNumber = value.charAt(value.length-1)\r\n\t\t\t\t\t//if list has less than 3 and is the first set \r\n\t\t\t\t\tconst addable = emailList.length < 3 && index === 0\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<POCEmail \r\n\t\t\t\t\t\t\t// EX, key = pocList0-emailDto0, 1, or 2\r\n\t\t\t\t\t\t\tkey={`${prefix}-${value}`}\r\n\t\t\t\t\t\t\t// EX, id = pocList-0-emailList-0, 1, or 2\r\n\t\t\t\t\t\t\tnamePrefix={`pocList-${pocIndex}-emailList-${setNumber}`}\r\n\t\t\t\t\t\t\tisFirst={index === 0}\r\n\t\t\t\t\t\t\taddable={addable}\r\n\t\t\t\t\t\t\tonEmptyEmail={initialEmailList.length === 0}\r\n\t\t\t\t\t\t\ttriggerAllFields={triggerAllFields}\r\n\t\t\t\t\t\t\tonAdd={() => onAddEmail(setNumber)}\r\n\t\t\t\t\t\t\tonRemove={()=> {\r\n\t\t\t\t\t\t\t\tonRemoveEmail(value)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\r\n\t\t\t\t{/* Phone Set(address and type) List , max = 3 */}\r\n\t\t\t\t{phoneList.map((value: string, index: number) => {\r\n\t\t\t\t\tconst setNumber = value.charAt(value.length-1)\r\n\t\t\t\t\tconst addable = phoneList.length < 3 && index === 0\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<POCPhone\r\n\t\t\t\t\t\t\t// EX, key = pocList0-phoneDto0,1, or 2\r\n\t\t\t\t\t\t\tkey={`${prefix}-${value}`}\r\n\t\t\t\t\t\t\tnamePrefix={`pocList-${pocIndex}-phoneList-${setNumber}`}\r\n\t\t\t\t\t\t\tisFirst={index === 0}\r\n\t\t\t\t\t\t\taddable={addable}\r\n\t\t\t\t\t\t\tonEmptyPhone={initialPhoneList.length === 0}\r\n\t\t\t\t\t\t\tonPhoneNumberChange={filterOnTextChange}\r\n\t\t\t\t\t\t\ttriggerAllFields={triggerAllFields}\r\n\t\t\t\t\t\t\tonAdd={() => onAddPhone(setNumber)}\r\n\t\t\t\t\t\t\tonRemove={()=> {\r\n\t\t\t\t\t\t\t\tonRemovePhone(value)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</Grid>\r\n\t\t</Box>\r\n\t)\r\n}\r\n\r\nexport default POCBox\r\n","import React, { useState } from \"react\"\r\nimport { FormSection } from \"../Forms/Form\"\r\nimport { Box } from \"@chakra-ui/core\"\r\nimport { P, Link } from \"@c1ds/components\"\r\nimport POCBox from \"../POCBox\"\r\n\r\ninterface POCDetailsProps {\r\n\tpocList? : POC[]\r\n}\r\n\r\nconst POCDetails: React.FC<POCDetailsProps> = (p : POCDetailsProps) => {\r\n\tconst { pocList } = p\r\n\r\n\tconst [pocIndex, setPocIndex] = useState(pocList ? (pocList.length === 0 ? 1 : pocList.length) : 1)\r\n\t// pocBoxes = [ 'poc0', 'poc1', ,,, 'pocN']\r\n\tconst [pocBoxes, setPocBoxes] = useState(() => pocList ? (pocList.length > 0 ? pocList.map((_,index) => {\r\n\t\treturn 'poc' + index\r\n\t}) : ['poc0']) : ['poc0'])\r\n\r\n\treturn (\r\n\t\t<FormSection title=\"Point Of Contact\" showDivider={false}>\r\n\t\t\t<Box gridColumn=\"1 / -1\">\r\n\t\t\t\t<P>Enter a point of contact at this location.</P>\r\n\t\t\t</Box>\r\n\t\t\t{/* Display all pocBoxes available */}\r\n\t\t\t{pocBoxes.map((value: string) => {\r\n\t\t\t\tconst pocIndex = value.charAt(value.length-1)\r\n\t\t\t\tconst isEmailListEmpty = pocList && pocList[+pocIndex] && pocList[+pocIndex].emailList.length === 0\r\n\t\t\t\tconst isPhoneListEmpty = pocList && pocList[+pocIndex] && pocList[+pocIndex].phoneList.length === 0\r\n\t\t\t\treturn (\r\n\t\t\t\t\t// key : PocBox-{index}, index will be used in POCBox component\r\n\t\t\t\t\t<Box key={value} gridColumn={{ base: \"1 / -1\", md: \"1 / 7\", lg: \"1 / 9\" }}>\r\n\t\t\t\t\t\t<POCBox \r\n\t\t\t\t\t\t\tpocIndex={+pocIndex}\r\n\t\t\t\t\t\t\tinitialEmailList={pocList && pocList[+pocIndex] && !isEmailListEmpty ? pocList[+pocIndex].emailList : []}\r\n\t\t\t\t\t\t\tinitialPhoneList={pocList && pocList[+pocIndex] && !isPhoneListEmpty ? pocList[+pocIndex].phoneList : []}\r\n\t\t\t\t\t\t\tonRemove={()=>{\r\n\t\t\t\t\t\t\t\tsetPocBoxes(pocBoxes.filter(boxName => boxName !== value))\r\n\t\t\t\t\t\t\t}} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t\t{/* This link adds more pocBoxes */}\r\n\t\t\t<Box gridColumn=\"1 / -1\">\r\n\t\t\t\t<Link\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetPocBoxes((currPocBoxes) => {\r\n\t\t\t\t\t\t\treturn [...currPocBoxes, `poc${pocIndex}`]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tsetPocIndex(pocIndex+1)\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\tAdd Another Point of Contact\r\n\t\t\t\t</Link>\r\n\t\t\t</Box>\r\n\t\t</FormSection>\r\n\t)\r\n}\r\n\r\nexport default POCDetails\r\n","\r\n/**\r\n * Replace all of the same key name with the replacement value in dataObj object\r\n *\r\n * @param dataObj Object that needs value replacement \r\n * @param name name of the key property\r\n * @param replacement replacemnet value\r\n *\r\n * @returns N/A\r\n */\r\nconst replaceValue = (dataObj : any, name : string, replacement : any) => {\r\n\tfor (const key in dataObj) {\r\n\t\tif (Object.prototype.hasOwnProperty.call(dataObj, key)) {\r\n\t\t\tif (typeof dataObj[key] == 'object') {\r\n\t\t\t\treplaceValue(dataObj[key], name, replacement);\r\n\t\t\t}\r\n\t\t\tif (key === name) { \r\n\t\t\t\tdataObj[`${name}`] = replacement;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Retrieve saved Last Known Location DTO and create LKLForm data,\r\n *\r\n * @param lklDto LKL information that are retrieved when page load\r\n *\r\n * @returns LKLFormData object containing location information from given LKLDto\r\n */\r\nexport const LklDto_To_LklFormData = (lklDto : LklDto | undefined) => {\r\n\r\n\tconst { activeIndicator, lookupLklDto } = lklDto ?? {}\r\n\tconst { lklTitle, locationDesc,\tpostCd,\tlklAddressDto, lklPocListDto } = lookupLklDto ?? {}\r\n\tconst { addressDto } = lklAddressDto ?? {}\r\n\r\n\t// extract address information\r\n\tconst {\taddressTypeCd, address1, address2, city, countryCd, postalCode, stateCd, province,\r\n\t\tlatitude, longitude\t} = addressDto ?? {}\r\n\r\n\t// create pocList required in LKLFormData\r\n\tconst pocList = lklPocListDto?.map(lklPocListDtoData => {\r\n\t\tconst personDto = lklPocListDtoData.personDto\r\n\t\tconst { personId, givenName, surName, personEmailDtoList, personPhoneDtoList } = personDto\r\n\r\n\t\tconst emailList = personEmailDtoList.map(emailData => {\r\n\t\t\tconst emailDto = emailData.emailDto\r\n\t\t\treturn {\r\n\t\t\t\temailAddress : emailDto.emailAddress,\r\n\t\t\t\temailType: \"HOME\"\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tconst phoneList = personPhoneDtoList.map(phoneData => {\r\n\t\t\tconst phoneDto = phoneData.phoneDto\r\n\t\t\treturn {\r\n\t\t\t\tphoneNum : phoneDto.phoneNum,\r\n\t\t\t\tphoneTypeCd: phoneDto.phoneTypeCd\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\t// interface POC\r\n\t\treturn {\r\n\t\t\tpersonId : personId,\r\n\t\t\tgivenName: givenName,\r\n\t\t\tsurName: surName,\r\n\t\t\tphoneList: phoneList,\r\n\t\t\temailList: emailList\r\n\t\t}\r\n\t})\r\n\r\n\treturn {\r\n\t\tlklTitle : lklTitle,\r\n\t\tactiveIndicator : activeIndicator,\r\n\t\tcountry : countryCd,\r\n\t\tpost : postCd,\r\n\t\tstreetAddress: address1,\r\n\t\tadditionalAddress: address2,\r\n\t\tcity: city,\r\n\t\tstateCd: stateCd,\r\n\t\tprovince: province,\r\n\t\tpostalCode: postalCode,\r\n\t\tlongitude : longitude,\r\n\t\tlatitude : latitude,\r\n\t\tlocationType: addressTypeCd,\r\n\t\tlocationDesc: locationDesc,\r\n\t\tpocList: pocList\r\n\t}\r\n}\r\n\r\n/**\r\n * Move over Location values from LKLFormData object to LKLDto object,\r\n *\r\n * @param lklFormData LKLFormData object that submitted from LKL form \r\n * @param lklDto Received/New LKLDto to create/update\r\n *\r\n * @returns LKLFormData object containing location information from given LKLDto\r\n */\r\nexport const LlkFormData_To_LklDto = (lklFormData : LKLFormData, lklDto : LklDto | undefined) => {\r\n\tconst {\r\n\t\tlklTitle,\r\n\t\tactiveIndicator,\r\n\t\tcountry,\r\n\t\tpost,\r\n\t\tstreetAddress,\r\n\t\tadditionalAddress,\r\n\t\tcity,\r\n\t\tstateCd,\r\n\t\tprovince,\r\n\t\tpostalCode,\r\n\t\tlongitude,\r\n\t\tlatitude,\r\n\t\tlocationType,\r\n\t\tlocationDesc,\r\n\t\tpocList\r\n\t} = lklFormData\r\n\r\n\t// Have to have name and either phone or email thus, without names = empty poc\r\n\tconst pocListDtoList = pocList?.filter((poc) => {\r\n\t\treturn poc.givenName !== '' || poc.surName !== ''\r\n\t}).map((poc, index) => {\r\n\t\tconst personEmailDtoList = poc.emailList.filter((emailData) => {\r\n\t\t\treturn emailData.emailAddress !== ''\r\n\t\t}).map((emailData, index) => {\r\n\t\t\treturn {\r\n\t\t\t\tpersonEmailId : index,\r\n\t\t\t\temailDto : {\r\n\t\t\t\t\temailId : \"0\",\r\n\t\t\t\t\temailAddress : emailData.emailAddress\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tconst personPhoneDtoList = poc.phoneList.filter((phoneData) => {\r\n\t\t\treturn phoneData.phoneNum !== ''\r\n\t\t}).map((phoneData) => {\r\n\t\t\treturn {\r\n\t\t\t\tpersonPhoneId : index,\r\n\t\t\t\tphoneDto : {\r\n\t\t\t\t\tphoneId : \"0\",\r\n\t\t\t\t\tphoneNum : phoneData.phoneNum,\r\n\t\t\t\t\tphoneTypeCd : phoneData.phoneTypeCd\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tconst personDto = {\r\n\t\t\tpersonId : poc.personId,\r\n\t\t\tgivenName : poc.givenName,\r\n\t\t\tsurName : poc.surName,\r\n\t\t\tpersonEmailDtoList : personEmailDtoList,\r\n\t\t\tpersonPhoneDtoList : personPhoneDtoList\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tlklPocId : index,\r\n\t\t\tpersonDto : personDto\r\n\t\t}\r\n\t})\r\n\r\n\t// In case of new LKLDto\r\n\tconst newLklDto = {\r\n\t\teventId : \"\",\r\n\t\teventLklId : \"\",\r\n\t\tactiveIndicator: activeIndicator === \"Active\" ? true : false,\r\n\t\tlklTypeCd : locationType,\r\n\t\tcreatedDateTime : new Date(),\r\n\t\tlastUpdatedDateTime : new Date(),\r\n\t\tlookupLklDto : {\r\n\t\t\tlookupLklId: 0,\r\n\t\t\tlklTitle: lklTitle,\r\n\t\t\tlocationDesc: locationDesc,\r\n\t\t\tpostCd: post,\r\n\t\t\tcountryCd: country,\r\n\t\t\tlklAddressDto: {\r\n\t\t\t\tlklAddressId: \"\",\r\n\t\t\t\taddressDto: {\r\n\t\t\t\t\taddressId: \"\",\r\n\t\t\t\t\taddressTypeCd: locationType,\r\n\t\t\t\t\tlatitude: latitude,\r\n\t\t\t\t\tlongitude: longitude,\r\n\t\t\t\t\taddress1: streetAddress,\r\n\t\t\t\t\taddress2: additionalAddress,\r\n\t\t\t\t\tcity: city,\r\n\t\t\t\t\tcountryCd: country,\r\n\t\t\t\t\tpostalCode: postalCode,\r\n\t\t\t\t\tprovince: province,\r\n\t\t\t\t\tstateCd: stateCd\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tlklPocListDto: pocListDtoList\r\n\t\t}\r\n\t}\r\n\r\n\tif(lklDto){\r\n\t\t// Create LKLPocListDto : LklPocListDto[]\r\n\t\treplaceValue(lklDto, 'activeIndicator', activeIndicator === \"Active\" ? true : false)\r\n\t\treplaceValue(lklDto, 'lklTitle', lklTitle)\r\n\t\treplaceValue(lklDto, 'countryCd', country)\r\n\t\treplaceValue(lklDto, 'postCd', post)\r\n\t\treplaceValue(lklDto, 'address1', streetAddress)\r\n\t\treplaceValue(lklDto, 'address2', additionalAddress)\r\n\t\treplaceValue(lklDto, 'city', city)\r\n\t\treplaceValue(lklDto, 'stateCd', stateCd)\r\n\t\treplaceValue(lklDto, 'province', province)\r\n\t\treplaceValue(lklDto, 'postalCode', postalCode)\r\n\t\treplaceValue(lklDto, 'addressTypeCd', locationType)\r\n\t\treplaceValue(lklDto, 'longitude', longitude)\r\n\t\treplaceValue(lklDto, 'latitude', latitude)\r\n\t\treplaceValue(lklDto, 'locationDesc', locationDesc)\r\n\t\treplaceValue(lklDto, 'lklPocListDto', pocListDtoList)\r\n\r\n\t\treplaceValue(lklDto, 'lastUpdatedDateTime', new Date())\r\n\r\n\t} \r\n\r\n\treturn lklDto ? lklDto as LklDto : newLklDto\r\n}","import React, { useCallback } from \"react\"\r\nimport Layout, { LayoutProps } from \"../../components/Layout\"\r\nimport { navigate } from \"gatsby\"\r\nimport { FormProvider, useForm } from \"react-hook-form\"\r\nimport { Button, LinkButton } from \"@c1ds/components\"\r\nimport { Box, Grid, useDisclosure } from \"@chakra-ui/core\"\r\nimport LocationDetails from \"../FormSections/LocationDetails\"\r\nimport POCDetails from \"../FormSections/POCDetails\"\r\nimport { DataLossModal } from \"../Modals/DataLossModal\"\r\nimport { EventPageState } from \"../../pages/event\"\r\nimport { LklPageState } from \"../../pages/addLKL\"\r\nimport { Form, useCTFFormContext } from \"./Form\"\r\nimport { getSavedForm, useSavedForm } from \"../Utility/formHelpers\"\r\nimport { LklDto_To_LklFormData, LlkFormData_To_LklDto } from '../Utility/lklFormHelpers'\r\n\r\ninterface LKLFormProps {\r\n\teventId: string\r\n\tsavedForm?: LklDto\r\n}\r\n\r\nconst LKLForm: React.FC<LKLFormProps> = (p: LKLFormProps) => {\r\n\tconst { eventId, savedForm } = p\r\n\tconst { isEdit, isView } = useCTFFormContext()\r\n\tconst [, updateSavedForm] = useSavedForm<EventFormData[]>(\"ctfForms\", \"events\")\r\n\tconst { isOpen: isDataLossOpen, onOpen: onDataLossOpen, onClose: onDataLossClose } = useDisclosure()\r\n\r\n\tconst defaultValues = {\r\n\t\tlklTitle: \"\",\r\n\t\tactiveIndicator: true,\r\n\t\tpocList: []\r\n\t}\r\n\r\n\tconst pointOfContact = savedForm ? LklDto_To_LklFormData(savedForm) : undefined\r\n\r\n\tconst formMethods = useForm<LKLFormData>({\r\n\t\tmode: \"onBlur\",\r\n\t\tdefaultValues: savedForm ? pointOfContact : defaultValues,\r\n\t})\r\n\tconst { handleSubmit } = formMethods\r\n\r\n\tconst onSubmit = useCallback((data, skipNavigate = false) => {\r\n\r\n\t\tconst newLklDto = LlkFormData_To_LklDto(data, savedForm)\r\n\t\t// Save form data into CTF Events\r\n\t\tif (isEdit && savedForm !== undefined) {\r\n\t\t\t\r\n\t\t\tconst allEvents = getSavedForm<Array<EventFormData>>(\"ctfForms\", \"events\")\r\n\t\t\tconst selectedEvent = allEvents && allEvents.find((event: EventFormData) => event.eventId === savedForm.eventId)\r\n\t\t\tconst selectedEventIndex = allEvents && allEvents.findIndex((event: EventFormData) => event.eventId === savedForm.eventId)\r\n\t\t\tconst savedLklIndex = selectedEvent?.eventLklDtoList?.findIndex((lklDto: LklDto) => \r\n\t\t\t\tlklDto.eventId === savedForm?.eventId && lklDto.eventLklId === savedForm.eventLklId\r\n\t\t\t)\r\n\t\t\t// Replace the new LKLDto into the selected event LKL list then replace event in all event list\r\n\t\t\tif(selectedEvent && typeof savedLklIndex === \"number\") {\r\n\t\t\t\tselectedEvent.eventLklDtoList?.splice(savedLklIndex, 1, newLklDto)\r\n\t\t\t\tallEvents.splice(selectedEventIndex, 1, selectedEvent)\r\n\t\t\t}\r\n\t\t\t// Update the event list\r\n\t\t\tupdateSavedForm(allEvents)\r\n\t\t\t\r\n\t\t\tconst pageState: EventPageState = {\r\n\t\t\t\teventId: savedForm.eventId,\r\n\t\t\t\tformSection: \"locations\"\r\n\t\t\t}\r\n\t\t\tnavigate(\"/event\", { state: pageState })\r\n\t\t} \r\n\t\t// TODO for Create LKL and attach it to the searchLKL page\r\n\t}, [updateSavedForm, savedForm, isEdit])\r\n\r\n\tlet pageHeading, pageDescription, breadcrumbs: LayoutProps[\"breadcrumbs\"]\r\n\tif (isEdit || isView) {\r\n\t\tpageHeading = isView ? \"View Location\" : \"Edit Location\"\r\n\t\tpageDescription = \"Provide as much information as you have for the this location.\"\r\n\t\tbreadcrumbs = [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Event\",\r\n\t\t\t\tonClick: onDataLossOpen,\r\n\t\t\t},\r\n\t\t\t{ label: \"Edit Location\" },\r\n\t\t]\r\n\t} else {\r\n\t\tpageHeading = \"New Location\"\r\n\t\tpageDescription = \"Provide as much information as you have for the new location.\",\r\n\t\tbreadcrumbs = [\r\n\t\t\t{ label: \"Event\", onClick: onDataLossOpen },\r\n\t\t\t{ label: \"Add Location\", onClick: onDataLossOpen }, \r\n\t\t\t{ label: \"New Location\" },\r\n\t\t]\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Layout\r\n\t\t\tpageTitle=\"Location Details\"\r\n\t\t\tpageHeading={pageHeading}\r\n\t\t\tpageDescription={pageDescription}\r\n\t\t\tbreadcrumbs={breadcrumbs}>\r\n\t\t\t<FormProvider {...formMethods}>\r\n\t\t\t\t<Form\r\n\t\t\t\t\tid=\"LKLForm\"\r\n\t\t\t\t\tonSubmit={handleSubmit(data => {\r\n\t\t\t\t\t\tonSubmit(data, false)\r\n\t\t\t\t\t})}>\r\n\t\t\t\t\t<LocationDetails />\r\n\t\t\t\t\t<POCDetails pocList={pointOfContact ? pointOfContact.pocList : undefined} />\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tas=\"nav\"\r\n\t\t\t\t\t\taria-label=\"page\"\r\n\t\t\t\t\t\tid=\"pageNav\"\r\n\t\t\t\t\t\tgridColumn=\"1 / -1\"\r\n\t\t\t\t\t\talignSelf=\"center\"\r\n\t\t\t\t\t\tgridGap={{ base: \"16px\", md: \"24px\" }}\r\n\t\t\t\t\t\tmarginTop={{ md: \"72\" }}\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\theight={48}\r\n\t\t\t\t\t\tgridTemplateColumns={{ base: \"repeat(12, 1fr)\", md: \"repeat(14, 1fr)\", lg: \"repeat(12, 1fr)\" }}>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{isView || isEdit ?\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Box gridColumn={{ base: \"6 / 9\", sm: \"9 / 11\", md: \"1 / 2\" }} gridRow={1}  justifySelf=\"center\" alignSelf=\"center\">\r\n\t\t\t\t\t\t\t\t\t<LinkButton type=\"button\" onClick={onDataLossOpen}>\r\n\t\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t\t</LinkButton>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t<Box gridColumn={{ base: \"9 / -1\", sm: \"11 / -1\", md: \"2 / 3\" }} gridRow={1} >\r\n\t\t\t\t\t\t\t\t\t{isEdit ? \r\n\t\t\t\t\t\t\t\t\t\t<Button type=\"submit\" size=\"full\">\r\n\t\t\t\t\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t<Button type=\"button\" size=\"full\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst pageState: LklPageState = { \r\n\t\t\t\t\t\t\t\t\t\t\t\t\teventId: eventId,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teventLklId: savedForm?.eventLklId,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisEdit: true \r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tnavigate(\"/addLKL\", { state: pageState})\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"10 / 15\", lg: \"10 / 13\" }} gridRow={{ md: \"1\" }}>\r\n\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tnavigate(\"/searchLKL\")\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\tCreate New Location\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"5 / 10\", lg: \"7 / 10\" }} gridRow={{ md: \"1\" }}>\r\n\t\t\t\t\t\t\t\t\t<Button size=\"full\" buttonType=\"secondary\" type=\"button\" onClick={() => navigate(\"/addLKL\")}>\r\n\t\t\t\t\t\t\t\t\t\tCreate and Add Another\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"1 / 2\" }} gridRow={{ md: \"1\" }} justifySelf=\"center\" alignSelf=\"center\">\r\n\t\t\t\t\t\t\t\t\t<LinkButton type=\"button\" onClick={onDataLossOpen}>\r\n\t\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t\t</LinkButton>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<DataLossModal\r\n\t\t\t\t\t\tisOpen={isDataLossOpen}\r\n\t\t\t\t\t\tonClose={onDataLossClose}\r\n\t\t\t\t\t\tonLeave={() => {\r\n\t\t\t\t\t\t\tconst pageState: EventPageState = {\r\n\t\t\t\t\t\t\t\t// TODO: Uncomment once form integration is established\r\n\t\t\t\t\t\t\t\t// eventId: getValues(\"eventId\"),\r\n\t\t\t\t\t\t\t\teventId: eventId,\r\n\t\t\t\t\t\t\t\tformSection: \"locations\",\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(isEdit || isView){\r\n\t\t\t\t\t\t\t\tnavigate(\"/event\", { state: pageState })\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tnavigate(\"/searchLKL\", { state: pageState })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form>\r\n\t\t\t</FormProvider>\r\n\t\t</Layout>\r\n\t)\r\n}\r\n\r\nexport default LKLForm\r\n","import React from \"react\"\r\nimport moment from \"moment\"\r\nimport { getSavedForm } from \"../components/Utility/formHelpers\"\r\nimport { CTFFormProvider, CTFFormProviderProps } from \"../components/Forms/Form\"\r\nimport LKLForm from \"../components/Forms/LKLForm\"\r\n\r\nexport interface LklPageState {\r\n\teventId: string\r\n\teventLklId?: string\r\n\tisEdit?: boolean\r\n}\r\n\r\ntype LklPageProps = {\r\n\tlocation: {\r\n\t\tstate: LklPageState\r\n\t}\r\n}\r\n\r\nconst addLKLPage: React.FC<LklPageProps> = (p: LklPageProps) => {\r\n\tlet savedLkl: LklDto | undefined\r\n\tif (p.location?.state?.eventLklId) {\r\n\t\tconst savedEvents = getSavedForm<Array<EventFormData>>(\"ctfForms\", \"events\")\r\n\t\tconst savedEvent = savedEvents && savedEvents.find((event: EventFormData) => event.eventId === p.location?.state?.eventId)\r\n\t\tsavedLkl = savedEvent?.eventLklDtoList?.find((lklDto: LklDto) => lklDto.eventLklId === p.location?.state?.eventLklId)\r\n\t\tif (savedLkl) {\r\n\t\t\tif (savedLkl.createdDateTime) savedLkl.createdDateTime = moment(savedLkl.createdDateTime).toDate()\r\n\t\t\tif (savedLkl.lastUpdatedDateTime) savedLkl.lastUpdatedDateTime = moment(savedLkl.lastUpdatedDateTime).toDate()\r\n\t\t}\r\n\t}\r\n\r\n\tconst formMode: CTFFormProviderProps[\"formMode\"] = typeof savedLkl === \"undefined\" ? \"create\" : p.location?.state?.isEdit ? \"edit\" : \"view\"\r\n\r\n\treturn (\r\n\t\t<CTFFormProvider formMode={formMode}>\r\n\t\t\t<LKLForm eventId={p.location?.state?.eventId} savedForm={savedLkl} />\r\n\t\t</CTFFormProvider>\r\n\t)\r\n}\r\n\r\nexport default addLKLPage\r\n","import \"core-js/modules/es6.array.reduce\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { createContext, useContext, forwardRef } from \"react\";\nimport Box from \"../Box\";\nexport var useFormControl = function useFormControl(props) {\n  var context = useFormControlContext();\n\n  if (!context) {\n    return props;\n  }\n\n  var keys = Object.keys(context);\n  return keys.reduce(function (acc, prop) {\n    /** Giving precedence to `props` over `context` */\n    acc[prop] = props[prop];\n\n    if (context) {\n      if (props[prop] == null) {\n        acc[prop] = context[prop];\n      }\n    }\n\n    return acc;\n  }, {});\n};\nvar FormControlContext = createContext();\nexport var useFormControlContext = function useFormControlContext() {\n  return useContext(FormControlContext);\n};\nvar FormControl = forwardRef(function (_ref, ref) {\n  var isInvalid = _ref.isInvalid,\n      isRequired = _ref.isRequired,\n      isDisabled = _ref.isDisabled,\n      isReadOnly = _ref.isReadOnly,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"isInvalid\", \"isRequired\", \"isDisabled\", \"isReadOnly\"]);\n\n  var context = {\n    isRequired: isRequired,\n    isDisabled: isDisabled,\n    isInvalid: isInvalid,\n    isReadOnly: isReadOnly\n  };\n  return jsx(FormControlContext.Provider, {\n    value: context\n  }, jsx(Box, _extends({\n    role: \"group\",\n    ref: ref\n  }, rest)));\n});\nFormControl.displayName = \"FormControl\";\nexport default FormControl;"],"sourceRoot":""}