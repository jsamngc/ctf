{"version":3,"sources":["webpack:///./node_modules/@material-ui/icons/esm/ArrowDropUpSharp.js","webpack:///./src/components/SortFilter.tsx","webpack:///./src/components/EventCard.tsx","webpack:///./src/components/SearchInput.tsx","webpack:///./src/pages/index.tsx"],"names":["createSvgIcon","createElement","d","SortFilter","sortByText","sortOption","onToggleSortBy","theme","useTheme","options","label","value","onClick","getOptionsValue","labelKey","find","option","Box","position","marginRight","Flex","align","Dropdown","width","menuProps","marginTop","right","initialSelection","showSelected","as","fontSize","cursor","wrap","size","ArrowDropUpSharp","top","left","color","ArrowDropDownSharp","PseudoBox","type","display","alignItems","justifyContent","padding","border","background","aria-label","substring","_focus","outline","colors","accent","transform","base","md","navigate","bottom","zIndex","borderColor","boxShadow","height","rounded","bg","_hover","AddSharp","EventCard","data","onConfirm","activeIndicator","eventEndDate","eventStartDate","eventTitle","eventTypeId","evacStatusCode","lastUpdatedDateTime","eventId","useDisclosure","isDeactivateOpen","isOpen","onDeactivateOpen","onOpen","onDeactivateClose","onClose","evacStatus","evacStatuses","evaStatus","eventType","eventBarColor","isActive","pageState","isEdit","state","formatDateField","inputDate","moment","format","mb","backgroundColor","w","h","id","maxWidth","sm","flexGrow","borderedRows","MoreVertSharp","DeactivateModal","onCancel","eventName","isActivate","lg","mt","Grid","templateColumns","columnGap","rowGap","gridColumn","pb","justifySelf","alignSelf","fontFamily","justify","paddingY","SearchInput","searchTerm","onSearchEvent","searchSize","mr","InputGroup","px","children","SearchIcon","role","Input","boxSizing","pl","py","maxLength","placeholder","_disabled","borderWidth","onKeyDown","e","keyCode","onChange","target","ClearIcon","DateTimeFormat","DateFormat","IndexPage","useSavedForm","savedEvents","updateSavedEvents","initialEvents","eventList","formattedEvents","eventsJSON","map","event","toDate","undefined","evacDepAuthDate","evacDepOrdDate","sort","a","b","aLastUpdatedTime","Date","bLastUpdatedTime","useState","sortedEvents","setSortedEvents","setSortOption","setSearchTerm","hideInactive","setHideInactive","page","setPage","eventsPerPage","length","controlledEvents","filter","numOfPages","Math","ceil","indexOfLastEvent","indexOfFirstEvent","totalPages","eventsOnPage","slice","Layout","pageTitle","pageHeading","xl","direction","term","events","result","toLowerCase","indexOf","sorted","field","aValue","bValue","arrLength","index","push","splice","gridRow","HideInactiveButton","onToggleHideInactive","key","endDate","updatedEvent","savedIdx","findIndex","evt","changedEventIdx","Pagination","count","_"],"mappings":"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","file":"component---src-pages-index-tsx-e4d83f2bc747b8ffe5cf.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M7 14l5-5 5 5H7z\"\n}), 'ArrowDropUpSharp');","import React from \"react\"\r\nimport { navigate } from \"gatsby\"\r\n\r\nimport { Button } from \"@c1ds/components\"\r\nimport Dropdown, { DropdownOptions } from \"./Dropdown\"\r\nimport { AddSharp, ArrowDropUpSharp, ArrowDropDownSharp } from \"@material-ui/icons\"\r\nimport { Box, PseudoBox, Flex, Button as ChakraButton, useTheme } from \"@chakra-ui/core\"\r\n\r\ntype SortFilterProps = {\r\n\tsortByText: string\r\n\tsortOption: string\r\n\tonToggleSortBy: (value: string, label: string) => void\r\n}\r\n\r\n/**\r\n * SortFilter component for sorting the event list based on a filter (ASC/DESC).\r\n */\r\nconst SortFilter: React.FC<SortFilterProps> = ({ sortByText, sortOption, onToggleSortBy }: SortFilterProps) => {\r\n\tconst theme = useTheme()\r\n\r\n\t// Sort option labels, values and onClick event handlers. Order is identical to the option menu\r\n\tconst options: DropdownOptions[] = [\r\n\t\t{ label: \"Event Type\", value: \"eventTypeId\", onClick: onToggleSortBy },\r\n\t\t{ label: \"Title\", value: \"eventTitle\", onClick: onToggleSortBy },\r\n\t\t{ label: \"Start Date\", value: \"eventStartDate\", onClick: onToggleSortBy },\r\n\t\t{ label: \"End Date\", value: \"eventEndDate\", onClick: onToggleSortBy },\r\n\t\t{ label: \"Evac. Status\", value: \"evacStatusCode\", onClick: onToggleSortBy },\r\n\t\t{ label: \"Status\", value: \"activeIndicator\", onClick: onToggleSortBy },\r\n\t\t{ label: \"Last Updated\", value: \"lastUpdatedDateTime\", onClick: onToggleSortBy },\r\n\t]\r\n\r\n\t// Get value of the options based on the labelKey\r\n\tconst getOptionsValue = (labelKey: string) => {\r\n\t\treturn options.find(option => option.label === labelKey)?.value ?? \"\"\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Box position=\"relative\" marginRight=\"20\">\r\n\t\t\t\t<Flex align=\"center\">\r\n\t\t\t\t\t<Dropdown\r\n\t\t\t\t\t\toptions={options}\r\n\t\t\t\t\t\twidth=\"150px\"\r\n\t\t\t\t\t\tlabel=\"Sort events\"\r\n\t\t\t\t\t\tmenuProps={{\r\n\t\t\t\t\t\t\tmarginTop: \"4\",\r\n\t\t\t\t\t\t\tright: -20,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tinitialSelection={getOptionsValue(sortByText)}\r\n\t\t\t\t\t\tshowSelected>\r\n\t\t\t\t\t\t<Box as=\"span\" fontSize=\"base\" marginRight={2} cursor=\"pointer\">\r\n\t\t\t\t\t\t\tSort by\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t{sortOption === \"\" ? (\r\n\t\t\t\t\t\t<Flex wrap=\"wrap\" position=\"relative\" size=\"iconMd\">\r\n\t\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\t\tas={ArrowDropUpSharp}\r\n\t\t\t\t\t\t\t\tsize=\"iconSort\"\r\n\t\t\t\t\t\t\t\tposition=\"absolute\"\r\n\t\t\t\t\t\t\t\ttop={-10}\r\n\t\t\t\t\t\t\t\tleft={-6}\r\n\t\t\t\t\t\t\t\tcolor=\"clickable\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\t\tas={ArrowDropDownSharp}\r\n\t\t\t\t\t\t\t\tsize=\"iconSort\"\r\n\t\t\t\t\t\t\t\tposition=\"absolute\"\r\n\t\t\t\t\t\t\t\ttop={-1}\r\n\t\t\t\t\t\t\t\tleft={-6}\r\n\t\t\t\t\t\t\t\tcolor=\"clickable\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t) : sortOption[0] === \"-\" ? (\r\n\t\t\t\t\t\t<PseudoBox\r\n\t\t\t\t\t\t\tas=\"button\"\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tdisplay=\"inline-flex\"\r\n\t\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\t\tjustifyContent=\"center\"\r\n\t\t\t\t\t\t\tpadding={0}\r\n\t\t\t\t\t\t\tborder=\"none\"\r\n\t\t\t\t\t\t\tbackground=\"none\"\r\n\t\t\t\t\t\t\tsize=\"iconMd\"\r\n\t\t\t\t\t\t\tcursor=\"pointer\"\r\n\t\t\t\t\t\t\taria-label={`Sort by ${sortByText} ascending`}\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tonToggleSortBy(getOptionsValue(sortByText), sortOption.substring(1))\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t_focus={{\r\n\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\toutline: `1px dashed ${theme.colors.accent}`,\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Box as={ArrowDropDownSharp} size=\"icon\" transform=\"scale(2)\" color=\"clickable\" />\r\n\t\t\t\t\t\t</PseudoBox>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<PseudoBox\r\n\t\t\t\t\t\t\tas=\"button\"\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tdisplay=\"inline-flex\"\r\n\t\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\t\tjustifyContent=\"center\"\r\n\t\t\t\t\t\t\tpadding={0}\r\n\t\t\t\t\t\t\tborder=\"none\"\r\n\t\t\t\t\t\t\tbackground=\"none\"\r\n\t\t\t\t\t\t\tsize=\"iconMd\"\r\n\t\t\t\t\t\t\tcursor=\"pointer\"\r\n\t\t\t\t\t\t\taria-label={`Sort by ${sortByText} descending`}\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tonToggleSortBy(getOptionsValue(sortByText), sortOption)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t_focus={{\r\n\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\toutline: `1px dashed ${theme.colors.accent}`,\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Box as={ArrowDropUpSharp} size=\"icon\" transform=\"scale(2)\" color=\"clickable\" />\r\n\t\t\t\t\t\t</PseudoBox>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Flex>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box display={{ base: \"none\", md: \"block\" }}>\r\n\t\t\t\t<Button size=\"lg\" onClick={() => navigate(\"/event\")}>\r\n\t\t\t\t\tCreate New Event\r\n\t\t\t\t</Button>\r\n\t\t\t</Box>\r\n\t\t\t<Box bottom=\"16px\" zIndex={2} right=\"16px\" position=\"fixed\" display={{ md: \"none\" }}>\r\n\t\t\t\t<ChakraButton\r\n\t\t\t\t\tborderColor=\"transparent\"\r\n\t\t\t\t\tboxShadow=\"0 6px 6px 0 rgba(0, 0, 0, 0.4)\"\r\n\t\t\t\t\tcolor=\"white\"\r\n\t\t\t\t\theight=\"40px\"\r\n\t\t\t\t\twidth=\"40px\"\r\n\t\t\t\t\trounded=\"round\"\r\n\t\t\t\t\tbg=\"clickable\"\r\n\t\t\t\t\tcursor=\"pointer\"\r\n\t\t\t\t\t_hover={{\r\n\t\t\t\t\t\tbg: \"secondary\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonClick={() => navigate(\"/event\")}>\r\n\t\t\t\t\t<Box as={AddSharp} size=\"iconMobileCreate\" />\r\n\t\t\t\t</ChakraButton>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default SortFilter\r\n","import React from \"react\"\r\nimport { navigate } from \"gatsby\"\r\nimport moment from \"moment\"\r\n\r\nimport { MoreVertSharp } from \"@material-ui/icons\"\r\nimport Dropdown from \"./Dropdown\"\r\nimport DeactivateModal from \"./Modals/DeactivateModal\"\r\nimport evacStatuses from \"../../content/evacuationStatuses.json\"\r\nimport { Link, LinkButton, Card, CardBody, P, FinePrint } from \"@c1ds/components\"\r\nimport { Box, Flex, Grid, useDisclosure } from \"@chakra-ui/core\"\r\nimport { EventPageState } from \"../pages/event\"\r\n\r\ninterface EventCardProps {\r\n\tdata: EventFormData\r\n\tonConfirm: (isActive: boolean, eventId: string) => void\r\n}\r\n\r\n//TODO: Use exported type\r\ninterface OptionType {\r\n\tlabel: string\r\n\tvalue: string\r\n}\r\n\r\nconst EventCard: React.FC<EventCardProps> = ({ data, onConfirm }: EventCardProps) => {\r\n\tconst {\r\n\t\tactiveIndicator,\r\n\t\teventEndDate,\r\n\t\teventStartDate,\r\n\t\teventTitle,\r\n\t\teventTypeId,\r\n\t\tevacStatusCode,\r\n\t\tlastUpdatedDateTime,\r\n\t\teventId,\r\n\t} = data ?? {}\r\n\r\n\tconst { isOpen: isDeactivateOpen, onOpen: onDeactivateOpen, onClose: onDeactivateClose } = useDisclosure()\r\n\r\n\tconst evacStatus = evacStatuses.find((evaStatus: OptionType) => evaStatus.value === evacStatusCode)?.label\r\n\t// Event types are Monitoring, General, Crisis. Labels on UI are displayed as Monitored, Working, or Crisis Event respectively.\r\n\t// DB property :  Label on UI\r\n\t// ----------------------------\r\n\t// Monitoring  : Monitored Event\r\n\t// General \t   : Working Event\r\n\t// Crisis\t   : Crisis Event\r\n\tconst eventType =\r\n\t\teventTypeId === \"Monitoring\" ? \"Monitored Event\" : eventTypeId === \"General\" ? \"Working Event\" : \"Crisis Event\"\r\n\tconst eventBarColor = eventTypeId === \"Monitoring\" ? \"monitor\" : eventTypeId === \"General\" ? \"general\" : \"error\"\r\n\tconst isActive = activeIndicator ?? false\r\n\r\n\tconst options = [\r\n\t\t{\r\n\t\t\tlabel: \"Edit\",\r\n\t\t\tvalue: \"option1\",\r\n\t\t\tonClick: () => {\r\n\t\t\t\tconst pageState: EventPageState = {\r\n\t\t\t\t\teventId: eventId,\r\n\t\t\t\t\tisEdit: true,\r\n\t\t\t\t}\r\n\t\t\t\tnavigate(\"/event\", { state: pageState })\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: isActive ? \"Deactivate\" : \"Activate\",\r\n\t\t\tvalue: \"option2\",\r\n\t\t\ttype: isActive ? (\"error\" as const) : (\"primary\" as const),\r\n\t\t\tonClick: () => {\r\n\t\t\t\tonDeactivateOpen()\r\n\t\t\t},\r\n\t\t},\r\n\t]\r\n\r\n\tconst formatDateField = (inputDate: Date | undefined) => {\r\n\t\treturn moment(inputDate).format(\"MM/DD/YYYY\")\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Box mb={{ base: \"16\", md: \"24\" }} bg={isActive ? \"white\" : \"#f2f2f2\"} position=\"relative\">\r\n\t\t\t<Box backgroundColor={isActive ? eventBarColor : \"disabledBorder\"} position=\"absolute\" w={6} h=\"full\" />\r\n\t\t\t<Card id=\"ctfEvent\" maxWidth=\"full\">\r\n\t\t\t\t<Flex position=\"absolute\" w=\"full\" top={{ base: \"-8px\", sm: \"-16px\" }}>\r\n\t\t\t\t\t<Box flexGrow={1}>\r\n\t\t\t\t\t\t<FinePrint>{eventType}</FinePrint>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box position=\"relative\" right={{ base: \"-12px\", sm: \"-20px\", md: \"-12px\" }}>\r\n\t\t\t\t\t\t<Dropdown options={options} borderedRows={true} label={`Additional actions for ${eventTitle}`}>\r\n\t\t\t\t\t\t\t<Box as={MoreVertSharp} color=\"clickable\" />\r\n\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<DeactivateModal\r\n\t\t\t\t\t\tisOpen={isDeactivateOpen}\r\n\t\t\t\t\t\tonCancel={onDeactivateClose}\r\n\t\t\t\t\t\teventName={eventTitle}\r\n\t\t\t\t\t\tisActivate={!isActive}\r\n\t\t\t\t\t\tonConfirm={() => {\r\n\t\t\t\t\t\t\tonConfirm(isActive, eventId)\r\n\t\t\t\t\t\t\tonDeactivateClose()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Flex>\r\n\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\t{/* Mobile and Tablet */}\r\n\t\t\t\t\t<Box display={{ lg: \"none\" }} mt={{ base: 24, md: 20 }} fontSize=\"base\">\r\n\t\t\t\t\t\t<LinkButton\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tconst pageState: EventPageState = {\r\n\t\t\t\t\t\t\t\t\teventId: eventId,\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tnavigate(\"/event\", { state: pageState })\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Box as=\"span\" fontSize=\"base\">\r\n\t\t\t\t\t\t\t\t{eventTitle}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</LinkButton>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\ttemplateColumns={{ base: \"1fr 1fr\", sm: \"repeat(6,1fr)\", md: \"repeat(5, 1fr)\" }}\r\n\t\t\t\t\t\t\tcolumnGap={{ base: \"12\", sm: \"0\", md: \"16\" }}\r\n\t\t\t\t\t\t\trowGap={{ base: \"12\", md: \"8\" }}>\r\n\t\t\t\t\t\t\t<Box gridColumn={{ sm: \"1 / 3\", md: \"auto\" }}>\r\n\t\t\t\t\t\t\t\t<Box pb={4}>\r\n\t\t\t\t\t\t\t\t\t<FinePrint color=\"label\">Start Date</FinePrint>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t<P>{formatDateField(eventStartDate)}</P>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box gridColumn={{ sm: \"span 2\", md: \"auto\" }}>\r\n\t\t\t\t\t\t\t\t{!isActive ? (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Box pb={4}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FinePrint color=\"label\">End Date</FinePrint>\r\n\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t<P>{eventEndDate ? formatDateField(eventEndDate) : \"\"}</P>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box gridColumn={{ sm: \"1 / 3\", md: \"auto\" }}>\r\n\t\t\t\t\t\t\t\t<Box pb={4}>\r\n\t\t\t\t\t\t\t\t\t<FinePrint color=\"label\">Evacuation Status</FinePrint>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t<P>{evacStatus}</P>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t{/* use order */}\r\n\t\t\t\t\t\t\t<Box gridColumn={{ sm: \"span 2\", md: \"auto\" }}>\r\n\t\t\t\t\t\t\t\t<Box pb={4}>\r\n\t\t\t\t\t\t\t\t\t<FinePrint color=\"label\">Last Updated</FinePrint>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t<P>{formatDateField(lastUpdatedDateTime)}</P>\r\n\t\t\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t\t\t<Flex\r\n\t\t\t\t\t\t\t\tgridColumn={{ base: \"2\", sm: \"span 2\", md: \"auto\" }}\r\n\t\t\t\t\t\t\t\tjustifySelf={{ sm: \"end\" }}\r\n\t\t\t\t\t\t\t\talignSelf={{ sm: \"center\" }}\r\n\t\t\t\t\t\t\t\twidth={{ base: \"116px\", sm: \"135px\", md: \"150px\" }}\r\n\t\t\t\t\t\t\t\tfontFamily=\"default\"\r\n\t\t\t\t\t\t\t\tfontSize=\"finePrint\"\r\n\t\t\t\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\t\t\t\trounded=\"chip\"\r\n\t\t\t\t\t\t\t\tbackgroundColor={isActive ? \"success\" : \"disabledBackground\"}\r\n\t\t\t\t\t\t\t\theight=\"32px\"\r\n\t\t\t\t\t\t\t\tcolor={isActive ? \"white\" : \"disabledButtonText\"}\r\n\t\t\t\t\t\t\t\tborder={isActive ? \"none\" : \"px\"}\r\n\t\t\t\t\t\t\t\tborderColor=\"disabledBorder\"\r\n\t\t\t\t\t\t\t\tpaddingY={0}>\r\n\t\t\t\t\t\t\t\t{isActive ? \"Active\" : \"Inactive\"}\r\n\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t{/* Landscape */}\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tmt={20}\r\n\t\t\t\t\t\tdisplay={{ base: \"none\", lg: \"grid\" }}\r\n\t\t\t\t\t\ttemplateColumns=\"repeat(6, 1fr)\"\r\n\t\t\t\t\t\tcolumnGap=\"16px\"\r\n\t\t\t\t\t\trowGap=\"8px\"\r\n\t\t\t\t\t\tfontSize=\"base\">\r\n\t\t\t\t\t\t<Box gridColumn=\"1 / 3\">\r\n\t\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tconst pageState: EventPageState = {\r\n\t\t\t\t\t\t\t\t\t\t\teventId: eventId,\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tnavigate(\"/event\", { state: pageState })\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t{eventTitle}\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Flex align=\"center\">\r\n\t\t\t\t\t\t\t\t<Box marginRight={12}>\r\n\t\t\t\t\t\t\t\t\t<FinePrint color=\"label\">Start Date</FinePrint>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t{/* only date no time */}\r\n\t\t\t\t\t\t\t\t<P>{formatDateField(eventStartDate)}</P>\r\n\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t{!isActive ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<FinePrint color=\"label\">End Date</FinePrint>\r\n\t\t\t\t\t\t\t\t\t<P>{eventEndDate ? formatDateField(eventEndDate) : \"\"}</P>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t<FinePrint color=\"label\">Evacuation Status</FinePrint>\r\n\t\t\t\t\t\t\t<P>{evacStatus}</P>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t<FinePrint color=\"label\">Last Updated</FinePrint>\r\n\t\t\t\t\t\t\t<P>{formatDateField(lastUpdatedDateTime)}</P>\r\n\t\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t\t<Flex\r\n\t\t\t\t\t\t\tjustifySelf=\"end\"\r\n\t\t\t\t\t\t\talignSelf=\"center\"\r\n\t\t\t\t\t\t\twidth=\"135px\"\r\n\t\t\t\t\t\t\tfontFamily=\"default\"\r\n\t\t\t\t\t\t\tfontSize=\"finePrint\"\r\n\t\t\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\t\t\trounded=\"chip\"\r\n\t\t\t\t\t\t\tbackgroundColor={isActive ? \"success\" : \"disabledBackground\"}\r\n\t\t\t\t\t\t\theight=\"32px\"\r\n\t\t\t\t\t\t\tcolor={isActive ? \"white\" : \"disabledButtonText\"}\r\n\t\t\t\t\t\t\tborder={isActive ? \"none\" : \"px\"}\r\n\t\t\t\t\t\t\tborderColor=\"disabledBorder\"\r\n\t\t\t\t\t\t\tpaddingY={0}>\r\n\t\t\t\t\t\t\t{isActive ? \"Active\" : \"Inactive\"}\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</CardBody>\r\n\t\t\t</Card>\r\n\t\t</Box>\r\n\t)\r\n}\r\n\r\nexport default EventCard\r\n","import React from \"react\"\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\nimport ClearIcon from \"@material-ui/icons/Clear\"\r\nimport { Box, InputGroup, Input, InputLeftElement, InputRightElement } from \"@chakra-ui/core\"\r\n\r\ntype SearchInputProps = {\r\n\tsearchTerm: string\r\n\tonSearchEvent: (searchText: string) => void\r\n}\r\n\r\n/**\r\n * Search Input component for searching for particular events.\r\n * Search is case-insensitive\r\n */\r\nconst SearchInput: React.FC<SearchInputProps> = ({ searchTerm, onSearchEvent }: SearchInputProps) => {\r\n\t// Event handler for key down such as Enter key\r\n\tconst handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.keyCode === 27) {\r\n\t\t\tonSearchEvent(\"\")\r\n\t\t}\r\n\t}\r\n\r\n\tconst searchSize = { base: \"100%\" }\r\n\r\n\treturn (\r\n\t\t<Box mr=\"auto\" w={searchSize}>\r\n\t\t\t<InputGroup width={searchSize}>\r\n\t\t\t\t<InputLeftElement\r\n\t\t\t\t\tpx=\"inputX\"\r\n\t\t\t\t\twidth=\"auto\"\r\n\t\t\t\t\theight=\"input\"\r\n\t\t\t\t\tchildren={<Box as={SearchIcon} color=\"clickable\" role=\"presentation\" size=\"iconMd\" />}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Input\r\n\t\t\t\t\tcolor=\"text\"\r\n\t\t\t\t\theight=\"input\"\r\n\t\t\t\t\tdisplay=\"inline-block\"\r\n\t\t\t\t\tfontFamily=\"body\"\r\n\t\t\t\t\tfontSize=\"base\"\r\n\t\t\t\t\tborder=\"px\"\r\n\t\t\t\t\tborderColor=\"inputBorder\"\r\n\t\t\t\t\tboxSizing=\"border-box\"\r\n\t\t\t\t\tpl={40}\r\n\t\t\t\t\tpy={4}\r\n\t\t\t\t\tmaxLength={25}\r\n\t\t\t\t\toutline=\"none\"\r\n\t\t\t\t\tplaceholder=\"Search for an event\"\r\n\t\t\t\t\t_disabled={{\r\n\t\t\t\t\t\tcolor: \"disabledButtonText\",\r\n\t\t\t\t\t\tbg: \"disabledBackground\",\r\n\t\t\t\t\t\tborderColor: \"disabledBorder\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t_focus={{\r\n\t\t\t\t\t\tborderWidth: \"2\",\r\n\t\t\t\t\t\tborderColor: \"accent\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tvalue={searchTerm}\r\n\t\t\t\t\tonKeyDown={handleKeyDown}\r\n\t\t\t\t\tonChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\t\t\tonSearchEvent(e.target.value)\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t{searchTerm ? (\r\n\t\t\t\t\t<InputRightElement\r\n\t\t\t\t\t\twidth=\"input\"\r\n\t\t\t\t\t\theight=\"input\"\r\n\t\t\t\t\t\tonClick={() => onSearchEvent(\"\")}\r\n\t\t\t\t\t\tchildren={<Box as={ClearIcon} color=\"inputPlaceholder\" role=\"presentation\" size=\"iconMd\" />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : null}\r\n\t\t\t</InputGroup>\r\n\t\t</Box>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React, { useState } from \"react\"\r\nimport moment from \"moment\"\r\n\r\nimport Pagination from \"@material-ui/lab/Pagination\"\r\nimport { H1, C1_DATE_FORMAT as DateFormat } from \"@c1ds/components\"\r\nimport { Flex } from \"@chakra-ui/core\"\r\n\r\nimport Layout from \"../components/Layout\"\r\nimport SortFilter from \"../components/SortFilter\"\r\nimport EventCard from \"../components/EventCard\"\r\nimport HideInactiveButton from \"../components/HideInactiveButton\"\r\nimport SearchInput from \"../components/SearchInput\"\r\nimport { DropdownClick } from \"../components/Dropdown\"\r\nimport eventsJSON from \"../../content/events.json\"\r\nimport { useSavedForm } from \"../components/Utility/formHelpers\"\r\n\r\nconst DateTimeFormat = `${DateFormat} HH:mm:ss:SS ZZ`\r\n\r\n/**\r\n * Event List page component which includes standard C1DS grid layout\r\n */\r\nconst IndexPage: React.FC = () => {\r\n\tconst sortOnLoad = (unorderedEvents: EventFormData[]) => {\r\n\t\treturn unorderedEvents.sort((a, b) => {\r\n\t\t\tconst aLastUpdatedTime = a.lastUpdatedDateTime ?? new Date()\r\n\t\t\tconst bLastUpdatedTime = b.lastUpdatedDateTime ?? new Date()\r\n\t\t\t// Descending order\r\n\t\t\tconst direction = -1\r\n\t\t\tif (aLastUpdatedTime > bLastUpdatedTime) return direction\r\n\t\t\tif (aLastUpdatedTime < bLastUpdatedTime) return -direction\r\n\t\t\treturn 0\r\n\t\t})\r\n\t}\r\n\r\n\t// Retrieve saved form from session storage.\r\n\tconst [savedEvents, updateSavedEvents] = useSavedForm<EventFormData[]>(\"ctfForms\", \"events\")\r\n\r\n\t// Default sort to display the events with  with Active Status and sort by the “Last Update” date with the most recent on top\r\n\tconst initialEvents = () => {\r\n\t\tlet eventList = savedEvents\r\n\t\tif (!savedEvents) {\r\n\t\t\tconst formattedEvents = eventsJSON.map(event => {\r\n\t\t\t\tconst eventWithDate: EventFormData = {\r\n\t\t\t\t\t...event,\r\n\t\t\t\t\teventStartDate: event.eventStartDate ? moment(event.eventStartDate, DateFormat).toDate() : undefined,\r\n\t\t\t\t\teventEndDate: event.eventEndDate ? moment(event.eventEndDate, DateFormat).toDate() : undefined,\r\n\t\t\t\t\tevacDepAuthDate: event.evacDepAuthDate ? moment(event.evacDepAuthDate, DateFormat).toDate() : undefined,\r\n\t\t\t\t\tevacDepOrdDate: event.evacDepOrdDate ? moment(event.evacDepOrdDate, DateFormat).toDate() : undefined,\r\n\t\t\t\t\tlastUpdatedDateTime: event.lastUpdatedDateTime\r\n\t\t\t\t\t\t? moment(event.lastUpdatedDateTime, DateTimeFormat).toDate()\r\n\t\t\t\t\t\t: undefined,\r\n\t\t\t\t}\r\n\t\t\t\treturn eventWithDate\r\n\t\t\t})\r\n\t\t\tupdateSavedEvents(formattedEvents)\r\n\t\t\teventList = formattedEvents\r\n\t\t}\r\n\t\tconst formattedEvents = eventList.map(event => {\r\n\t\t\tconst eventWithDate = {\r\n\t\t\t\t...event,\r\n\t\t\t\teventStartDate: moment(event.eventStartDate).toDate(),\r\n\t\t\t\teventEndDate: moment(event.eventEndDate).toDate(),\r\n\t\t\t\tevacDepAuthDate: moment(event.evacDepAuthDate).toDate(),\r\n\t\t\t\tevacDepOrdDate: moment(event.evacDepOrdDate).toDate(),\r\n\t\t\t\tlastUpdatedDateTime: moment(event.lastUpdatedDateTime).toDate(),\r\n\t\t\t}\r\n\t\t\treturn eventWithDate\r\n\t\t})\r\n\t\treturn sortOnLoad([...formattedEvents])\r\n\t}\r\n\tconst [sortedEvents, setSortedEvents] = useState<EventFormData[]>(initialEvents())\r\n\tconst [sortOption, setSortOption] = useState(\"-Last Updated\")\r\n\tconst [searchTerm, setSearchTerm] = useState(\"\")\r\n\tconst [hideInactive, setHideInactive] = useState(true)\r\n\t//Pagination states\r\n\tconst [page, setPage] = useState(1)\r\n\tconst [eventsPerPage, setEventsPerPage] = useState(10) //TODO: Determine expected sorting behavior of empty vals\r\n\r\n\t//Sort string depending on the sort option value\r\n\tconst onToggleSortBy: DropdownClick = (value, label) => {\r\n\t\tlet option = value\r\n\t\tif (sortOption === label) {\r\n\t\t\toption = \"-\" + value\r\n\t\t\tlabel = \"-\" + label\r\n\t\t}\r\n\r\n\t\tconst sorted = sortedEvents.slice()\r\n\t\tsorted.sort((a, b) => {\r\n\t\t\tlet direction = 1\r\n\t\t\tlet field = option\r\n\t\t\tif (field[0] === \"-\") {\r\n\t\t\t\tdirection = -1\r\n\t\t\t\tfield = field.substring(1)\r\n\t\t\t}\r\n\r\n\t\t\tlet aValue = a[field],\r\n\t\t\t\tbValue = b[field]\r\n\t\t\t// for boolean values such as : activeIndicator\r\n\t\t\tif (typeof a[field] === \"boolean\") {\r\n\t\t\t\t;(aValue = a[field] ? 1 : -1), (bValue = b[field] ? 1 : -1)\r\n\t\t\t}\r\n\t\t\t// for Evac Status, None, ADEP, and ODEP\r\n\t\t\telse if (field === \"evacStatusCode\") {\r\n\t\t\t\taValue = a[field]?.toLowerCase() === \"none\" ? \"\" : a[field]\r\n\t\t\t\tbValue = b[field]?.toLowerCase() === \"none\" ? \"\" : b[field]\r\n\t\t\t} else if (typeof aValue === \"string\" && typeof bValue === \"string\") {\r\n\t\t\t\taValue = aValue?.toLowerCase()\r\n\t\t\t\tbValue = bValue?.toLowerCase()\r\n\t\t\t}\r\n\r\n\t\t\tif ((aValue as Date | string | number) > (bValue as Date | string | number)) return direction\r\n\t\t\tif ((aValue as Date | string | number) < (bValue as Date | string | number)) return -direction\r\n\t\t\treturn 0\r\n\t\t})\r\n\r\n\t\t// For end date sort, push active events to the end of list.\r\n\t\tif (value === \"eventEndDate\") {\r\n\t\t\tlet arrLength = sorted.length\r\n\t\t\tfor (let index = 0; index < arrLength; index++) {\r\n\t\t\t\tif (sorted[index].activeIndicator) {\r\n\t\t\t\t\tsorted.push(sorted.splice(index, 1)[0])\r\n\t\t\t\t\tindex--\r\n\t\t\t\t\tarrLength--\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetSortedEvents(sorted)\r\n\t\tsetSortOption(label)\r\n\t}\r\n\r\n\t// Hide Inactive events in the management view on toggle\r\n\tconst onToggleHideInactive = () => {\r\n\t\tsetHideInactive(!hideInactive)\r\n\t}\r\n\r\n\t// Search function trigger\r\n\tconst onSearchEvent = (term: string) => {\r\n\t\tconst events = initialEvents()\r\n\r\n\t\tif (term === \"\") {\r\n\t\t\tsetSortedEvents(events)\r\n\t\t} else {\r\n\t\t\tconst result = events.filter(event => {\r\n\t\t\t\t// Case In-sensitive\r\n\t\t\t\treturn event.eventTitle.toLowerCase().indexOf(term.toLowerCase()) > -1\r\n\t\t\t})\r\n\r\n\t\t\tsetSortedEvents(result)\r\n\t\t}\r\n\r\n\t\tsetSearchTerm(term)\r\n\t\tsetSortOption(\"\")\r\n\t\tsetPage(1)\r\n\t}\r\n\r\n\t/* FUTURE: maybe enhancement : multiple sorting logic.\r\n\tconst fieldSorter = (fields: string[]) => {\r\n\t\treturn function (event1 , event2 ) {\r\n\t\t\treturn fields.map(function (field) {\r\n\r\n\t\t\t\t\tlet direction = 1;\r\n\t\t\t\t\tif (field[0] === '-') {\r\n\t\t\t\t\t\tdirection = -1;\r\n\t\t\t\t\t\tfield=field.substring(1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (event1[field] > event2[field]) return direction;\r\n\t\t\t\t\tif (event1[field] < event2[field]) return -(direction);\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t})\r\n\t\t\t\t.reduce(function findPriority (p,n) {\r\n\t\t\t\t\treturn p ? p : n;\r\n\t\t\t\t}, 0);\r\n\t\t};\r\n\t}\r\n\r\n\tconst rawEvents = sortedEvents.slice()\r\n\r\n\tsetSortedEvents(rawEvents.sort(fieldSorter(Object.values(sortOptions).filter(value => {\r\n\t\treturn value ? true : false;\r\n\t}))))\r\n\t*/\r\n\r\n\t// SortBy display text, remove \"-\" indicator when presenting to the page\r\n\tconst sortByText = sortOption[0] === \"-\" ? sortOption.substring(1, sortOption.length) : sortOption\r\n\r\n\tconst controlledEvents = sortedEvents.filter(event => {\r\n\t\tif (hideInactive) return event.activeIndicator\r\n\t\telse return true\r\n\t})\r\n\r\n\tconst numOfPages = Math.ceil(controlledEvents.length / eventsPerPage)\r\n\t// Update the page number when inactive events are hidden\r\n\tif (page > numOfPages) setPage(numOfPages)\r\n\r\n\tconst indexOfLastEvent = page * eventsPerPage\r\n\tconst indexOfFirstEvent = indexOfLastEvent - eventsPerPage\r\n\r\n\tconst isMultiplePages = controlledEvents.length > eventsPerPage\r\n\tconst totalPages = isMultiplePages ? Math.ceil(controlledEvents.length / eventsPerPage) : 1\r\n\tconst eventsOnPage = totalPages !== 1 ? controlledEvents.slice(indexOfFirstEvent, indexOfLastEvent) : controlledEvents\r\n\r\n\treturn (\r\n\t\t<Layout pageTitle=\"Event Management\" pageHeading=\"Event Management\">\r\n\t\t\t{/* Search Input Box */}\r\n\t\t\t<Flex\r\n\t\t\t\tgridColumn={{ base: \"1 / -1\", md: \"1 / 5\", lg: \"1 / 8\", xl: \"1 / 9\" }}\r\n\t\t\t\tdirection=\"row\"\r\n\t\t\t\twrap=\"wrap\"\r\n\t\t\t\tjustify=\"flex-end\">\r\n\t\t\t\t<SearchInput searchTerm={searchTerm} onSearchEvent={onSearchEvent} />\r\n\t\t\t</Flex>\r\n\r\n\t\t\t{/* Sort Filter Menu, and Creat Event Button */}\r\n\t\t\t<Flex align=\"center\" justify=\"flex-end\" gridColumn={{ base: \"3 / 5\", md: \"span 4\", lg: \"span 5\", xl: \"span 4\" }}>\r\n\t\t\t\t<SortFilter sortByText={sortByText} sortOption={sortOption} onToggleSortBy={onToggleSortBy} />\r\n\t\t\t</Flex>\r\n\r\n\t\t\t{/* Hide Inactive */}\r\n\t\t\t<Flex\r\n\t\t\t\tgridColumn={{ base: \"1 / 3\", md: \"1 / -1\" }}\r\n\t\t\t\tgridRow={{ base: \"3\", md: \"auto\" }}\r\n\t\t\t\tjustify={{ base: \"flex-start\", md: \"flex-end\" }}>\r\n\t\t\t\t<HideInactiveButton onToggleHideInactive={onToggleHideInactive} />\r\n\t\t\t</Flex>\r\n\r\n\t\t\t{/* Event List */}\r\n\t\t\t<Flex direction=\"column\" gridColumn=\"1 / -1\">\r\n\t\t\t\t{eventsOnPage.length > 0 ? (\r\n\t\t\t\t\teventsOnPage.map((event, index: number) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<EventCard\r\n\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\tdata={event}\r\n\t\t\t\t\t\t\t\tonConfirm={(isActive: boolean, eventId: string) => {\r\n\t\t\t\t\t\t\t\t\t//1.3.3 The system update the Event Active Indicator to No and Event End Date to today's date.\r\n\t\t\t\t\t\t\t\t\tconst endDate = isActive ? new Date() : undefined\r\n\t\t\t\t\t\t\t\t\tconst updatedEvent = {\r\n\t\t\t\t\t\t\t\t\t\t...event,\r\n\t\t\t\t\t\t\t\t\t\tactiveIndicator: !isActive,\r\n\t\t\t\t\t\t\t\t\t\tlastUpdatedDateTime: new Date(),\r\n\t\t\t\t\t\t\t\t\t\teventEndDate: endDate,\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tconst savedIdx = savedEvents.findIndex(evt => evt.eventId === eventId)\r\n\t\t\t\t\t\t\t\t\tsavedEvents.splice(savedIdx, 1, updatedEvent)\r\n\t\t\t\t\t\t\t\t\tupdateSavedEvents(savedEvents)\r\n\r\n\t\t\t\t\t\t\t\t\t//1.3.4 The system displays an updated Event List with the Pre-existing sort by/Search parameter(s) include the newly deactivated event\r\n\t\t\t\t\t\t\t\t\tconst changedEventIdx = sortedEvents.findIndex(evt => evt.eventId === eventId)\r\n\t\t\t\t\t\t\t\t\tsortedEvents.splice(changedEventIdx, 1, updatedEvent)\r\n\t\t\t\t\t\t\t\t\tsetSortedEvents(sortedEvents)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<H1>data not found</H1>\r\n\t\t\t\t)}\r\n\t\t\t</Flex>\r\n\r\n\t\t\t{/* Pagination */}\r\n\t\t\t<Flex gridColumn=\"1 / -1\" justify=\"center\" align=\"center\">\r\n\t\t\t\t<h3>Total Events: {controlledEvents.length}</h3>\r\n\t\t\t\t<Pagination page={page} count={totalPages} onChange={(_, value) => setPage(value)} />\r\n\t\t\t</Flex>\r\n\t\t</Layout>\r\n\t)\r\n}\r\n\r\nexport default IndexPage\r\n"],"sourceRoot":""}