{"version":3,"sources":["webpack:///./src/components/FormSections/LocationDetails.tsx","webpack:///./node_modules/@material-ui/icons/esm/Close.js","webpack:///./node_modules/@material-ui/icons/esm/Person.js","webpack:///./src/components/FormIconInput.tsx","webpack:///./node_modules/@material-ui/icons/esm/Email.js","webpack:///./node_modules/@material-ui/icons/esm/AddCircle.js","webpack:///./node_modules/@material-ui/icons/esm/HighlightOff.js","webpack:///./src/components/POCEmail.tsx","webpack:///./node_modules/@material-ui/icons/esm/Phone.js","webpack:///./src/components/POCPhone.tsx","webpack:///./src/components/POCBox.tsx","webpack:///./src/components/FormSections/POCDetails.tsx","webpack:///./src/components/Utility/lklFormHelpers.tsx","webpack:///./src/components/Forms/LKLForm.tsx","webpack:///./src/pages/newLocation.tsx","webpack:///./node_modules/@chakra-ui/core/dist/es/FormLabel/index.js","webpack:///./src/components/Modals/DeactivateLklModal.tsx","webpack:///./node_modules/@chakra-ui/core/dist/es/FormControl/index.js"],"names":["filterOnTextChange","e","target","value","replace","validateLongLat","range","regexMatch","RegExp","inRange","parseFloat","LocationDetails","useFormContext","trigger","register","errors","setValue","getValues","formState","useDisclosure","isDeactivateOpen","isOpen","onDeactivateOpen","onOpen","onDeactivateClose","onClose","dirtyFields","countryRef","useRef","postRef","stateRef","locationTypeRef","descriptionRef","watchCountry","useWatch","name","watchLongitude","watchLatitude","watchStreetAddress","watchCity","countries","useMemo","countriesList","countries_json","filter","_","index","push","label","sort","countryA","countryB","localeCompare","stateComp","Box","gridColumn","base","md","lg","labelText","labelId","required","rules","onFocus","current","focus","render","onChange","onBlur","ref","id","aria-labelledby","options","states_json","size","disabled","validationState","stateCd","ValidationState","ERROR","undefined","errorMessage","message","changes","selectedItem","provinceComp","maxLength","Form","title","showDivider","Grid","gridGap","gridTemplateColumns","lklTitle","checked","DeactivateLklModal","onCancel","isActivate","onConfirm","country","placeholder","posts_json","post","country_cd","city","longitude","validate","latitude","locationTypes_json","locationType","pattern","locationDesc","replaceMSWordChars","createSvgIcon","createElement","d","FormIconInput","p","children","icon","input","FormControl","FormLabel","fontFamily","fontSize","fontWeight","pb","color","display","lineHeight","Text","as","position","mr","m","ml","React","props","trim","EMAIL_VALIDATION_PATTERN","join","POCEmail","namePrefix","addable","isFirst","onEmptyEmail","triggerAllFields","onAdd","onRemove","split","prefix","pocIndex","emailList","setNumber","setNameOrder","nameOfInput","nameEmailAddress","nameEmailType","watchEmailAddress","watchEmailType","errorsPOC","pocList","errorsEmailDto","dirtyPOC","dirtyEmailDto","errorFree","emailAddress","emailType","sectionDirty","validateAddable","errorMsgExist","sm","Email","emailTypes_json","alignSelf","justifySelf","mt","AddCircle","cursor","onClick","HighlightOff","PHONE_REGEX","POCPhone","onEmptyPhone","phoneList","namePhoneNumber","namePhoneType","watchPhoneNumber","watchPhoneType","errorsPhoneList","dirtyPhoneList","phoneNum","phoneTypeCd","Phone","phoneTypes_json","phoneListAllowed","emailListAllowed","POCBox","initialEmailList","initialPhoneList","setError","clearErrors","watch","errorFirstName","givenName","errorLastName","surName","useState","nameFieldList","contactFieldList","setContactFieldList","length","map","setPhoneList","setEmailList","isNameFieldsEmpty","Object","values","every","isAllPhoneEmailEmpty","filterSpaceBeginning","filterOnNameBlur","forEach","type","Close","right","border","borderStyle","borderColor","padding","hidden","defaultValue","Person","charAt","key","unused","email","includes","prevEmailList","prevList","emailName","setIndex","phone","prevPhoneList","phoneName","POCDetails","setPocIndex","pocBoxes","setPocBoxes","slice","isEmailListEmpty","isPhoneListEmpty","boxName","currPocBoxes","replaceValue","dataObj","replacement","prototype","hasOwnProperty","call","LKLForm","lklDto","activeIndicator","lookupLklDto","postCd","lklAddressDto","lklPocListDto","addressDto","addressTypeCd","address1","address2","countryCd","postalCode","province","pageHeading","pageDescription","breadcrumbs","eventId","savedForm","useCTFFormContext","isEdit","isCreate","updateSavedEvents","useSavedForm","breadcrumbLink","setBreadcrumbLink","addAnother","setAddAnother","isDataLossOpen","onDataLossOpen","onDataLossClose","isSaveOpen","onSaveOpen","onSaveClose","defaultValues","pointOfContact","lklPocListDtoData","personDto","personId","personEmailDtoList","personPhoneDtoList","emailData","emailDto","emailTypeCd","phoneData","phoneDto","eventLklId","streetAddress","additionalAddress","formMethods","useForm","mode","handleSubmit","onSubmit","useCallback","data","newLklDto","lklFormData","pocListDefined","locationDescDefined","locationTypeDefined","pocListDtoList","poc","personEmailId","emailId","personPhoneId","phoneId","lklPocId","Math","floor","random","lklTypeCd","createdDateTime","Date","lastUpdatedDateTime","lookupLklId","lklAddressId","addressId","LlkFormData_To_LklDto","savedEvents","getSavedForm","savedEventIndex","findIndex","evt","savedEvent","savedLklIndex","eventLklDtoList","splice","setTimeout","pageState","formSection","navigate","state","window","location","reload","Layout","pageTitle","aria-label","marginTop","height","gridRow","buttonType","DataLossModal","onLeave","find","event","SaveModal","NewLocationPage","savedLkl","moment","toDate","formMode","RequiredIndicator","colorMode","light","dark","_ref","formControl","pr","opacity","isDisabled","textAlign","verticalAlign","isRequired","displayName","buttonStyle","default","bg","hoverFocus","borderWidth","active","locationName","status","isCentered","toLocaleLowerCase","align","marginRight","width","borderRadius","px","py","_focus","_hover","_active","flex","useFormControl","context","useFormControlContext","keys","reduce","acc","prop","FormControlContext","isInvalid","isReadOnly","rest","Provider","role"],"mappings":"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","file":"component---src-pages-new-location-tsx-2ca5216cb567b87a75de.js","sourcesContent":["import React, { useRef, useMemo } from \"react\"\r\nimport { FormSection, replaceMSWordChars } from \"../Forms/Form\"\r\nimport DeactivateLklModal from \"../Modals/DeactivateLklModal\"\r\nimport { Box, Grid, useDisclosure } from \"@chakra-ui/core\"\r\nimport { Controller, useFormContext, useWatch } from \"react-hook-form\"\r\nimport { Switch, Select, FormInput, Text, ValidationState, Textarea } from \"@c1ds/components\"\r\nimport countries_json from \"../../../content/countries.json\"\r\nimport posts_json from \"../../../content/posts.json\"\r\nimport states_json from \"../../../content/states.json\"\r\nimport locationTypes_json from \"../../../content/locationTypes.json\"\r\n\r\nconst LocationDetails: React.FC = () => {\r\n\tconst { trigger, register, errors, setValue, getValues, formState } = useFormContext<LklDto>()\r\n\tconst { isOpen: isDeactivateOpen, onOpen: onDeactivateOpen, onClose: onDeactivateClose } = useDisclosure()\r\n\t\r\n\tconst { dirtyFields } = formState\r\n\r\n\tconst countryRef = useRef<HTMLButtonElement>(null)\r\n\tconst postRef = useRef<HTMLButtonElement>(null)\r\n\tconst stateRef = useRef<HTMLButtonElement>(null)\r\n\tconst locationTypeRef = useRef<HTMLButtonElement>(null)\r\n\tconst descriptionRef = useRef<HTMLTextAreaElement>(null)\r\n\r\n\tconst watchCountry: string | undefined = useWatch({ name: \"country\" })\r\n\tconst watchLongitude: string | undefined = useWatch({ name: \"longitude\" })\r\n\tconst watchLatitude: string | undefined = useWatch({ name: \"latitude\" })\r\n\tconst watchStreetAddress: string | undefined = useWatch({ name: \"streetAddress\" })\r\n\tconst watchCity: string | undefined = useWatch({ name: \"city\" })\r\n\r\n\t// Temporarily decrease size of country list while performance is investigated\r\n\tconst countries = useMemo(() => {\r\n\t\tconst countriesList = countries_json.filter((_, index) => index % 5 === 0)\r\n\t\tcountriesList.push({\r\n\t\t\tlabel: \"UNITED STATES OF AMERICA\",\r\n\t\t\tvalue: \"USA\",\r\n\t\t})\r\n\t\tcountriesList.push({\r\n\t\t\tlabel: \"JAPAN\",\r\n\t\t\tvalue: \"JPN\",\r\n\t\t})\r\n\t\tcountriesList.sort((countryA, countryB) => countryA.label.localeCompare(countryB.label))\r\n\t\treturn countriesList\r\n\t}, [])\r\n\r\n\tconst isDisabled = false\r\n\r\n\tconst stateComp = (\r\n\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 3\", lg: \"span 7\" }}>\r\n\t\t\t<FormInput labelText=\"State\" labelId=\"stateLabel\" required>\r\n\t\t\t\t<Controller\r\n\t\t\t\t\tname=\"stateCd\"\r\n\t\t\t\t\trules={{\r\n\t\t\t\t\t\trequired: \"Please select a State\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonFocus={() => stateRef.current?.focus()}\r\n\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tref={stateRef}\r\n\t\t\t\t\t\t\tid=\"stateCd\"\r\n\t\t\t\t\t\t\tname=\"stateCd\"\r\n\t\t\t\t\t\t\taria-labelledby=\"stateLabel\"\r\n\t\t\t\t\t\t\toptions={states_json}\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tvalidationState={errors?.stateCd ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\terrorMessage={errors?.stateCd?.message}\r\n\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\tonChange(changes.selectedItem?.value)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\t\tdirtyFields?.stateCd && onBlur()\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</FormInput>\r\n\t\t</Box>\r\n\t)\r\n\tconst provinceComp = (\r\n\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 3\", lg: \"span 7\" }}>\r\n\t\t\t<FormInput labelText=\"Province\" labelId=\"provinceLabel\">\r\n\t\t\t\t<Text\r\n\t\t\t\t\tref={register}\r\n\t\t\t\t\tid=\"province\"\r\n\t\t\t\t\tname=\"province\"\r\n\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\tmaxLength={50}\r\n\t\t\t\t/>\r\n\t\t\t</FormInput>\r\n\t\t</Box>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<FormSection title=\"\" showDivider={true}>\r\n\t\t\t<Grid\r\n\t\t\t\tgridColumn={{ base: \"1 / -1\", md: \"1 / 7\" , lg: \"1 / 9\" }}\r\n\t\t\t\tgridGap={{ base: \"16px\", md: \"24px\" }}\r\n\t\t\t\tgridTemplateColumns={{ base: \"1\", md: \"repeat(12,1fr)\" }}>\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 11\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"Location Title\" labelId=\"lklTitleLabel\" required>\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tid=\"lklTitle\"\r\n\t\t\t\t\t\t\tname=\"lklTitle\"\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\t\t\tvalidationState={errors?.lklTitle ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\terrorMessage={errors?.lklTitle?.message}\r\n\t\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\t\trequired: \"Please enter a Location Title\",\r\n\t\t\t\t\t\t\t\tmaxLength: { value: 50, message: \"Location Title cannot exceed 25 characters\" },\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tmaxLength={50}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 1\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"Active\" labelId=\"activeIndicatorLabel\">\r\n\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\tid=\"activeIndicator\"\r\n\t\t\t\t\t\t\tname=\"activeIndicator\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tvalue=\"Active\"\r\n\t\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t\t\tonChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\t\t\t\t\tif (e.target.checked) {\r\n\t\t\t\t\t\t\t\t\tsetValue(\"activeIndicator\", false)\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tsetValue(\"activeIndicator\", true)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonDeactivateOpen()\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<DeactivateLklModal\r\n\t\t\t\t\t\tisOpen={isDeactivateOpen}\r\n\t\t\t\t\t\tonCancel={onDeactivateClose}\r\n\t\t\t\t\t\tisActivate={getValues(\"activeIndicator\")? false: true}\r\n\t\t\t\t\t\tonConfirm={() => {\r\n\t\t\t\t\t\t\tsetValue(\"activeIndicator\", getValues(\"activeIndicator\") ? false : true)\r\n\t\t\t\t\t\t\tonDeactivateClose()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"1 / 4\", lg: \"1 / 5\" }}>\r\n\t\t\t\t<FormInput labelText=\"Country\" labelId=\"countryLabel\" required>\r\n\t\t\t\t\t<Controller\r\n\t\t\t\t\t\tname=\"country\"\r\n\t\t\t\t\t\trules={{\r\n\t\t\t\t\t\t\trequired: \"Please select a Country\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonFocus={() => countryRef.current?.focus()}\r\n\t\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tref={countryRef}\r\n\t\t\t\t\t\t\t\tid=\"country\"\r\n\t\t\t\t\t\t\t\tname=\"country\"\r\n\t\t\t\t\t\t\t\taria-labelledby=\"countryLabel\"\r\n\t\t\t\t\t\t\t\toptions={countries}\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\t\tvalidationState={errors?.country ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\t\terrorMessage={errors?.country?.message}\r\n\t\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\t\tonChange(changes.selectedItem?.value)\r\n\t\t\t\t\t\t\t\t\tsetValue(\"post\", \"\")\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\t\t\tdirtyFields?.country && onBlur()\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Type to filter countries\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"4 / 7\",  lg: \"span 4\" }}>\r\n\t\t\t\t<FormInput labelText=\"Post\" labelId=\"postLabel\" required>\r\n\t\t\t\t\t<Controller\r\n\t\t\t\t\t\tname=\"post\"\r\n\t\t\t\t\t\trules={{\r\n\t\t\t\t\t\t\trequired: \"Please select a Post\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonFocus={() => postRef.current?.focus()}\r\n\t\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tref={postRef}\r\n\t\t\t\t\t\t\t\tid=\"post\"\r\n\t\t\t\t\t\t\t\tname=\"post\"\r\n\t\t\t\t\t\t\t\taria-labelledby=\"postLabel\"\r\n\t\t\t\t\t\t\t\toptions={posts_json.filter(post => post.country_cd === watchCountry)}\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\tdisabled={isDisabled ? true : (watchCountry ? false : true)}\r\n\t\t\t\t\t\t\t\tvalidationState={errors?.post ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\t\terrorMessage={errors?.post?.message}\r\n\t\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\t\tonChange(changes.selectedItem?.value)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\t\t\tdirtyFields?.post && onBlur()\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"1 / 7\",  lg: \"span 8\" }}>\r\n\t\t\t\t<FormInput labelText=\"Street Address\" labelId=\"streetAddressLabel\">\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tid=\"streetAddress\"\r\n\t\t\t\t\t\tname=\"streetAddress\"\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\tfilterOnTextChange(changes)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonBlur={() => trigger(\"city\")}\r\n\t\t\t\t\t\tmaxLength={200}\r\n\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"1 / 7\",  lg: \"span 8\" }}>\r\n\t\t\t\t<FormInput labelText=\"Apartment, Suite, Other\" labelId=\"additionalAddressLabel\">\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t\tid=\"additionalAddress\"\r\n\t\t\t\t\t\tname=\"additionalAddress\"\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\t\tmaxLength={200}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Grid\r\n\t\t\t\tgridColumn={{ base: \"1 / -1\", md:\"1 / 7\", lg: \"1 / 9\" }}\r\n\t\t\t\tgridGap={{ base: \"16px\", md: \"24px\" }}\r\n\t\t\t\tgridTemplateColumns={{ base: \"repeat(4,1fr)\", md: \"repeat(8,1fr)\", lg: \"repeat(22,1fr)\" }}>\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 3\", lg: \"span 11\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"City\" labelId=\"cityLabel\">\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tid=\"city\"\r\n\t\t\t\t\t\t\tname=\"city\"\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tvalidationState={errors?.city ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\terrorMessage={errors?.city?.message}\r\n\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\tfilterOnTextChange(changes)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tmaxLength={30}\r\n\t\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\t\trequired: watchStreetAddress && !watchCity ? \"City also required with Street Address\" : false,\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t\t{watchCountry === \"USA\" ? stateComp : provinceComp}\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / 2\", md: \"span 2\", lg: \"span 4\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"Postal Code\" labelId=\"postalCodeLabel\">\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tref={register}\r\n\t\t\t\t\t\t\tid=\"postalCode\"\r\n\t\t\t\t\t\t\tname=\"postalCode\"\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\t\t\tmaxLength={10}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / 3\", md: \"1 / 4\", lg: \"1 / 3\" }}>\r\n\t\t\t\t<FormInput labelText=\"Longitude\" labelId=\"longitudeLabel\">\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tid=\"longitude\"\r\n\t\t\t\t\t\tname=\"longitude\"\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\tvalidationState={errors?.longitude ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\terrorMessage={errors?.longitude?.message}\r\n\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\ttrigger(\"latitude\")\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\tvalidate: value => (validateLongLat(value, 180) ? true : \"Invalid input\"),\r\n\t\t\t\t\t\t\trequired: watchLatitude && !watchLongitude ? \"Longitude value also required\" : false,\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"3 / 5\", md: \"4 / 7\", lg: \"span 2\" }}>\r\n\t\t\t\t<FormInput labelText=\"Latitude\" labelId=\"latitudeLabel\">\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tid=\"latitude\"\r\n\t\t\t\t\t\tname=\"latitude\"\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\tvalidationState={errors?.latitude ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\terrorMessage={errors?.latitude?.message}\r\n\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\ttrigger(\"longitude\")\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\tvalidate: value => (validateLongLat(value, 90) ? true : \"Invalid input\"),\r\n\t\t\t\t\t\t\trequired: watchLongitude && !watchLatitude ? \"Latitude value also required\" : false,\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"1 / 7\", lg: \"span 4\" }}>\r\n\t\t\t\t<FormInput labelText=\"Location Type\" labelId=\"locationTypeLabel\">\r\n\t\t\t\t\t<Controller\r\n\t\t\t\t\t\tname=\"locationType\"\r\n\t\t\t\t\t\tonFocus={() => locationTypeRef.current?.focus()}\r\n\t\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tref={locationTypeRef}\r\n\t\t\t\t\t\t\t\tid=\"locationType\"\r\n\t\t\t\t\t\t\t\tname=\"locationType\"\r\n\t\t\t\t\t\t\t\taria-labelledby=\"locationTypeLabel\"\r\n\t\t\t\t\t\t\t\toptions={locationTypes_json}\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\t\tvalidationState={errors?.locationType ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\t\terrorMessage={errors?.locationType?.message}\r\n\t\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\t\tonChange(changes.selectedItem?.value)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\t\t\tdirtyFields?.locationType && onBlur()\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"1 / 7\", lg: \"span 8\" }}>\r\n\t\t\t\t<FormInput labelText=\"Description\" labelId=\"descriptionLabel\">\r\n\t\t\t\t\t<Controller\r\n\t\t\t\t\t\tname=\"locationDesc\"\r\n\t\t\t\t\t\trules={{\r\n\t\t\t\t\t\t\tpattern: {\r\n\t\t\t\t\t\t\t\tvalue: /^[A-Za-z0-9`~!@#$%^&*()_+•\\-=[\\]:\";',./?\\s]*$/,\r\n\t\t\t\t\t\t\t\tmessage: \"Please enter only plain text in the Description field\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tmaxLength: { value: 500, message: \"Description cannot exceed 500 characters\" },\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonFocus={() => descriptionRef.current?.focus()}\r\n\t\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t\t<Textarea\r\n\t\t\t\t\t\t\t\tref={descriptionRef}\r\n\t\t\t\t\t\t\t\tid=\"locationDesc\"\r\n\t\t\t\t\t\t\t\tname=\"locationDesc\"\r\n\t\t\t\t\t\t\t\taria-labelledby=\"descriptionLabel\"\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\tmaxLength={500}\r\n\t\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\t\tvalidationState={errors?.locationDesc ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\t\terrorMessage={errors?.locationDesc?.message}\r\n\t\t\t\t\t\t\t\tonChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n\t\t\t\t\t\t\t\t\te.target.value = replaceMSWordChars(e.target.value).replace(\r\n\t\t\t\t\t\t\t\t\t\t/[^A-Za-z0-9`~!@#$%^&*()_+•\\-=[\\]:\";',./?\\s]/g,\r\n\t\t\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\tonChange(e)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\t\t</FormSection>\r\n\t)\r\n}\r\n\r\nconst filterOnTextChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n\te.target.value = e.target.value.replace(/^[^A-Za-z0-9]+/, \"\")\r\n}\r\n\r\nconst validateLongLat = (value: string, range: number) => {\r\n\tif (!value) {\r\n\t\treturn true\r\n\t}\r\n\tconst regexMatch = RegExp(/^([-+]?)([\\d]{1,3})([.]?)([\\d]*)$/)\r\n\tconst inRange = parseFloat(value) >= -range && parseFloat(value) <= range\r\n\treturn regexMatch && inRange\r\n}\r\n\r\nexport default LocationDetails\r\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import { FormControl, FormLabel, Text, Box } from \"@chakra-ui/core\"\r\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\r\nimport * as React from \"react\"\r\n\r\ntype FormIconInputProps = {\r\n\tlabelText: string\r\n\tlabelId: string\r\n\trequired?: boolean\r\n\tdisabled?: boolean\r\n    children: React.ReactElement<React.InputHTMLAttributes<HTMLElement>>\r\n    icon?: typeof SvgIcon\r\n}\r\n\r\nexport const FormIconInput: React.FC<FormIconInputProps> = (p: FormIconInputProps) => {\r\n\tconst { labelText, labelId, children, required, icon, ...input } = p\r\n\r\n\treturn (\r\n\t\t<FormControl>\r\n\t\t\t<FormLabel\r\n\t\t\t\tid={labelId}\r\n\t\t\t\tfontFamily=\"body\"\r\n\t\t\t\tfontSize=\"label\"\r\n\t\t\t\tfontWeight=\"normal\"\r\n\t\t\t\tpb={0}\r\n\t\t\t\tcolor=\"label\"\r\n\t\t\t\tdisplay=\"block\"\r\n\t\t\t\tlineHeight=\"label\">\r\n\t\t\t\t{required && (\r\n\t\t\t\t\t<Text color=\"required\" as=\"span\">\r\n\t\t\t\t\t\t*&nbsp;\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t)}\r\n                {icon && <Box position=\"absolute\" as={icon} mr={4} color=\"label\" />}\r\n\t\t\t\t<Text m={0} ml={28}>{labelText}</Text>\r\n\t\t\t</FormLabel>\r\n\t\t\t{React.cloneElement(children, {\r\n\t\t\t\trequired,\r\n\t\t\t\t\"aria-labelledby\": `${labelId} ${children.props[\"aria-labelledby\"] ?? \"\"}`.trim(),\r\n\t\t\t\t...input,\r\n\t\t\t})}\r\n\t\t</FormControl>\r\n\t)\r\n}\r\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"\n}), 'Email');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddCircle');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'HighlightOff');","import React from \"react\"\r\nimport { Box, Grid } from \"@chakra-ui/core\"\r\nimport { Controller, useFormContext, useWatch } from \"react-hook-form\"\r\nimport { Select, FormInput, Text, ValidationState } from \"@c1ds/components\"\r\n\r\nimport { FormIconInput } from './FormIconInput'\r\nimport { Email, AddCircle, HighlightOff } from \"@material-ui/icons\"\r\n\r\nimport emailTypes_json from \"../../content/emailTypes.json\"\r\n\r\n/**\r\n  * Email field validation pattern\r\n  * // '(?:(?:\"[A-Za-z0-9!#&\\'... --> Local-part (quoted) - Allows alphanumeric, !#$%&'*+-/=?^_`{|}~, and leading/terminating/consecutive dots\r\n  * // '(?:[A-Za-z0-9!#&\\'+\\\\-... --> Local-part (non-quoted): Allows alphanumeric, !#$%&'*+-/=?^_`{|}~, and non-leading, non-terminating, non-consecutive dots\r\n  * // '(?:(?:[A-Za-z0-9]{1,63... --> Domain-part (second/lower level domains): Allows alphanumeric and non-leading, non-terminating hyphens\r\n  * // '(?:(?:[A-Za-z0-9]-*)*[... --> Domain-part (top level domains): Allows alphanumeric and non-leading, non-terminating hyphens. Requires at least one non-numeric character\r\n  */\r\n\r\n const EMAIL_VALIDATION_PATTERN = new RegExp([\r\n    '^(?:',\r\n    '(?:(?:\"[\"A-Za-z0-9!#&\\'+\\\\-/?_`{}~.]*\")|',                                         \r\n    '(?:[A-Za-z0-9!#&\\'+\\\\-/?_`{}~]+(?:\\\\.?[A-Za-z0-9!#&\\'+\\\\-/?_`{}~])*))',           \r\n    '@',\r\n    '(?:(?:[A-Za-z0-9]{1,63}\\\\.)|(?:[A-Za-z0-9][A-Za-z0-9\\\\-]{1,61}[A-Za-z0-9]\\\\.))+', \r\n    '(?:(?:[A-Za-z0-9]-*)*[A-Za-z](?:-*[A-Za-z0-9])*)',                                \r\n    ')$',\r\n    ].join(''))\r\n\r\ntype POCEmailProps = {\r\n    namePrefix: string\r\n    isFirst : boolean\r\n    addable: boolean\r\n    onEmptyEmail: boolean\r\n    filterOnTextChange : (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\r\n    triggerAllFields : () => void\r\n    onAdd : () => void\r\n    onRemove : () => void\r\n}\r\n\r\n// One set of Email address and type\r\nconst POCEmail: React.FC<POCEmailProps> = ( p : POCEmailProps) => {\r\n    const { namePrefix, addable, isFirst, onEmptyEmail, filterOnTextChange,\r\n            triggerAllFields, onAdd, onRemove } = p\r\n    const { errors, formState, register } = useFormContext<LKLFormData>()\r\n    const { dirtyFields } = formState\r\n    const isDisabled = false\r\n\r\n    // namePrefix : {prefix}-{index of POC}-{string \"emailList\"}-{Email set index}\r\n    // Ex, pocList-0-emailList-0\r\n    const [ prefix, pocIndex, emailList ,setNumber ] = namePrefix.split('-')\r\n    const setNameOrder = (nameOfInput : string) => {\r\n        return `${prefix}[${pocIndex}][${emailList}][${setNumber}][${nameOfInput}]`\r\n    }\r\n    \r\n    const nameEmailAddress = setNameOrder('emailAddress')\r\n    const nameEmailType = setNameOrder(`emailType`)\r\n    \r\n    const watchEmailAddress: string | undefined = useWatch({ name: nameEmailAddress })\r\n    const watchEmailType: string | undefined = useWatch({ name: nameEmailType })\r\n    \r\n    // Get Errors specific to this email set\r\n    const errorsPOC = errors && errors.pocList && errors.pocList[+pocIndex] ? errors.pocList[+pocIndex] : null\r\n    const errorsEmailDto = errorsPOC && errorsPOC.emailList ? errorsPOC.emailList[+setNumber] : null\r\n\r\n    // Get Dirty fields in the email set\r\n    const dirtyPOC = dirtyFields && dirtyFields.pocList && dirtyFields.pocList[+pocIndex] ? dirtyFields.pocList[+pocIndex] : null\r\n    const dirtyEmailDto = dirtyPOC && dirtyPOC.emailList ? dirtyPOC.emailList[+setNumber] : null\r\n\r\n    const errorFree = errorsEmailDto?.emailAddress === undefined && errorsEmailDto?.emailType === undefined\r\n    const sectionDirty = dirtyEmailDto?.emailAddress !== undefined && dirtyEmailDto?.emailType !== undefined\r\n    const validateAddable = errorFree && (onEmptyEmail ? sectionDirty : true ) && addable\r\n\r\n    const errorMsgExist = errorsEmailDto?.emailType?.message !== '' && errorsEmailDto?.emailType?.message !== undefined\r\n    return (\r\n        <>\r\n            <Box gridColumn={{ base: \"1 / -1\", sm: \"1 / 9\", md: \"1 / 7\" }}>\r\n                <FormIconInput labelText=\"Email Address\" labelId=\"emailAddressLabel\" icon={Email}>\r\n                    <Text\r\n                        ref={register({\r\n                            required: watchEmailType && !watchEmailAddress ? \"Email Address is required\" : false,\r\n                            pattern: {\r\n                                value: EMAIL_VALIDATION_PATTERN,\r\n                                message: \"Please enter valid email in the field\",\r\n                            }\r\n                        })}\r\n                        id={nameEmailAddress}\r\n                        name={nameEmailAddress}\r\n                        size=\"full\"\r\n                        disabled={isDisabled}\r\n                        validationState={errorsEmailDto?.emailAddress ? ValidationState.ERROR : undefined}\r\n                        errorMessage={errorsEmailDto?.emailAddress?.message}\r\n                        onChange={filterOnTextChange}\r\n                        maxLength={67}\r\n                        onBlur={() => {\r\n                            triggerAllFields()\r\n                        }}\r\n                    />\r\n                </FormIconInput>\r\n            </Box>\r\n\r\n            <Box gridColumn={{ base: \"1 / 13\", sm: \"9 / 13 \", md: \"7 / 13\" }}>\r\n                <Grid\r\n                    gridColumn={{ base: \"1 / -1\"}}\r\n                    gridGap={{ base: \"8px\", md: \"16px\" }}\r\n                    gridTemplateColumns={{ base: \"repeat(12,1fr)\" }}>\r\n                    <Box gridColumn={{ base: \"1 / 12\" }}>\r\n                        <FormInput labelText=\"Type\" labelId=\"emailTypeLabel\">\r\n                            <Controller\r\n                                name={nameEmailType}\r\n                                rules={{\r\n                                    required: watchEmailAddress && !watchEmailType ? \"Email Type is required\" : false\r\n                                }}\r\n                                render={({ onChange, value }) => (\r\n                                    <Select\r\n                                        id={nameEmailType}\r\n                                        name={nameEmailType}\r\n                                        aria-labelledby=\"emailTypeLabel\"\r\n                                        options={emailTypes_json}\r\n                                        size=\"full\"\r\n                                        disabled={isDisabled}\r\n                                        validationState={errorsEmailDto?.emailType ? ValidationState.ERROR : undefined}\r\n                                        errorMessage={ errorsEmailDto?.emailType?.message}\r\n                                        onChange={changes => {\r\n                                            onChange(changes.selectedItem?.value)\r\n                                        }}\r\n                                        onBlur={() => {\r\n                                            triggerAllFields()\r\n                                        }}\r\n                                        value={value}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </FormInput>\r\n                    </Box>\r\n                    <Box gridColumn={{ base: \"12 / 13\"}} alignSelf=\"center\" justifySelf=\"center\">\r\n                        {isFirst ?\r\n                            <Box mt={errorFree ? 32 : errorMsgExist ? 0 : 32} as={AddCircle} \r\n                                cursor={validateAddable ? \"pointer\" : \"cursor\"} \r\n                                color={validateAddable ? \"clickable\" : \"disabledInputText\"}\r\n                                onClick={() => {\r\n                                    if(validateAddable) onAdd()\r\n                                }}\r\n                                />\r\n                        :\r\n                            <Box mt={errorFree ? 32 : errorMsgExist ? 0 : 32} as={HighlightOff} \r\n                                cursor=\"pointer\"\r\n                                color=\"clickable\"\r\n                                onClick={() => {\r\n                                    onRemove()\r\n                                }}\r\n                                />\r\n                        }\r\n                    </Box>\r\n                </Grid>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default POCEmail","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z\"\n}), 'Phone');","import React from \"react\"\r\nimport { Box, Grid } from \"@chakra-ui/core\"\r\nimport { Controller, useFormContext, useWatch } from \"react-hook-form\"\r\nimport { Select, FormInput, Text, ValidationState } from \"@c1ds/components\"\r\n\r\nimport { useCTFFormContext } from \"./Forms/Form\"\r\nimport { FormIconInput } from './FormIconInput'\r\nimport { Phone, AddCircle, HighlightOff } from \"@material-ui/icons\"\r\n\r\nimport phoneTypes_json from \"../../content/phoneTypes.json\"\r\n\r\nconst PHONE_REGEX = /^([0-9\\\\\\-()+.:# ]|(x|ext|extension))*$/\r\n\r\ntype POCPhoneProps = {\r\n    namePrefix: string\r\n    isFirst : boolean\r\n    addable: boolean\r\n    onEmptyPhone: boolean\r\n    filterOnTextChange : (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\r\n    triggerAllFields : () => void\r\n    onAdd : () => void\r\n    onRemove : () => void\r\n}\r\n\r\n// One set of Phone number and type\r\nconst POCPhone: React.FC<POCPhoneProps> = ( p : POCPhoneProps) => {\r\n    const {namePrefix,  isFirst, addable, onEmptyPhone,\r\n            filterOnTextChange, triggerAllFields, onAdd, onRemove } = p\r\n    const { errors, formState, register } = useFormContext<LKLFormData>()\r\n    const { dirtyFields } = formState\r\n    const isDisabled = false\r\n\r\n    // namePrefix : {prefix}-{index of POC}-{string \"phoneList\"}-{Phone set index}\r\n    // Ex, pocList-0-phoneList-0\r\n    const [ prefix, pocIndex, phoneList ,setNumber ] = namePrefix.split('-')\r\n    const setNameOrder = (nameOfInput : string) => {\r\n        return `${prefix}[${pocIndex}][${phoneList}][${setNumber}][${nameOfInput}]`\r\n    }\r\n    const namePhoneNumber = setNameOrder('phoneNum')\r\n    const namePhoneType = setNameOrder(`phoneTypeCd`)\r\n\r\n    const watchPhoneNumber: string | undefined = useWatch({ name: namePhoneNumber })\r\n    const watchPhoneType: string | undefined = useWatch({ name: namePhoneType })\r\n    \r\n    // Get Errors specific to this phone set\r\n    const errorsPOC = errors && errors.pocList && errors.pocList[+pocIndex] ? errors.pocList[+pocIndex] : null\r\n    const errorsPhoneList = errorsPOC && errorsPOC.phoneList ? errorsPOC.phoneList[+setNumber] : null\r\n\r\n    // Get Dirty fields in the email set\r\n    const dirtyPOC = dirtyFields && dirtyFields.pocList && dirtyFields.pocList[+pocIndex] ? dirtyFields.pocList[+pocIndex] : null\r\n    const dirtyPhoneList = dirtyPOC && dirtyPOC.phoneList ? dirtyPOC.phoneList[+setNumber] : null\r\n\r\n    const errorFree = errorsPhoneList?.phoneNum === undefined && errorsPhoneList?.phoneTypeCd === undefined\r\n    const sectionDirty = dirtyPhoneList?.phoneNum && dirtyPhoneList?.phoneTypeCd\r\n    const validateAddable = errorFree && (onEmptyPhone ? sectionDirty : true) && addable\r\n\r\n    const errorMsgExist = errors[namePhoneType]?.message  !== undefined && errors[namePhoneType]?.message !== ''\r\n    return (\r\n        <>\r\n            <Box gridColumn={{ base: \"1 / -1\", sm: \"1 / 9\", md: \"1 / 7\" }}>\r\n                <FormIconInput labelText=\"Phone Number\" labelId=\"phoneNumberLabel\" icon={Phone}>\r\n                    <Text\r\n                        ref={register({\r\n                            required: watchPhoneType && !watchPhoneNumber ? \"Phone Number is required\" : false,\r\n                            pattern: {\r\n                                value: PHONE_REGEX,\r\n                                message: \"Please enter valid phone number in the field\",\r\n                            }\r\n                        })}\r\n                        id={namePhoneNumber}\r\n                        name={namePhoneNumber}\r\n                        size=\"full\"\r\n                        disabled={isDisabled}\r\n                        validationState={errorsPhoneList?.phoneNum ? ValidationState.ERROR : undefined}\r\n                        errorMessage={errorsPhoneList?.phoneNum?.message}\r\n                        onChange={filterOnTextChange}\r\n                        maxLength={30}\r\n                        onBlur={() => {\r\n                            triggerAllFields()\r\n                        }}\r\n                    />\r\n                </FormIconInput>\r\n            </Box>\r\n\r\n            <Box gridColumn={{ base: \"1 / 13\", sm: \"9 / 13 \", md: \"7 / 13\" }}>\r\n                <Grid\r\n                    gridColumn={{ base: \"1 / -1\"}}\r\n                    gridGap={{ base: \"8px\", md: \"16px\" }}\r\n                    gridTemplateColumns={{ base: \"repeat(12,1fr)\" }}>\r\n                    <Box gridColumn={{ base: \"1 / 12\" }}>\r\n                        <FormInput labelText=\"Type\" labelId=\"phoneTypeLabel\">\r\n                            <Controller\r\n                                name={namePhoneType}\r\n                                rules={\r\n                                    {required: watchPhoneNumber && !watchPhoneType ? \"Phone Type is required\" : false\r\n                                }}\r\n                                render={({ onChange, value }) => (\r\n                                    <Select\r\n                                        id={namePhoneType}\r\n                                        name={namePhoneType}\r\n                                        aria-labelledby=\"phoneTypeLabel\"\r\n                                        options={phoneTypes_json}\r\n                                        size=\"full\"\r\n                                        disabled={isDisabled}\r\n                                        validationState={errorsPhoneList?.phoneTypeCd ? ValidationState.ERROR : undefined}\r\n                                        errorMessage={errorsPhoneList?.phoneTypeCd?.message}\r\n                                        onChange={changes => {\r\n                                            onChange(changes.selectedItem?.value)\r\n                                        }}\r\n                                        onBlur={() => {\r\n                                            triggerAllFields()\r\n                                        }}\r\n                                        value={value}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </FormInput>\r\n                    </Box>\r\n                    <Box gridColumn={{ base: \"12 / 13\"}} alignSelf=\"center\" justifySelf=\"center\">\r\n                        {isFirst ?\r\n                            <Box mt={errorFree ? 32 : errorMsgExist ? 0 : 32} as={AddCircle} \r\n                                cursor={ validateAddable ? \"pointer\" : \"cursor\"} \r\n                                color={ validateAddable ? \"clickable\" : \"disabledInputText\" }\r\n                                onClick={() => {\r\n                                    if(validateAddable) onAdd()\r\n                                }}\r\n                                />\r\n                        :\r\n                            <Box mt={errorFree ? 32 : errorMsgExist ? 0 : 32} as={HighlightOff} \r\n                                cursor=\"pointer\"\r\n                                color=\"clickable\"\r\n                                onClick={() => {\r\n                                    onRemove()\r\n                                }}\r\n                                />\r\n                        }\r\n                    </Box>\r\n                </Grid>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default POCPhone\r\n","import React, { useState } from \"react\"\r\nimport { Box, Grid, VisuallyHidden } from \"@chakra-ui/core\"\r\nimport { useFormContext, useWatch } from \"react-hook-form\"\r\nimport { FormInput, Text, ValidationState } from \"@c1ds/components\"\r\n\r\nimport { Person, Close } from \"@material-ui/icons\"\r\n\r\nimport { FormIconInput } from './FormIconInput'\r\nimport POCEmail from './POCEmail'\r\nimport POCPhone from './POCPhone'\r\n\r\nconst phoneListAllowed = ['phoneDto0', 'phoneDto1', 'phoneDto2']\r\nconst emailListAllowed = ['emailDto0', 'emailDto1', 'emailDto2']\r\n\r\ninterface POCBoxProps {\r\n\tpocIndex: number\r\n\tinitialEmailList: EmailData[]\r\n\tinitialPhoneList: PhoneData[]\r\n\tonRemove: () => void\r\n}\r\nconst POCBox: React.FC<POCBoxProps> = (p: POCBoxProps) => {\r\n\r\n\tconst { pocIndex, initialEmailList, initialPhoneList, onRemove } = p\r\n\tconst { errors, setError, clearErrors, register, watch, trigger } = useFormContext<LKLFormData>()\r\n\tconst isDisabled = false\r\n\r\n\t// Parse the LKLFormData structure names with current POC index\r\n\tconst prefix = `pocList[${pocIndex}]`\r\n\r\n\t// Check if there is error in either of first name or last name\r\n\tconst errorFirstName = errors.pocList ? errors.pocList[pocIndex]?.givenName : undefined\r\n\tconst errorLastName = errors.pocList ? errors.pocList[pocIndex]?.surName : undefined\r\n\r\n\t// Default name sets for Names and Phone&Email\r\n\tconst [ nameFieldList, setNameFieldList ] = useState<string[]>([\r\n\t\t`${prefix}[givenName]`,\r\n\t\t`${prefix}[surName]`\r\n\t])\r\n\tconst [ contactFieldList, setContactFieldList ] = useState<string[]>([\r\n\t\t`${prefix}[phoneList][0][phoneNum]`,\r\n\t\t`${prefix}[phoneList][0][phoneTypeCd]`,\r\n\t\t`${prefix}[emailList][0][emailAddress]`,\r\n\t\t`${prefix}[emailList][0][emailType]`,\r\n\t])\r\n\r\n\tconst [ phoneList, setPhoneList ] = useState<string[]>(initialPhoneList.length > 0 ? initialPhoneList.map((_,index) => {\r\n\t\treturn 'phoneDto' + index\r\n\t}) : ['phoneDto0'] )\r\n\tconst [ emailList, setEmailList ] = useState<string[]>(initialEmailList.length > 0 ? initialEmailList.map((_,index) => {\r\n\t\treturn 'emailDto' + index\r\n\t}) : ['emailDto0'] )\r\n\r\n\t// Check if both first name and last name are empty\r\n\tconst isNameFieldsEmpty = () => {\r\n\t\treturn Object.values(watch(nameFieldList)).every((value : string | number | boolean | POC[] | undefined ) => {\r\n\t\t\treturn value === undefined || value === \"\"\r\n\t\t})\r\n\t}\r\n\r\n\t// Check if all of phone and email fields are empty\r\n\tconst isAllPhoneEmailEmpty = () => {\r\n\t\treturn Object.values(watch(contactFieldList)).every(\r\n\t\t\t(value : string | number | boolean | POC[] | undefined) => {\r\n\t\t\t\treturn value === undefined || value === \"\"\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\tconst filterOnTextChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n\t\te.target.value = e.target.value.replace(/^[^A-Za-z0-9]+/, \"\")\r\n\t}\r\n\r\n\tconst filterSpaceBeginning = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n\t\te.target.value = e.target.value.replace(/^[\\s]+/, \"\")\r\n\t}\r\n\r\n\t// Name set onBlur behavior\r\n\tconst filterOnNameBlur = (e : React.FocusEvent<HTMLInputElement>) => {\r\n\t\tif(e.target.value.length > 0){\r\n\t\t\tif(isAllPhoneEmailEmpty()) {\r\n\t\t\t\tcontactFieldList.forEach((name : string) =>\r\n\t\t\t\t\tsetError(name, { type: \"manual\", message: \"\"})\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\ttrigger(nameFieldList)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif(isAllPhoneEmailEmpty()){\r\n\t\t\t\tclearErrors(contactFieldList)\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\ttrigger(nameFieldList)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Email and Phone onBlur behavior\r\n\tconst triggerAllFields = () => {\r\n\t\ttrigger([...contactFieldList, ...nameFieldList])\r\n\t}\r\n\r\n\tconst onAddEmail = () => {\r\n\t\tconst unused = emailListAllowed.filter(email => {\r\n\t\t\treturn !emailList.includes(email)\r\n\t\t})\r\n\t\t\r\n\t\tsetEmailList(prevEmailList => {\r\n\t\t\treturn (unused.length > 0) ? [...prevEmailList, unused[0]] : prevEmailList\r\n\t\t})\r\n\t\t\r\n\t\tsetContactFieldList(prevList => {\r\n\t\t\tconst setNumber = unused[0].charAt(unused[0].length-1)\r\n\t\t\treturn [...prevList, \r\n\t\t\t\t`${prefix}[emailList][${setNumber}][emailAddress]`,\r\n\t\t\t\t`${prefix}[emailList][${setNumber}][emailType]`\r\n\t\t\t]\r\n\t\t})\r\n\t}\r\n\tconst onRemoveEmail = (emailName : string) => {\r\n\t\tconst setIndex = emailName.charAt(emailName.length-1)\r\n\t\tsetEmailList(prevEmailList => {\r\n\t\t\tconst filteredList = prevEmailList.filter(email => {\r\n\t\t\t\treturn email !== emailName\r\n\t\t\t})\r\n\t\t\treturn filteredList\r\n\t\t})\r\n\r\n\t\tsetContactFieldList(prevList => {\r\n\t\t\treturn prevList.filter((name : string) => {\r\n\t\t\t\treturn !(\r\n\t\t\t\t\tname === `${prefix}[emailList][${setIndex}][emailType]` ||\r\n\t\t\t\t\tname === `${prefix}[emailList][${setIndex}][emailAddress]`\r\n\t\t\t\t)\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\tconst onAddPhone = () => {\r\n\t\tconst unused = phoneListAllowed.filter(phone => {\r\n\t\t\treturn !phoneList.includes(phone)\r\n\t\t})\r\n\t\tsetPhoneList(prevPhoneList => {\r\n\t\t\treturn (unused.length > 0) ? [...prevPhoneList, unused[0]] : prevPhoneList\r\n\t\t})\r\n\r\n\t\tsetContactFieldList(prevList => {\r\n\t\t\tconst setNumber = unused[0].charAt(unused[0].length-1)\r\n\t\t\treturn [...prevList, \r\n\t\t\t\t`${prefix}[phoneList][${setNumber}][phoneNum]`,\r\n\t\t\t\t`${prefix}[phoneList][${setNumber}][phoneTypeCd]`\r\n\t\t\t]\r\n\t\t})\r\n\t}\r\n\tconst onRemovePhone = (phoneName : string) => {\r\n\t\tconst setIndex = phoneName.charAt(phoneName.length-1)\r\n\t\tsetPhoneList(prevPhoneList => {\r\n\t\t\tconst filteredList = prevPhoneList.filter(phone => {\r\n\t\t\t\treturn phone !== phoneName\r\n\t\t\t})\r\n\t\t\treturn filteredList\r\n\t\t})\r\n\r\n\t\tsetContactFieldList(prevList => {\r\n\t\t\treturn prevList.filter((name : string) => {\r\n\t\t\t\treturn !(\r\n\t\t\t\t\tname === `${prefix}[phoneList][${setIndex}][phoneNum]` ||\r\n\t\t\t\t\tname === `${prefix}[phoneList][${setIndex}][phoneTypeCd]`\r\n\t\t\t\t)\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t// TO-DO\r\n\t\t// 6. For phone number, we might need an update to C1DS to allow Select component\r\n\t\t//    to accept both dropdown and user input\r\n\t\t<Box position=\"relative\">\r\n\t\t\t<Box \r\n\t\t\t\tas={Close} \r\n\t\t\t\tm={8} \r\n\t\t\t\tright={0} \r\n\t\t\t\tposition=\"absolute\"\r\n\t\t\t\tcursor=\"pointer\"\r\n\t\t\t\tcolor=\"text\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tonRemove()\r\n\t\t\t\t}}/>\r\n\t\t\r\n\t\t\t<Grid\r\n\t\t\t\tborder=\"1px\"\r\n\t\t\t\tborderStyle=\"solid\"\r\n\t\t\t\tborderColor=\"lightGray\"\r\n\t\t\t\tgridColumn={{ base: \"1 / -1\", md: \"1 / 9\" }}\r\n\t\t\t\tgridGap={{ base: \"16px\", md: \"24px\" }}\r\n\t\t\t\tpadding={{ base: \"16px\", md: \"24px\" }}\r\n\t\t\t\tgridTemplateColumns={{ base: \"repeat(12,1fr)\" }}>\r\n\r\n\t\t\t\t{/* Placeholder for Phone ID */}\r\n\t\t\t\t<input \r\n\t\t\t\t\tref={register}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname={`${prefix}[personId]`} \r\n\t\t\t\t\thidden\r\n\t\t\t\t\tdefaultValue={`person${pocIndex}`}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"1 / 7\" }}>\r\n\t\t\t\t\t<FormIconInput labelText=\"First Name\" labelId=\"firstNameLabel\" icon={Person}>\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\t\trequired: isAllPhoneEmailEmpty() || !isNameFieldsEmpty() ? false : \"First Name is required\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tid=\"givenName\"\r\n\t\t\t\t\t\t\tname={`${prefix}[givenName]`}\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tvalidationState={ errorFirstName ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\terrorMessage={errorFirstName?.message}\r\n\t\t\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\t\t\tonBlur={(filterOnNameBlur)}\r\n\t\t\t\t\t\t\tmaxLength={33}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormIconInput>\r\n\t\t\t\t</Box>\r\n\t\t\t\t\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"7 / -1\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"Last Name\" labelId=\"lastNameLabel\">\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\t\trequired: isAllPhoneEmailEmpty() || !isNameFieldsEmpty() ? false : \"Last Name is required\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tid=\"surName\"\r\n\t\t\t\t\t\t\tname={`${prefix}[surName]`}\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tvalidationState={ errorLastName ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\terrorMessage={errorLastName?.message}\r\n\t\t\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\t\t\tonBlur={filterOnNameBlur}\r\n\t\t\t\t\t\t\tmaxLength={33}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t\t\r\n\t\t\t\t{/* Email Set(address and type) List  , max = 3 */}\r\n\t\t\t\t{emailList.map((value: string, index: number) => {\r\n\t\t\t\t\tconst setNumber = value.charAt(value.length-1)\r\n\t\t\t\t\t//if list has less than 3 and is the first set \r\n\t\t\t\t\tconst addable = emailList.length < 3 && index === 0\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<POCEmail \r\n\t\t\t\t\t\t\t// EX, key = pocList0-emailDto0, 1, or 2\r\n\t\t\t\t\t\t\tkey={`${prefix}-${value}`}\r\n\t\t\t\t\t\t\t// EX, id = pocList-0-emailList-0, 1, or 2\r\n\t\t\t\t\t\t\tnamePrefix={`pocList-${pocIndex}-emailList-${setNumber}`}\r\n\t\t\t\t\t\t\tisFirst={index === 0}\r\n\t\t\t\t\t\t\taddable={addable}\r\n\t\t\t\t\t\t\tonEmptyEmail={initialEmailList.length === 0}\r\n\t\t\t\t\t\t\tfilterOnTextChange={filterSpaceBeginning}\r\n\t\t\t\t\t\t\ttriggerAllFields={triggerAllFields}\r\n\t\t\t\t\t\t\tonAdd={() => onAddEmail()}\r\n\t\t\t\t\t\t\tonRemove={()=> {\r\n\t\t\t\t\t\t\t\tonRemoveEmail(value)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\r\n\t\t\t\t{/* Phone Set(address and type) List , max = 3 */}\r\n\t\t\t\t{phoneList.map((value: string, index: number) => {\r\n\t\t\t\t\tconst setNumber = value.charAt(value.length-1)\r\n\t\t\t\t\tconst addable = phoneList.length < 3 && index === 0\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<POCPhone\r\n\t\t\t\t\t\t\t// EX, key = pocList0-phoneDto0,1, or 2\r\n\t\t\t\t\t\t\tkey={`${prefix}-${value}`}\r\n\t\t\t\t\t\t\tnamePrefix={`pocList-${pocIndex}-phoneList-${setNumber}`}\r\n\t\t\t\t\t\t\tisFirst={index === 0}\r\n\t\t\t\t\t\t\taddable={addable}\r\n\t\t\t\t\t\t\tonEmptyPhone={initialPhoneList.length === 0}\r\n\t\t\t\t\t\t\tfilterOnTextChange={filterSpaceBeginning}\r\n\t\t\t\t\t\t\ttriggerAllFields={triggerAllFields}\r\n\t\t\t\t\t\t\tonAdd={() => onAddPhone()}\r\n\t\t\t\t\t\t\tonRemove={()=> {\r\n\t\t\t\t\t\t\t\tonRemovePhone(value)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</Grid>\r\n\t\t</Box>\r\n\t)\r\n}\r\n\r\nexport default POCBox\r\n","import React, { useState } from \"react\"\r\nimport { FormSection } from \"../Forms/Form\"\r\nimport { Box } from \"@chakra-ui/core\"\r\nimport { P, Link } from \"@c1ds/components\"\r\nimport POCBox from \"../POCBox\"\r\n\r\ninterface POCDetailsProps {\r\n\tpocList? : POC[]\r\n}\r\n\r\nconst POCDetails: React.FC<POCDetailsProps> = (p : POCDetailsProps) => {\r\n\tconst { pocList } = p\r\n\tconst [pocIndex, setPocIndex] = useState(pocList ? (pocList.length === 0 ? 1 : pocList.length) : 1)\r\n\t// pocBoxes = [ 'poc0', 'poc1', ,,, 'pocN']\r\n\tconst [pocBoxes, setPocBoxes] = useState(() => pocList ? (pocList.length > 0 ? pocList.map((_,index) => {\r\n\t\treturn 'poc' + index\r\n\t}) : ['poc0']) : ['poc0'])\r\n\r\n\treturn (\r\n\t\t<FormSection title=\"Point Of Contact\" showDivider={false}>\r\n\t\t\t<Box gridColumn=\"1 / -1\">\r\n\t\t\t\t<P>Enter a point of contact at this location.</P>\r\n\t\t\t</Box>\r\n\t\t\t{/* Display all pocBoxes available */}\r\n\t\t\t{pocBoxes.map((value: string) => {\r\n\t\t\t\t// value is constructed as \"poc\" + index, thus transform index part into number\r\n\t\t\t\tconst pocIndex = +value.slice(3)\r\n\t\t\t\tconst isEmailListEmpty = pocList && pocList[pocIndex] && pocList[pocIndex].emailList.length === 0\r\n\t\t\t\tconst isPhoneListEmpty = pocList && pocList[pocIndex] && pocList[pocIndex].phoneList.length === 0\r\n\t\t\t\treturn (\r\n\t\t\t\t\t// key : PocBox-{index}, index will be used in POCBox component\r\n\t\t\t\t\t<Box key={value} gridColumn={{ base: \"1 / -1\", md: \"1 / 7\", lg: \"1 / 9\" }}>\r\n\t\t\t\t\t\t<POCBox \r\n\t\t\t\t\t\t\tpocIndex={pocIndex}\r\n\t\t\t\t\t\t\tinitialEmailList={pocList && pocList[pocIndex] && !isEmailListEmpty ? pocList[pocIndex].emailList : []}\r\n\t\t\t\t\t\t\tinitialPhoneList={pocList && pocList[pocIndex] && !isPhoneListEmpty ? pocList[pocIndex].phoneList : []}\r\n\t\t\t\t\t\t\tonRemove={()=>{\r\n\t\t\t\t\t\t\t\tsetPocBoxes(pocBoxes.filter(boxName => boxName !== value))\r\n\t\t\t\t\t\t\t}} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t\t{/* This link adds more pocBoxes */}\r\n\t\t\t<Box gridColumn=\"1 / -1\">\r\n\t\t\t\t<Link\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetPocBoxes((currPocBoxes) => {\r\n\t\t\t\t\t\t\treturn [...currPocBoxes, `poc${pocIndex}`]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tsetPocIndex(pocIndex+1)\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\tAdd Another Point of Contact\r\n\t\t\t\t</Link>\r\n\t\t\t</Box>\r\n\t\t\t\r\n\t\t</FormSection>\r\n\t)\r\n}\r\n\r\nexport default POCDetails\r\n","/**\r\n * Replace all of the same key name with the replacement value in dataObj object\r\n *\r\n * @param dataObj Object that needs value replacement\r\n * @param name name of the key property\r\n * @param replacement replacemnet value\r\n *\r\n * @returns N/A\r\n */\r\nconst replaceValue = (dataObj: any, name: string, replacement: any) => {\r\n\tfor (const key in dataObj) {\r\n\t\tif (Object.prototype.hasOwnProperty.call(dataObj, key)) {\r\n\t\t\tif (typeof dataObj[key] == \"object\") {\r\n\t\t\t\treplaceValue(dataObj[key], name, replacement)\r\n\t\t\t}\r\n\t\t\tif (key === name) {\r\n\t\t\t\tdataObj[`${name}`] = replacement\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Retrieve saved Last Known Location DTO and create LKLForm data,\r\n *\r\n * @param lklDto LKL information that are retrieved when page load\r\n *\r\n * @returns LKLFormData object containing location information from given LKLDto\r\n */\r\nexport const LklDto_To_LklFormData = (lklDto: LklDto): LKLFormData => {\r\n\tconst { activeIndicator, lookupLklDto } = lklDto\r\n\tconst { lklTitle, locationDesc, postCd, lklAddressDto, lklPocListDto } = lookupLklDto ?? {}\r\n\tconst { addressDto } = lklAddressDto ?? {}\r\n\r\n\t// extract address information\r\n\tconst { addressTypeCd, address1, address2, city, countryCd, postalCode, stateCd, province, latitude, longitude } =\r\n\t\taddressDto ?? {}\r\n\r\n\t// create pocList required in LKLFormData\r\n\tconst pocList = lklPocListDto?.map(lklPocListDtoData => {\r\n\t\tconst personDto = lklPocListDtoData.personDto\r\n\t\tconst { personId, givenName, surName, personEmailDtoList, personPhoneDtoList } = personDto\r\n\r\n\t\tconst emailList = personEmailDtoList.map(emailData => {\r\n\t\t\tconst emailDto = emailData.emailDto\r\n\t\t\treturn {\r\n\t\t\t\temailAddress: emailDto.emailAddress,\r\n\t\t\t\temailType: emailDto.emailTypeCd,\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tconst phoneList = personPhoneDtoList.map(phoneData => {\r\n\t\t\tconst phoneDto = phoneData.phoneDto\r\n\t\t\treturn {\r\n\t\t\t\tphoneNum: phoneDto.phoneNum,\r\n\t\t\t\tphoneTypeCd: phoneDto.phoneTypeCd,\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\t// interface POC\r\n\t\treturn {\r\n\t\t\tpersonId: personId,\r\n\t\t\tgivenName: givenName,\r\n\t\t\tsurName: surName,\r\n\t\t\tphoneList: phoneList,\r\n\t\t\temailList: emailList,\r\n\t\t}\r\n\t})\r\n\r\n\treturn {\r\n\t\teventId: lklDto.eventId,\r\n\t\teventLklId: lklDto.eventLklId,\r\n\t\tlklTitle: lklTitle,\r\n\t\tactiveIndicator: activeIndicator ?? false,\r\n\t\tcountry: countryCd,\r\n\t\tpost: postCd,\r\n\t\tstreetAddress: address1,\r\n\t\tadditionalAddress: address2,\r\n\t\tcity: city,\r\n\t\tstateCd: stateCd,\r\n\t\tprovince: province,\r\n\t\tpostalCode: postalCode,\r\n\t\tlongitude: longitude,\r\n\t\tlatitude: latitude,\r\n\t\tlocationType: addressTypeCd,\r\n\t\tlocationDesc: locationDesc,\r\n\t\tpocList: pocList,\r\n\t}\r\n}\r\n\r\n/**\r\n * Move over Location values from LKLFormData object to LKLDto object,\r\n *\r\n * @param lklFormData LKLFormData object that submitted from LKL form\r\n * @param lklDto Received/New LKLDto to create/update\r\n *\r\n * @returns LKLFormData object containing location information from given LKLDto\r\n */\r\nexport const LlkFormData_To_LklDto = (lklFormData: LKLFormData, lklDto: LklDto | undefined) => {\r\n\tconst {\r\n\t\teventId,\r\n\t\teventLklId,\r\n\t\tlklTitle,\r\n\t\tactiveIndicator,\r\n\t\tcountry,\r\n\t\tpost,\r\n\t\tstreetAddress,\r\n\t\tadditionalAddress,\r\n\t\tcity,\r\n\t\tstateCd,\r\n\t\tprovince,\r\n\t\tpostalCode,\r\n\t\tlongitude,\r\n\t\tlatitude,\r\n\t\tlocationType,\r\n\t\tlocationDesc,\r\n\t\tpocList,\r\n\t} = lklFormData\r\n\r\n\tconst pocListDefined = pocList ? pocList : []\r\n\tconst locationDescDefined = typeof locationDesc !== 'undefined' ? locationDesc : ''\r\n\tconst locationTypeDefined = typeof locationType !== 'undefined' ? locationType : ''\r\n\r\n\t// Have to have name and either phone or email thus, without names = empty poc\r\n\tconst pocListDtoList = pocListDefined\r\n\t\t?.filter(poc => {\r\n\t\t\treturn poc.givenName !== \"\" || poc.surName !== \"\"\r\n\t\t})\r\n\t\t.map((poc, index) => {\r\n\t\t\tconst personEmailDtoList = poc.emailList\r\n\t\t\t\t.filter(emailData => {\r\n\t\t\t\t\treturn emailData.emailAddress !== \"\"\r\n\t\t\t\t})\r\n\t\t\t\t.map((emailData, index) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tpersonEmailId: index,\r\n\t\t\t\t\t\temailDto: {\r\n\t\t\t\t\t\t\temailId: \"0\",\r\n\t\t\t\t\t\t\temailAddress: emailData.emailAddress,\r\n\t\t\t\t\t\t\temailTypeCd: emailData.emailType\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\tconst personPhoneDtoList = poc.phoneList\r\n\t\t\t\t.filter(phoneData => {\r\n\t\t\t\t\treturn phoneData.phoneNum !== \"\"\r\n\t\t\t\t})\r\n\t\t\t\t.map(phoneData => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tpersonPhoneId: index,\r\n\t\t\t\t\t\tphoneDto: {\r\n\t\t\t\t\t\t\tphoneId: \"0\",\r\n\t\t\t\t\t\t\tphoneNum: phoneData.phoneNum,\r\n\t\t\t\t\t\t\tphoneTypeCd: phoneData.phoneTypeCd,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\tconst personDto = {\r\n\t\t\t\tpersonId: poc.personId,\r\n\t\t\t\tgivenName: poc.givenName,\r\n\t\t\t\tsurName: poc.surName,\r\n\t\t\t\tpersonEmailDtoList: personEmailDtoList,\r\n\t\t\t\tpersonPhoneDtoList: personPhoneDtoList,\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tlklPocId: index,\r\n\t\t\t\tpersonDto: personDto,\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t// In case of new LKLDto\r\n\tconst newLklDto = {\r\n\t\teventId: eventId,\r\n\t\teventLklId: eventLklId ?? `${Math.floor(Math.random() * Math.floor(1000000))}`,\r\n\t\tactiveIndicator: activeIndicator === \"Active\" ? true : false,\r\n\t\tlklTypeCd: locationTypeDefined,\r\n\t\tcreatedDateTime: new Date(),\r\n\t\tlastUpdatedDateTime: new Date(),\r\n\t\tlookupLklDto: {\r\n\t\t\tlookupLklId: 0,\r\n\t\t\tlklTitle: lklTitle,\r\n\t\t\tlocationDesc: locationDescDefined,\r\n\t\t\tpostCd: post,\r\n\t\t\tcountryCd: country,\r\n\t\t\tlklAddressDto: {\r\n\t\t\t\tlklAddressId: \"\",\r\n\t\t\t\taddressDto: {\r\n\t\t\t\t\taddressId: \"\",\r\n\t\t\t\t\taddressTypeCd: locationTypeDefined,\r\n\t\t\t\t\tlatitude: latitude,\r\n\t\t\t\t\tlongitude: longitude,\r\n\t\t\t\t\taddress1: streetAddress,\r\n\t\t\t\t\taddress2: additionalAddress,\r\n\t\t\t\t\tcity: city,\r\n\t\t\t\t\tcountryCd: country,\r\n\t\t\t\t\tpostalCode: postalCode,\r\n\t\t\t\t\tprovince: province,\r\n\t\t\t\t\tstateCd: stateCd,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tlklPocListDto: pocListDtoList,\r\n\t\t},\r\n\t}\r\n\r\n\tif (lklDto) {\r\n\t\t// Create LKLPocListDto : LklPocListDto[]\r\n\t\treplaceValue(lklDto, \"activeIndicator\", activeIndicator === \"Active\" ? true : false)\r\n\t\treplaceValue(lklDto, \"lklTitle\", lklTitle)\r\n\t\treplaceValue(lklDto, \"countryCd\", country)\r\n\t\treplaceValue(lklDto, \"postCd\", post)\r\n\t\treplaceValue(lklDto, \"address1\", streetAddress)\r\n\t\treplaceValue(lklDto, \"address2\", additionalAddress)\r\n\t\treplaceValue(lklDto, \"city\", city)\r\n\t\treplaceValue(lklDto, \"stateCd\", stateCd)\r\n\t\treplaceValue(lklDto, \"province\", province)\r\n\t\treplaceValue(lklDto, \"postalCode\", postalCode)\r\n\t\treplaceValue(lklDto, \"addressTypeCd\", locationTypeDefined)\r\n\t\treplaceValue(lklDto, \"longitude\", longitude)\r\n\t\treplaceValue(lklDto, \"latitude\", latitude)\r\n\t\treplaceValue(lklDto, \"locationDesc\", locationDescDefined)\r\n\t\treplaceValue(lklDto, \"lklPocListDto\", pocListDtoList)\r\n\r\n\t\treplaceValue(lklDto, \"lastUpdatedDateTime\", new Date())\r\n\t}\r\n\r\n\treturn lklDto ? (lklDto as LklDto) : newLklDto\r\n}\r\n","import React, { useCallback, useState } from \"react\"\r\nimport Layout, { LayoutProps } from \"../../components/Layout\"\r\nimport { navigate } from \"gatsby\"\r\nimport { FormProvider, useForm } from \"react-hook-form\"\r\nimport { Button, LinkButton } from \"@c1ds/components\"\r\nimport { Box, Grid, useDisclosure } from \"@chakra-ui/core\"\r\nimport LocationDetails from \"../FormSections/LocationDetails\"\r\nimport POCDetails from \"../FormSections/POCDetails\"\r\nimport { DataLossModal } from \"../Modals/DataLossModal\"\r\nimport { SaveModal } from \"../Modals/SaveModal\"\r\nimport { EventPageState } from \"../../pages/event\"\r\nimport { AddLocationPageState } from \"../../pages/addLocation\"\r\nimport { Form, useCTFFormContext } from \"./Form\"\r\nimport { getSavedForm, useSavedForm } from \"../Utility/formHelpers\"\r\nimport { LklDto_To_LklFormData, LlkFormData_To_LklDto } from \"../Utility/lklFormHelpers\"\r\n\r\ninterface LKLFormProps {\r\n\teventId: string\r\n\tsavedForm?: LklDto\r\n}\r\n\r\nconst LKLForm: React.FC<LKLFormProps> = (p: LKLFormProps) => {\r\n\tconst { eventId, savedForm } = p\r\n\tconst { isEdit, isCreate } = useCTFFormContext()\r\n\tconst [, updateSavedEvents] = useSavedForm<EventFormData[]>(\"ctfForms\", \"events\", true)\r\n\tconst [breadcrumbLink, setBreadcrumbLink] = useState<\"/event\" | \"/addLocation\">(\"/event\")\r\n\tconst [addAnother, setAddAnother] = useState(false)\r\n\tconst { isOpen: isDataLossOpen, onOpen: onDataLossOpen, onClose: onDataLossClose } = useDisclosure()\r\n\tconst { isOpen: isSaveOpen, onOpen: onSaveOpen, onClose: onSaveClose } = useDisclosure()\r\n\r\n\tconst defaultValues = {\r\n\t\teventId: eventId,\r\n\t\tlklTitle: \"\",\r\n\t\tactiveIndicator: true,\r\n\t\tpocList: [],\r\n\t}\r\n\r\n\tconst pointOfContact = savedForm ? LklDto_To_LklFormData(savedForm) : undefined\r\n\r\n\tconst formMethods = useForm<LKLFormData>({\r\n\t\tmode: \"onBlur\",\r\n\t\tdefaultValues: savedForm ? pointOfContact : defaultValues,\r\n\t})\r\n\tconst { handleSubmit, register } = formMethods\r\n\r\n\tconst onSubmit = useCallback(\r\n\t\tdata => {\r\n\t\t\tconst newLklDto = LlkFormData_To_LklDto(data, savedForm)\r\n\t\t\tconst savedEvents = [...getSavedForm<EventFormData[]>(\"ctfForms\", \"events\", [])]\r\n\t\t\tconst savedEventIndex = savedEvents.findIndex((evt: EventFormData) => evt.eventId === eventId)\r\n\t\t\tconst savedEvent = { ...savedEvents[savedEventIndex] }\r\n\r\n\t\t\t// Save form data into CTF Events\r\n\t\t\tif (isEdit && savedForm !== undefined) {\r\n\t\t\t\tconst savedLklIndex = savedEvent.eventLklDtoList?.findIndex(\r\n\t\t\t\t\t(lklDto: LklDto) => lklDto.eventLklId === savedForm.eventLklId\r\n\t\t\t\t)\r\n\r\n\t\t\t\t// Replace the new LKLDto into the selected event LKL list then replace event in all event list\r\n\t\t\t\tif (typeof savedEvent.eventLklDtoList !== \"undefined\" && typeof savedLklIndex !== \"undefined\") {\r\n\t\t\t\t\tsavedEvent.eventLklDtoList?.splice(savedLklIndex, 1, newLklDto as LklDto)\r\n\t\t\t\t\tsavedEvents.splice(savedEventIndex, 1, savedEvent)\r\n\r\n\t\t\t\t\t// Update the event list\r\n\t\t\t\t\tupdateSavedEvents(savedEvents)\r\n\r\n\t\t\t\t\tonSaveOpen()\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tconst pageState: EventPageState = {\r\n\t\t\t\t\t\t\teventId: savedForm.eventId,\r\n\t\t\t\t\t\t\tformSection: \"locations\",\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnavigate(\"/event\", { state: pageState })\r\n\t\t\t\t\t\tonSaveClose()\r\n\t\t\t\t\t}, 2000)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst pageState: EventPageState = {\r\n\t\t\t\t\t\teventId: savedForm.eventId,\r\n\t\t\t\t\t\tformSection: \"locations\",\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnavigate(\"/event\", { state: pageState })\r\n\t\t\t\t}\r\n\t\t\t} else if (isCreate) {\r\n\t\t\t\tif (typeof savedEvent.eventLklDtoList === \"undefined\") {\r\n\t\t\t\t\tsavedEvent.eventLklDtoList = [newLklDto as LklDto]\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsavedEvent.eventLklDtoList.push(newLklDto as LklDto)\r\n\t\t\t\t}\r\n\t\t\t\tsavedEvents.splice(savedEventIndex, 1, savedEvent)\r\n\r\n\t\t\t\t// Update the event list\r\n\t\t\t\tupdateSavedEvents(savedEvents)\r\n\r\n\t\t\t\tonSaveOpen()\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tif (addAnother) {\r\n\t\t\t\t\t\twindow.location.reload()\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// TODO: Once microservice is connected, use returned eventId/event data\r\n\t\t\t\t\t\tconst pageState: EventPageState = {\r\n\t\t\t\t\t\t\teventId: eventId,\r\n\t\t\t\t\t\t\tformSection: \"locations\",\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnavigate(\"/event\", { state: pageState })\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonSaveClose()\r\n\t\t\t\t}, 2000)\r\n\t\t\t}\r\n\t\t\t// TODO for newLocation and attach it to the addLocation page\r\n\t\t},\r\n\t\t[updateSavedEvents, savedForm, isEdit, isCreate, eventId, onSaveOpen, onSaveClose, addAnother]\r\n\t)\r\n\r\n\tlet pageHeading, pageDescription, breadcrumbs: LayoutProps[\"breadcrumbs\"]\r\n\tif (isEdit) {\r\n\t\tpageHeading = \"Edit Location\"\r\n\t\tpageDescription = \"Provide as much information as you have for the this location.\"\r\n\t\tbreadcrumbs = [\r\n\t\t\t{\r\n\t\t\t\tlabel: \"Event\",\r\n\t\t\t\tonClick: () => {\r\n\t\t\t\t\tsetBreadcrumbLink(\"/event\")\r\n\t\t\t\t\tonDataLossOpen()\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{ label: \"Edit Location\" },\r\n\t\t]\r\n\t} else {\r\n\t\tpageHeading = \"New Location\"\r\n\t\t;(pageDescription = \"Provide as much information as you have for the new location.\"),\r\n\t\t\t(breadcrumbs = [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Event\",\r\n\t\t\t\t\tonClick: () => {\r\n\t\t\t\t\t\tsetBreadcrumbLink(\"/event\")\r\n\t\t\t\t\t\tonDataLossOpen()\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Add Location\",\r\n\t\t\t\t\tonClick: () => {\r\n\t\t\t\t\t\tsetBreadcrumbLink(\"/addLocation\")\r\n\t\t\t\t\t\tonDataLossOpen()\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{ label: \"New Location\" },\r\n\t\t\t])\r\n\t}\r\n\r\n\tconst pageState: EventPageState = {\r\n\t\t// TODO: Uncomment once form integration is established\r\n\t\t// eventId: getValues(\"eventId\"),\r\n\t\teventId: eventId,\r\n\t\tformSection: \"locations\",\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Layout\r\n\t\t\tpageTitle=\"Location Details\"\r\n\t\t\tpageHeading={pageHeading}\r\n\t\t\tpageDescription={pageDescription}\r\n\t\t\tbreadcrumbs={breadcrumbs}>\r\n\t\t\t<FormProvider {...formMethods}>\r\n\t\t\t\t<Form\r\n\t\t\t\t\tid=\"LKLForm\"\r\n\t\t\t\t\tonSubmit={handleSubmit(data => {\r\n\t\t\t\t\t\tonSubmit(data)\r\n\t\t\t\t\t})}>\r\n\t\t\t\t\t<input name=\"eventId\" type=\"hidden\" ref={register} />\r\n\t\t\t\t\t<LocationDetails />\r\n\t\t\t\t\t<POCDetails pocList={pointOfContact ? pointOfContact.pocList : undefined} />\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tas=\"nav\"\r\n\t\t\t\t\t\taria-label=\"page\"\r\n\t\t\t\t\t\tid=\"pageNav\"\r\n\t\t\t\t\t\tgridColumn=\"1 / -1\"\r\n\t\t\t\t\t\talignSelf=\"center\"\r\n\t\t\t\t\t\tgridGap={{ base: \"16px\", md: \"24px\" }}\r\n\t\t\t\t\t\tmarginTop={{ md: \"72\" }}\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\theight={48}\r\n\t\t\t\t\t\tgridTemplateColumns={{ base: \"repeat(12, 1fr)\", md: \"repeat(14, 1fr)\", lg: \"repeat(12, 1fr)\" }}>\r\n\t\t\t\t\t\t{isEdit ? (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\t\t\tgridColumn={{ base: \"6 / 9\", sm: \"9 / 11\", md: \"1 / 2\" }}\r\n\t\t\t\t\t\t\t\t\tgridRow={1}\r\n\t\t\t\t\t\t\t\t\tjustifySelf=\"center\"\r\n\t\t\t\t\t\t\t\t\talignSelf=\"center\">\r\n\t\t\t\t\t\t\t\t\t<LinkButton\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetBreadcrumbLink(\"/event\")\r\n\t\t\t\t\t\t\t\t\t\t\tonDataLossOpen()\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t\t</LinkButton>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t<Box gridColumn={{ base: \"9 / -1\", sm: \"11 / -1\", md: \"2 / 3\" }} gridRow={1}>\r\n\t\t\t\t\t\t\t\t\t<Button type=\"submit\" size=\"full\">\r\n\t\t\t\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"10 / 15\", lg: \"10 / 13\" }} gridRow={{ md: \"1\" }}>\r\n\t\t\t\t\t\t\t\t\t<Button type=\"submit\" size=\"full\">\r\n\t\t\t\t\t\t\t\t\t\tCreate New Location\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"5 / 10\", lg: \"7 / 10\" }} gridRow={{ md: \"1\" }}>\r\n\t\t\t\t\t\t\t\t\t<Button size=\"full\" buttonType=\"secondary\" type=\"submit\" onClick={() => setAddAnother(true)}>\r\n\t\t\t\t\t\t\t\t\t\tCreate and Add Another\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\t\t\tgridColumn={{ base: \"1 / -1\", md: \"1 / 2\" }}\r\n\t\t\t\t\t\t\t\t\tgridRow={{ md: \"1\" }}\r\n\t\t\t\t\t\t\t\t\tjustifySelf=\"center\"\r\n\t\t\t\t\t\t\t\t\talignSelf=\"center\">\r\n\t\t\t\t\t\t\t\t\t<LinkButton\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetBreadcrumbLink(\"/addLocation\")\r\n\t\t\t\t\t\t\t\t\t\t\tonDataLossOpen()\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t\t</LinkButton>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<DataLossModal\r\n\t\t\t\t\t\tisOpen={isDataLossOpen}\r\n\t\t\t\t\t\tonClose={onDataLossClose}\r\n\t\t\t\t\t\tonLeave={() => {\r\n\t\t\t\t\t\t\tlet pageState: EventPageState | AddLocationPageState\r\n\t\t\t\t\t\t\tif (breadcrumbLink === \"/event\") {\r\n\t\t\t\t\t\t\t\tpageState = {\r\n\t\t\t\t\t\t\t\t\t// TODO: Uncomment once form integration is established\r\n\t\t\t\t\t\t\t\t\t// eventId: getValues(\"eventId\"),\r\n\t\t\t\t\t\t\t\t\teventId: eventId,\r\n\t\t\t\t\t\t\t\t\tformSection: \"locations\",\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst savedEvents = getSavedForm<Array<EventFormData>>(\"ctfForms\", \"events\")\r\n\t\t\t\t\t\t\t\tconst savedEvent =\r\n\t\t\t\t\t\t\t\t\tsavedEvents && savedEvents.find((event: EventFormData) => event.eventId === eventId)\r\n\t\t\t\t\t\t\t\tpageState = {\r\n\t\t\t\t\t\t\t\t\tsavedEvent: savedEvent,\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tnavigate(breadcrumbLink, { state: pageState })\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<SaveModal\r\n\t\t\t\t\t\tisOpen={isSaveOpen}\r\n\t\t\t\t\t\tonClose={onSaveClose}\r\n\t\t\t\t\t\tmessage={isCreate ? \"Creating new location.\" : \"Saving location.\"}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form>\r\n\t\t\t</FormProvider>\r\n\t\t</Layout>\r\n\t)\r\n}\r\n\r\nexport default LKLForm\r\n","import React from \"react\"\r\nimport moment from \"moment\"\r\nimport { getSavedForm } from \"../components/Utility/formHelpers\"\r\nimport { CTFFormProvider, CTFFormProviderProps } from \"../components/Forms/Form\"\r\nimport LKLForm from \"../components/Forms/LKLForm\"\r\n\r\nexport interface LocationPageState {\r\n\teventId: string\r\n\t/**\r\n\t * Provide Event Location ID to\r\n\t * open form in edit mode\r\n\t */\r\n\teventLklId?: string\r\n}\r\n\r\ntype LocationPageProps = {\r\n\tlocation: {\r\n\t\tstate: LocationPageState\r\n\t}\r\n}\r\n\r\nconst NewLocationPage: React.FC<LocationPageProps> = (p: LocationPageProps) => {\r\n\tlet savedLkl: LklDto | undefined\r\n\tif (p.location?.state?.eventLklId) {\r\n\t\tconst savedEvents = getSavedForm<Array<EventFormData>>(\"ctfForms\", \"events\")\r\n\t\tconst savedEvent = savedEvents && savedEvents.find((event: EventFormData) => event.eventId === p.location?.state?.eventId)\r\n\t\tsavedLkl = savedEvent?.eventLklDtoList?.find((lklDto: LklDto) => lklDto.eventLklId === p.location?.state?.eventLklId)\r\n\t\tif (savedLkl) {\r\n\t\t\tif (savedLkl.createdDateTime) savedLkl.createdDateTime = moment(savedLkl.createdDateTime).toDate()\r\n\t\t\tif (savedLkl.lastUpdatedDateTime) savedLkl.lastUpdatedDateTime = moment(savedLkl.lastUpdatedDateTime).toDate()\r\n\t\t}\r\n\t}\r\n\r\n\tconst formMode: CTFFormProviderProps[\"formMode\"] = typeof savedLkl === \"undefined\" ? \"create\" : \"edit\"\r\n\r\n\treturn (\r\n\t\t<CTFFormProvider formMode={formMode}>\r\n\t\t\t<LKLForm eventId={p.location?.state?.eventId} savedForm={savedLkl} />\r\n\t\t</CTFFormProvider>\r\n\t)\r\n}\r\n\r\nexport default NewLocationPage\r\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { forwardRef } from \"react\";\nimport Box from \"../Box\";\nimport { useFormControl } from \"../FormControl\";\nimport { useColorMode } from \"../ColorModeProvider\";\nexport var RequiredIndicator = function RequiredIndicator(props) {\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var color = {\n    light: \"red.500\",\n    dark: \"red.300\"\n  };\n  return jsx(Box, _extends({\n    as: \"span\",\n    ml: 1,\n    color: color[colorMode],\n    \"aria-hidden\": \"true\",\n    children: \"*\"\n  }, props));\n};\nexport var FormLabel = forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\"]);\n\n  var formControl = useFormControl(props);\n  return jsx(Box, _extends({\n    ref: ref,\n    fontSize: \"md\",\n    pr: \"12px\",\n    pb: \"4px\",\n    opacity: formControl.isDisabled ? \"0.4\" : \"1\",\n    fontWeight: \"medium\",\n    textAlign: \"left\",\n    verticalAlign: \"middle\",\n    display: \"inline-block\",\n    as: \"label\"\n  }, props), children, formControl.isRequired && jsx(RequiredIndicator, null));\n});\nFormLabel.displayName = \"FormLabel\";\nexport default FormLabel;","import React from \"react\"\r\nimport { Box, Flex, Button as ChakraButton } from \"@chakra-ui/core\"\r\nimport { P, Button, H4, Modal, ModalBody, ModalFooter, ModalHeader, ModalCloseButton, LinkButton } from \"@c1ds/components\"\r\n\r\ninterface DeactivateModalProps {\r\n\tisOpen: boolean\r\n\tonCancel: React.ComponentProps<typeof Modal>[\"onClose\"]\r\n\tonConfirm: React.ComponentProps<typeof Modal>[\"onClose\"]\r\n\tlocationName?: string\r\n\t/**\r\n\t * Indicates whether modal is for last known location activation.\r\n\t *\r\n\t * If true, confirmation button/description will display \"Activate\"\r\n\t *\r\n\t * If false, confirmation button/description will display \"Deactivate\"\r\n\t *\r\n\t * If undefined, confirmation button/description will display \"Yes\"\r\n\t */\r\n\tisActivate?: boolean\r\n}\r\n\r\nconst buttonStyle = {\r\n\tdefault: {\r\n\t\tbg: \"badge\",\r\n\t\tcolor: \"white\",\r\n\t\tborder: \"none\",\r\n\t},\r\n\thoverFocus: {\r\n\t\tborderStyle: \"solid\",\r\n\t\tborderWidth: \"2\",\r\n\t\tborderColor: \"accent\",\r\n\t},\r\n\tactive: {\r\n\t\tbg: \"#a30014\",\r\n\t\tborder: \"none\",\r\n\t},\r\n}\r\n\r\nconst DeactivateLklModal: React.FC<DeactivateModalProps> = ({\r\n\tisOpen,\r\n\tonCancel,\r\n\tonConfirm,\r\n\tlocationName,\r\n\tisActivate,\r\n}: DeactivateModalProps) => {\r\n\t// if locationName and isActivate are not defined, it will prompt default Deactivate Modal with no event information.\r\n\tconst status = isActivate ? \"Activate\" : \"Deactivate\"\r\n\r\n\treturn (\r\n\t\t<Modal isOpen={isOpen} onClose={onCancel} isCentered={true} size=\"sm\">\r\n\t\t\t<ModalHeader>\r\n\t\t\t\t<H4>{status} Last Known Location?</H4>\r\n\t\t\t</ModalHeader>\r\n\t\t\t<ModalCloseButton />\r\n\t\t\t<ModalBody>\r\n\t\t\t\t<P>\r\n\t\t\t\t\tAre you sure you want to {status.toLocaleLowerCase()} {locationName ?? \"this last known location?\"}?\r\n\t\t\t\t</P>\r\n\t\t\t</ModalBody>\r\n\r\n\t\t\t<ModalFooter>\r\n\t\t\t\t<Flex align=\"center\">\r\n\t\t\t\t\t<Box marginRight=\"20\">\r\n\t\t\t\t\t\t<LinkButton onClick={onCancel}>Cancel</LinkButton>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t{typeof isActivate === \"undefined\" ? (\r\n\t\t\t\t\t\t<Button size=\"sm\" onClick={onConfirm}>\r\n\t\t\t\t\t\t\tYES\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t) : !isActivate ? (\r\n\t\t\t\t\t\t// Deactivate button with warning background color.\r\n\t\t\t\t\t\t<ChakraButton\r\n\t\t\t\t\t\t\theight=\"input\"\r\n\t\t\t\t\t\t\twidth=\"buttonMd\"\r\n\t\t\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t\t\t\tborderRadius={0}\r\n\t\t\t\t\t\t\tfontFamily=\"body\"\r\n\t\t\t\t\t\t\tfontSize=\"button\"\r\n\t\t\t\t\t\t\tfontWeight=\"button\"\r\n\t\t\t\t\t\t\tpx={20}\r\n\t\t\t\t\t\t\tpy={12}\r\n\t\t\t\t\t\t\t{...buttonStyle.default}\r\n\t\t\t\t\t\t\t_focus={buttonStyle.hoverFocus}\r\n\t\t\t\t\t\t\t_hover={buttonStyle.hoverFocus}\r\n\t\t\t\t\t\t\t_active={buttonStyle.active}\r\n\t\t\t\t\t\t\tonClick={onConfirm}>\r\n\t\t\t\t\t\t\t<Box flex=\"1 1 0\" lineHeight=\"normal\">\r\n\t\t\t\t\t\t\t\t{status}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</ChakraButton>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Button size={isActivate ? \"md\" : \"sm\"} onClick={onConfirm}>\r\n\t\t\t\t\t\t\t{status}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Flex>\r\n\t\t\t</ModalFooter>\r\n\t\t</Modal>\r\n\t)\r\n}\r\n\r\nexport default DeactivateLklModal\r\n","import \"core-js/modules/es6.array.reduce\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { createContext, useContext, forwardRef } from \"react\";\nimport Box from \"../Box\";\nexport var useFormControl = function useFormControl(props) {\n  var context = useFormControlContext();\n\n  if (!context) {\n    return props;\n  }\n\n  var keys = Object.keys(context);\n  return keys.reduce(function (acc, prop) {\n    /** Giving precedence to `props` over `context` */\n    acc[prop] = props[prop];\n\n    if (context) {\n      if (props[prop] == null) {\n        acc[prop] = context[prop];\n      }\n    }\n\n    return acc;\n  }, {});\n};\nvar FormControlContext = createContext();\nexport var useFormControlContext = function useFormControlContext() {\n  return useContext(FormControlContext);\n};\nvar FormControl = forwardRef(function (_ref, ref) {\n  var isInvalid = _ref.isInvalid,\n      isRequired = _ref.isRequired,\n      isDisabled = _ref.isDisabled,\n      isReadOnly = _ref.isReadOnly,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"isInvalid\", \"isRequired\", \"isDisabled\", \"isReadOnly\"]);\n\n  var context = {\n    isRequired: isRequired,\n    isDisabled: isDisabled,\n    isInvalid: isInvalid,\n    isReadOnly: isReadOnly\n  };\n  return jsx(FormControlContext.Provider, {\n    value: context\n  }, jsx(Box, _extends({\n    role: \"group\",\n    ref: ref\n  }, rest)));\n});\nFormControl.displayName = \"FormControl\";\nexport default FormControl;"],"sourceRoot":""}