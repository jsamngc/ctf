{"version":3,"sources":["webpack:///./src/pages/searchLKL.tsx"],"names":["SearchLKLPage","p","breadcrumbs","label","onClick","useDisclosure","onOpen","watchCountry","useWatch","name","countryRef","useRef","postRef","countries","useMemo","countriesList","countries_json","filter","_","index","push","value","sort","countryA","countryB","localeCompare","formMethods","useForm","mode","pageTitle","pageHeading","pageDescription","gridColumn","base","md","lg","labelText","labelId","required","rules","onFocus","current","focus","render","onChange","onBlur","ref","id","aria-labelledby","options","size","validationState","errors","country","ValidationState","ERROR","undefined","errorMessage","message","changes","selectedItem","posts_json","post","country_cd","justifySelf","alignSelf","type"],"mappings":"4NAsHeA,UAzGiC,SAACC,GAAsB,IAGhEC,EAA0C,CAAC,CAAEC,MAAO,QAASC,QAFhCC,cAA3BC,QAEsF,CAAEH,MAAO,iBAEjGI,EAAmCC,YAAS,CAAEC,KAAM,YAEpDC,EAAaC,iBAA0B,MACvCC,EAAUD,iBAA0B,MAGpCE,EAAYC,mBAAQ,WACzB,IAAMC,EAAgBC,EAAeC,QAAO,SAACC,EAAGC,GAAJ,OAAcA,EAAQ,GAAM,KAMxE,OALAJ,EAAcK,KAAK,CAClBjB,MAAO,2BACPkB,MAAO,QAERN,EAAcO,MAAK,SAACC,EAAUC,GAAX,OAAwBD,EAASpB,MAAMsB,cAAcD,EAASrB,UAC1EY,IACL,IAEGW,EAAcC,YAAuB,CAC1CC,KAAM,WAGP,OACC,kBAAC,IAAiBF,EACjB,kBAAC,IAAD,CACCG,UAAU,eACVC,YAAY,eACZC,gBAAgB,+DAChB7B,YAAaA,GACb,kBAAC,IAAD,CAAK8B,WAAY,CAAEC,KAAM,SAAUC,GAAI,QAASC,GAAI,UACnD,kBAAC,IAAD,CAAWC,UAAU,UAAUC,QAAQ,eAAeC,UAAQ,GAC7D,kBAAC,IAAD,CACC7B,KAAK,UACL8B,MAAO,CACND,SAAU,2BAEXE,QAAS,kCAAM9B,EAAW+B,eAAjB,aAAM,EAAoBC,SACnCC,OAAQ,sBAAGC,EAAH,EAAGA,SAAkBvB,GAArB,EAAawB,OAAb,EAAqBxB,OAArB,OACP,kBAAC,IAAD,CACCyB,IAAKpC,EACLqC,GAAG,UACHtC,KAAK,UACLuC,kBAAgB,eAChBC,QAASpC,EACTqC,KAAK,OACLC,iBAAuB,QAAN,EAAAC,cAAA,eAAQC,SAAUC,gBAAgBC,WAAQC,EAC3DC,aAAY,UAAEL,cAAF,iBAAE,EAAQC,eAAV,aAAE,EAAiBK,QAC/Bd,SAAU,SAAAe,GAAW,MACpBf,EAAQ,UAACe,EAAQC,oBAAT,aAAC,EAAsBvC,QAEhCA,MAAOA,SAOZ,kBAAC,IAAD,CAAKW,WAAY,CAAEC,KAAM,SAAUC,GAAI,SAAUC,GAAI,UACpD,kBAAC,IAAD,CAAWC,UAAU,OAAOC,QAAQ,aACnC,kBAAC,IAAD,CACC5B,KAAK,OACL8B,MAAO,CACND,SAAU,wBAEXE,QAAS,kCAAM5B,EAAQ6B,eAAd,aAAM,EAAiBC,SAChCC,OAAQ,gBAAGC,EAAH,EAAGA,SAAkBvB,GAArB,EAAawB,OAAb,EAAqBxB,OAArB,OACP,kBAAC,IAAD,CACCyB,IAAKlC,EACLmC,GAAG,OACHtC,KAAK,OACLuC,kBAAgB,YAChBC,QAASY,EAAW5C,QAAO,SAAA6C,GAAI,OAAIA,EAAKC,aAAexD,KACvD2C,KAAK,OACLN,SAAU,SAAAe,GAAW,MACpBf,EAAQ,UAACe,EAAQC,oBAAT,aAAC,EAAsBvC,QAEhCA,MAAOA,SAOZ,kBAAC,IAAD,CAAKW,WAAY,CAAEC,KAAM,SAAUC,GAAI,QAASC,GAAI,WACnD,kBAAC,IAAD,CAAWC,UAAU,WAAWC,QAAQ,iBACvC,kBAAC,IAAD,CAAMU,GAAG,WAAWtC,KAAK,WAAWyC,KAAK,WAI3C,kBAAC,IAAD,CACClB,WAAY,CAAEC,KAAM,SAAUC,GAAI,SAAUC,GAAI,WAChD6B,YAAa,CAAE/B,KAAM,OACrBgC,UAAW,CAAE/B,GAAI,QACjB,kBAAC,IAAD,CAAQgC,KAAK,SAAShB,KAAK,MAA3B","file":"component---src-pages-search-lkl-tsx-7b0bc42a0626c882cbee.js","sourcesContent":["import React, { useRef, useMemo } from \"react\"\r\nimport Layout, { LayoutProps } from \"../components/Layout\"\r\nimport { FormProvider, Controller, useWatch, useForm } from \"react-hook-form\"\r\nimport { Button } from \"@c1ds/components\"\r\nimport { Box, useDisclosure } from \"@chakra-ui/core\"\r\nimport { Select, FormInput, Text } from \"@c1ds/components\"\r\nimport countries_json from \"../../content/countries.json\"\r\nimport posts_json from \"../../content/posts.json\"\r\n\r\ninterface SearchLKLProps {\r\n\tsavedEvent?: EventFormData\r\n}\r\n\r\nconst SearchLKLPage: React.FC<SearchLKLProps> = (p: SearchLKLProps) => {\r\n\tconst { onOpen: onDataLossOpen } = useDisclosure()\r\n\r\n\tconst breadcrumbs: LayoutProps[\"breadcrumbs\"] = [{ label: \"Event\", onClick: onDataLossOpen }, { label: \"Add Location\" }]\r\n\r\n\tconst watchCountry: string | undefined = useWatch({ name: \"country\" })\r\n\r\n\tconst countryRef = useRef<HTMLButtonElement>(null)\r\n\tconst postRef = useRef<HTMLButtonElement>(null)\r\n\r\n\t// Temporarily decrease size of country list while performance is investigated\r\n\tconst countries = useMemo(() => {\r\n\t\tconst countriesList = countries_json.filter((_, index) => index % 5 === 0)\r\n\t\tcountriesList.push({\r\n\t\t\tlabel: \"UNITED STATES OF AMERICA\",\r\n\t\t\tvalue: \"USA\",\r\n\t\t})\r\n\t\tcountriesList.sort((countryA, countryB) => countryA.label.localeCompare(countryB.label))\r\n\t\treturn countriesList\r\n\t}, [])\r\n\r\n\tconst formMethods = useForm<EventFormData>({\r\n\t\tmode: \"onBlur\",\r\n\t})\r\n\r\n\treturn (\r\n\t\t<FormProvider {...formMethods}>\r\n\t\t\t<Layout\r\n\t\t\t\tpageTitle=\"Add Location\"\r\n\t\t\t\tpageHeading=\"Add Location\"\r\n\t\t\t\tpageDescription=\"Search for an existing last known location or add a new one.\"\r\n\t\t\t\tbreadcrumbs={breadcrumbs}>\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"1 / 5\", lg: \"1 / 4\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"Country\" labelId=\"countryLabel\" required>\r\n\t\t\t\t\t\t<Controller\r\n\t\t\t\t\t\t\tname=\"country\"\r\n\t\t\t\t\t\t\trules={{\r\n\t\t\t\t\t\t\t\trequired: \"Please select a Country\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonFocus={() => countryRef.current?.focus()}\r\n\t\t\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\tref={countryRef}\r\n\t\t\t\t\t\t\t\t\tid=\"country\"\r\n\t\t\t\t\t\t\t\t\tname=\"country\"\r\n\t\t\t\t\t\t\t\t\taria-labelledby=\"countryLabel\"\r\n\t\t\t\t\t\t\t\t\toptions={countries}\r\n\t\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\t\tvalidationState={errors?.country ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\t\t\terrorMessage={errors?.country?.message}\r\n\t\t\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\t\t\tonChange(changes.selectedItem?.value)\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"5 / -1\", lg: \"4 / 7\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"Post\" labelId=\"postLabel\">\r\n\t\t\t\t\t\t<Controller\r\n\t\t\t\t\t\t\tname=\"post\"\r\n\t\t\t\t\t\t\trules={{\r\n\t\t\t\t\t\t\t\trequired: \"Please select a Post\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonFocus={() => postRef.current?.focus()}\r\n\t\t\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\tref={postRef}\r\n\t\t\t\t\t\t\t\t\tid=\"post\"\r\n\t\t\t\t\t\t\t\t\tname=\"post\"\r\n\t\t\t\t\t\t\t\t\taria-labelledby=\"postLabel\"\r\n\t\t\t\t\t\t\t\t\toptions={posts_json.filter(post => post.country_cd === watchCountry)}\r\n\t\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\t\t\tonChange(changes.selectedItem?.value)\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"1 / 7\", lg: \"7 / 11\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"Location\" labelId=\"locationLabel\">\r\n\t\t\t\t\t\t<Text id=\"location\" name=\"location\" size=\"full\" />\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\r\n\t\t\t\t<Box\r\n\t\t\t\t\tgridColumn={{ base: \"4 / -1\", md: \"7 / -1\", lg: \"11 / -1\" }}\r\n\t\t\t\t\tjustifySelf={{ base: \"end\" }}\r\n\t\t\t\t\talignSelf={{ md: \"end\" }}>\r\n\t\t\t\t\t<Button type=\"submit\" size=\"md\">\r\n\t\t\t\t\t\tSearch\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Box>\r\n\t\t\t</Layout>\r\n\t\t</FormProvider>\r\n\t)\r\n}\r\n\r\nexport default SearchLKLPage\r\n"],"sourceRoot":""}