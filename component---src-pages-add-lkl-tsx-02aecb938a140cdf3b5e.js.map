{"version":3,"sources":["webpack:///./src/components/FormSections/LocationDetails.tsx","webpack:///./src/components/Forms/LKLForm.tsx","webpack:///./src/pages/addLKL.tsx"],"names":["filterOnTextChange","e","target","value","replace","validateLongLat","range","regexMatch","RegExp","inRange","parseFloat","LocationDetails","useFormContext","trigger","register","errors","setValue","dirtyFields","formState","countryRef","useRef","postRef","stateRef","locationTypeRef","descriptionRef","watchCountry","useWatch","name","watchLongitude","watchLatitude","watchStreetAddress","watchCity","countries","useMemo","countriesList","countries_json","filter","_","index","push","label","sort","countryA","countryB","localeCompare","locationTypes","undefined","locationTypes_json","locTypeA","locTypeB","stateComp","Box","gridColumn","base","md","labelText","labelId","required","rules","onFocus","current","focus","render","onChange","onBlur","ref","id","aria-labelledby","options","states","size","disabled","validationState","state","ValidationState","ERROR","errorMessage","message","changes","selectedItem","provinceComp","maxLength","Form","title","showDivider","Grid","lg","gridGap","gridTemplateColumns","lklTitle","country","posts","post","country_cd","city","longitude","validate","latitude","locationType","pattern","description","replaceMSWordChars","LKLForm","p","eventId","savedForm","useDisclosure","isDataLossOpen","isOpen","onDataLossOpen","onOpen","onDataLossClose","onClose","formMethods","useForm","mode","defaultValues","activeIndicator","breadcrumbs","onClick","Layout","pageTitle","pageHeading","pageDescription","as","aria-label","alignSelf","marginTop","gridRow","type","preventDefault","window","scrollTo","buttonType","navigate","justifySelf","DataLossModal","onLeave","pageState","formSection","addLKLPage","savedLkl","location","eventLklId","savedEvents","getSavedForm","savedEvent","find","event","eventLklDtoList","lklDto","createdDateTime","moment","toDate","lastUpdatedDateTime","formMode"],"mappings":"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","file":"component---src-pages-add-lkl-tsx-02aecb938a140cdf3b5e.js","sourcesContent":["import React, { useRef, useMemo } from \"react\"\r\nimport { FormSection, replaceMSWordChars } from \"../Forms/Form\"\r\nimport { Box, Grid } from \"@chakra-ui/core\"\r\nimport { Controller, useFormContext, useWatch } from \"react-hook-form\"\r\nimport { Switch, Select, FormInput, Text, ValidationState, Textarea } from \"@c1ds/components\"\r\nimport countries_json from \"../../../content/countries.json\"\r\nimport posts from \"../../../content/posts.json\"\r\nimport states from \"../../../content/states.json\"\r\nimport locationTypes_json from \"../../../content/locationTypes.json\"\r\n\r\nconst LocationDetails: React.FC = () => {\r\n\tconst { trigger, register, errors, setValue, formState } = useFormContext<LklDto>()\r\n\tconst { dirtyFields } = formState\r\n\r\n\tconst countryRef = useRef<HTMLButtonElement>(null)\r\n\tconst postRef = useRef<HTMLButtonElement>(null)\r\n\tconst stateRef = useRef<HTMLButtonElement>(null)\r\n\tconst locationTypeRef = useRef<HTMLButtonElement>(null)\r\n\tconst descriptionRef = useRef<HTMLTextAreaElement>(null)\r\n\r\n\tconst watchCountry: string | undefined = useWatch({ name: \"country\" })\r\n\tconst watchLongitude: string | undefined = useWatch({ name: \"longitude\" })\r\n\tconst watchLatitude: string | undefined = useWatch({ name: \"latitude\" })\r\n\tconst watchStreetAddress: string | undefined = useWatch({ name: \"streetAddress\" })\r\n\tconst watchCity: string | undefined = useWatch({ name: \"city\" })\r\n\r\n\t// Temporarily decrease size of country list while performance is investigated\r\n\tconst countries = useMemo(() => {\r\n\t\tconst countriesList = countries_json.filter((_, index) => index % 5 === 0)\r\n\t\tcountriesList.push({\r\n\t\t\tlabel: \"UNITED STATES OF AMERICA\",\r\n\t\t\tvalue: \"USA\",\r\n\t\t})\r\n\t\tcountriesList.sort((countryA, countryB) => countryA.label.localeCompare(countryB.label))\r\n\t\treturn countriesList\r\n\t}, [])\r\n\r\n\tconst locationTypes = [\r\n\t\t{\r\n\t\t\tlabel: \" \",\r\n\t\t\tvalue: undefined,\r\n\t\t},\r\n\t\t...locationTypes_json.sort((locTypeA, locTypeB) => locTypeA.label.localeCompare(locTypeB.label)),\r\n\t]\r\n\r\n\tconst isDisabled = false\r\n\r\n\tconst stateComp = (\r\n\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 7\" }}>\r\n\t\t\t<FormInput labelText=\"State\" labelId=\"stateLabel\" required>\r\n\t\t\t\t<Controller\r\n\t\t\t\t\tname=\"state\"\r\n\t\t\t\t\trules={{\r\n\t\t\t\t\t\trequired: \"Please select a State\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonFocus={() => stateRef.current?.focus()}\r\n\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tref={stateRef}\r\n\t\t\t\t\t\t\tid=\"state\"\r\n\t\t\t\t\t\t\tname=\"state\"\r\n\t\t\t\t\t\t\taria-labelledby=\"stateLabel\"\r\n\t\t\t\t\t\t\toptions={states}\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tvalidationState={errors?.state ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\terrorMessage={errors?.state?.message}\r\n\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\tonChange(changes.selectedItem?.value)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\t\tdirtyFields?.state && onBlur()\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</FormInput>\r\n\t\t</Box>\r\n\t)\r\n\tconst provinceComp = (\r\n\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 7\" }}>\r\n\t\t\t<FormInput labelText=\"Province\" labelId=\"provinceLabel\">\r\n\t\t\t\t<Text\r\n\t\t\t\t\tid=\"province\"\r\n\t\t\t\t\tname=\"province\"\r\n\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\tmaxLength={50}\r\n\t\t\t\t/>\r\n\t\t\t</FormInput>\r\n\t\t</Box>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<FormSection title=\"\" showDivider={true}>\r\n\t\t\t<Grid\r\n\t\t\t\tgridColumn={{ base: \"1 / -1\", lg: \"1 / 9\" }}\r\n\t\t\t\tgridGap={{ base: \"16px\", md: \"24px\" }}\r\n\t\t\t\tgridTemplateColumns={{ base: \"1\", md: \"repeat(12,1fr)\" }}>\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 11\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"Location Title\" labelId=\"lklTitleLabel\" required>\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tid=\"lklTitle\"\r\n\t\t\t\t\t\t\tname=\"lklTitle\"\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\t\t\tvalidationState={errors?.lklTitle ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\terrorMessage={errors?.lklTitle?.message}\r\n\t\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\t\trequired: \"Please enter a Location Title\",\r\n\t\t\t\t\t\t\t\tmaxLength: { value: 50, message: \"Location Title cannot exceed 25 characters\" },\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tmaxLength={50}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 1\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"Active\" labelId=\"activeIndicatorLabel\">\r\n\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\tid=\"activeIndicator\"\r\n\t\t\t\t\t\t\tname=\"activeIndicator\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tvalue=\"Active\"\r\n\t\t\t\t\t\t\tref={register()}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"1 / 5\" }}>\r\n\t\t\t\t<FormInput labelText=\"Country\" labelId=\"countryLabel\" required>\r\n\t\t\t\t\t<Controller\r\n\t\t\t\t\t\tname=\"country\"\r\n\t\t\t\t\t\trules={{\r\n\t\t\t\t\t\t\trequired: \"Please select a Country\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonFocus={() => countryRef.current?.focus()}\r\n\t\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tref={countryRef}\r\n\t\t\t\t\t\t\t\tid=\"country\"\r\n\t\t\t\t\t\t\t\tname=\"country\"\r\n\t\t\t\t\t\t\t\taria-labelledby=\"countryLabel\"\r\n\t\t\t\t\t\t\t\toptions={countries}\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\t\tvalidationState={errors?.country ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\t\terrorMessage={errors?.country?.message}\r\n\t\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\t\tonChange(changes.selectedItem?.value)\r\n\t\t\t\t\t\t\t\t\tsetValue(\"post\", \"\")\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\t\t\tdirtyFields?.country && onBlur()\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 4\" }}>\r\n\t\t\t\t<FormInput labelText=\"Post\" labelId=\"postLabel\" required>\r\n\t\t\t\t\t<Controller\r\n\t\t\t\t\t\tname=\"post\"\r\n\t\t\t\t\t\trules={{\r\n\t\t\t\t\t\t\trequired: \"Please select a Post\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonFocus={() => postRef.current?.focus()}\r\n\t\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tref={postRef}\r\n\t\t\t\t\t\t\t\tid=\"post\"\r\n\t\t\t\t\t\t\t\tname=\"post\"\r\n\t\t\t\t\t\t\t\taria-labelledby=\"postLabel\"\r\n\t\t\t\t\t\t\t\toptions={posts.filter(post => post.country_cd === watchCountry)}\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\t\tvalidationState={errors?.post ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\t\terrorMessage={errors?.post?.message}\r\n\t\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\t\tonChange(changes.selectedItem?.value)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\t\t\tdirtyFields?.post && onBlur()\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 8\" }}>\r\n\t\t\t\t<FormInput labelText=\"Street Address\" labelId=\"streetAddressLabel\">\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tid=\"streetAddress\"\r\n\t\t\t\t\t\tname=\"streetAddress\"\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\tfilterOnTextChange(changes)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonBlur={() => trigger(\"city\")}\r\n\t\t\t\t\t\tmaxLength={200}\r\n\t\t\t\t\t\tref={register()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 8\" }}>\r\n\t\t\t\t<FormInput labelText=\"Apartment, Suite, Other\" labelId=\"additionalAddressLabel\">\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tid=\"additionalAddress\"\r\n\t\t\t\t\t\tname=\"additionalAddress\"\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\t\tmaxLength={200}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Grid\r\n\t\t\t\tgridColumn={{ base: \"1 / -1\", lg: \"1 / 9\" }}\r\n\t\t\t\tgridGap={{ base: \"16px\", md: \"24px\" }}\r\n\t\t\t\tgridTemplateColumns={{ base: \"repeat(4,1fr)\", md: \"repeat(22,1fr)\" }}>\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 11\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"City\" labelId=\"cityLabel\">\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tid=\"city\"\r\n\t\t\t\t\t\t\tname=\"city\"\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tvalidationState={errors?.city ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\terrorMessage={errors?.city?.message}\r\n\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\tfilterOnTextChange(changes)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tmaxLength={30}\r\n\t\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\t\trequired: watchStreetAddress && !watchCity ? \"City also required with Street Address\" : false,\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t\t{watchCountry === \"USA\" ? stateComp : provinceComp}\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / 2\", md: \"span 4\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"Postal Code\" labelId=\"postalCodeLabel\">\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tid=\"postalCode\"\r\n\t\t\t\t\t\t\tname=\"postalCode\"\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\t\t\tmaxLength={10}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / 3\", md: \"1 / 3\" }}>\r\n\t\t\t\t<FormInput labelText=\"Longitude\" labelId=\"longitudeLabel\">\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tid=\"longitude\"\r\n\t\t\t\t\t\tname=\"longitude\"\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\tvalidationState={errors?.longitude ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\terrorMessage={errors?.longitude?.message}\r\n\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\ttrigger(\"latitude\")\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\tvalidate: value => (validateLongLat(value, 180) ? true : \"Invalid input\"),\r\n\t\t\t\t\t\t\trequired: watchLatitude && !watchLongitude ? \"Longitude value also required\" : false,\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"3 / 5\", md: \"span 2\" }}>\r\n\t\t\t\t<FormInput labelText=\"Latitude\" labelId=\"latitudeLabel\">\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tid=\"latitude\"\r\n\t\t\t\t\t\tname=\"latitude\"\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\tvalidationState={errors?.latitude ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\terrorMessage={errors?.latitude?.message}\r\n\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\ttrigger(\"longitude\")\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\tvalidate: value => (validateLongLat(value, 90) ? true : \"Invalid input\"),\r\n\t\t\t\t\t\t\trequired: watchLongitude && !watchLatitude ? \"Latitude value also required\" : false,\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 4\" }}>\r\n\t\t\t\t<FormInput labelText=\"Location Type\" labelId=\"locationTypeLabel\">\r\n\t\t\t\t\t<Controller\r\n\t\t\t\t\t\tname=\"locationType\"\r\n\t\t\t\t\t\tonFocus={() => locationTypeRef.current?.focus()}\r\n\t\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tref={locationTypeRef}\r\n\t\t\t\t\t\t\t\tid=\"locationType\"\r\n\t\t\t\t\t\t\t\tname=\"locationType\"\r\n\t\t\t\t\t\t\t\taria-labelledby=\"locationTypeLabel\"\r\n\t\t\t\t\t\t\t\toptions={locationTypes}\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\t\tvalidationState={errors?.locationType ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\t\terrorMessage={errors?.locationType?.message}\r\n\t\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\t\tonChange(changes.selectedItem?.value)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\t\t\tdirtyFields?.locationType && onBlur()\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 8\" }}>\r\n\t\t\t\t<FormInput labelText=\"Description\" labelId=\"descriptionLabel\">\r\n\t\t\t\t\t<Controller\r\n\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\trules={{\r\n\t\t\t\t\t\t\tpattern: {\r\n\t\t\t\t\t\t\t\tvalue: /^[A-Za-z0-9`~!@#$%^&*()_+•\\-=[\\]:\";',./?\\s]*$/,\r\n\t\t\t\t\t\t\t\tmessage: \"Please enter only plain text in the Description field\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tmaxLength: { value: 500, message: \"Description cannot exceed 500 characters\" },\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonFocus={() => descriptionRef.current?.focus()}\r\n\t\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t\t<Textarea\r\n\t\t\t\t\t\t\t\tref={descriptionRef}\r\n\t\t\t\t\t\t\t\tid=\"description\"\r\n\t\t\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\t\t\taria-labelledby=\"descriptionLabel\"\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\tmaxLength={500}\r\n\t\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\t\tvalidationState={errors?.description ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\t\terrorMessage={errors?.description?.message}\r\n\t\t\t\t\t\t\t\tonChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n\t\t\t\t\t\t\t\t\te.target.value = replaceMSWordChars(e.target.value).replace(\r\n\t\t\t\t\t\t\t\t\t\t/[^A-Za-z0-9`~!@#$%^&*()_+•\\-=[\\]:\";',./?\\s]/g,\r\n\t\t\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\tonChange(e)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\t\t</FormSection>\r\n\t)\r\n}\r\n\r\nconst filterOnTextChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n\te.target.value = e.target.value.replace(/^[^A-Za-z0-9]+/, \"\")\r\n}\r\n\r\nconst validateLongLat = (value: string, range: number) => {\r\n\tif (!value) {\r\n\t\treturn true\r\n\t}\r\n\tconst regexMatch = RegExp(/^([-+]?)([\\d]{1,3})([.]?)([\\d]*)$/)\r\n\tconst inRange = parseFloat(value) >= -range && parseFloat(value) <= range\r\n\treturn regexMatch && inRange\r\n}\r\n\r\nexport default LocationDetails\r\n","import React from \"react\"\r\nimport Layout, { LayoutProps } from \"../../components/Layout\"\r\nimport { navigate } from \"gatsby\"\r\nimport { FormProvider, useForm } from \"react-hook-form\"\r\nimport { Button, LinkButton } from \"@c1ds/components\"\r\nimport { Box, Grid, useDisclosure } from \"@chakra-ui/core\"\r\nimport { Form, useCTFFormContext } from \"./Form\"\r\nimport LocationDetails from \"../FormSections/LocationDetails\"\r\nimport { DataLossModal } from \"../Modals/DataLossModal\"\r\nimport { EventPageState } from \"../../pages/event\"\r\n\r\ninterface LKLFormProps {\r\n\teventId: string\r\n\tsavedForm?: LklDto\r\n}\r\n\r\nconst LKLForm: React.FC<LKLFormProps> = (p: LKLFormProps) => {\r\n\tconst { eventId, savedForm } = p\r\n\t// const { isCreate, isEdit } = useCTFFormContext()\r\n\tconst { isOpen: isDataLossOpen, onOpen: onDataLossOpen, onClose: onDataLossClose } = useDisclosure()\r\n\r\n\tconst defaultValues = {\r\n\t\tactiveIndicator: true,\r\n\t}\r\n\r\n\tconst formMethods = useForm<LklDto>({\r\n\t\tmode: \"onBlur\",\r\n\t\tdefaultValues: defaultValues,\r\n\t})\r\n\r\n\tconst breadcrumbs: LayoutProps[\"breadcrumbs\"] = [\r\n\t\t{ label: \"Event\", onClick: onDataLossOpen },\r\n\t\t{ label: \"Add Location\" },\r\n\t\t{ label: \"New Location\" },\r\n\t]\r\n\r\n\treturn (\r\n\t\t<Layout\r\n\t\t\tpageTitle=\"Location Details\"\r\n\t\t\tpageHeading=\"New Location\"\r\n\t\t\tpageDescription=\"Provide as much information as you have for the new location.\"\r\n\t\t\tbreadcrumbs={breadcrumbs}>\r\n\t\t\t<FormProvider {...formMethods}>\r\n\t\t\t\t<Form id=\"LKLForm\">\r\n\t\t\t\t\t<LocationDetails />\r\n\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tas=\"nav\"\r\n\t\t\t\t\t\taria-label=\"page\"\r\n\t\t\t\t\t\tid=\"pageNav\"\r\n\t\t\t\t\t\tgridColumn=\"1 / -1\"\r\n\t\t\t\t\t\talignSelf=\"center\"\r\n\t\t\t\t\t\tgridGap={{ base: \"16px\", md: \"24px\" }}\r\n\t\t\t\t\t\tmarginTop={{ md: \"72\" }}\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tgridTemplateColumns={{ base: \"1\", md: \"repeat(14, 1fr)\", lg: \"repeat(12, 1fr)\" }}>\r\n\t\t\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"10 / 15\", lg: \"10 / 13\" }} gridRow={{ md: \"1\" }}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\tonClick={(e: React.MouseEvent) => {\r\n\t\t\t\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\t\t\t\twindow.scrollTo(0, 0)\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\tCreate New Location\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"5 / 10\", lg: \"7 / 10\" }} gridRow={{ md: \"1\" }}>\r\n\t\t\t\t\t\t\t<Button size=\"full\" buttonType=\"secondary\" type=\"button\" onClick={() => navigate(\"/\")}>\r\n\t\t\t\t\t\t\t\tCreate and Add Another\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"1 / 2\" }} gridRow={{ md: \"1\" }} justifySelf=\"center\">\r\n\t\t\t\t\t\t\t<LinkButton type=\"button\" onClick={onDataLossOpen}>\r\n\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t</LinkButton>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<DataLossModal\r\n\t\t\t\t\t\tisOpen={isDataLossOpen}\r\n\t\t\t\t\t\tonClose={onDataLossClose}\r\n\t\t\t\t\t\tonLeave={() => {\r\n\t\t\t\t\t\t\tconst pageState: EventPageState = {\r\n\t\t\t\t\t\t\t\t// TODO: Uncomment once form integration is established\r\n\t\t\t\t\t\t\t\t// eventId: getValues(\"eventId\"),\r\n\t\t\t\t\t\t\t\teventId: eventId,\r\n\t\t\t\t\t\t\t\tformSection: \"locations\",\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tnavigate(\"/event\", { state: pageState })\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form>\r\n\t\t\t</FormProvider>\r\n\t\t</Layout>\r\n\t)\r\n}\r\n\r\nexport default LKLForm\r\n","import React from \"react\"\r\nimport moment from \"moment\"\r\nimport { getSavedForm } from \"../components/Utility/formHelpers\"\r\nimport { CTFFormProvider, CTFFormProviderProps } from \"../components/Forms/Form\"\r\nimport LKLForm from \"../components/Forms/LKLForm\"\r\n\r\nexport interface LklPageState {\r\n\teventId: string\r\n\teventLklId?: string\r\n}\r\n\r\ntype LklPageProps = {\r\n\tlocation: {\r\n\t\tstate: LklPageState\r\n\t}\r\n}\r\n\r\nconst addLKLPage: React.FC<LklPageProps> = (p: LklPageProps) => {\r\n\tlet savedLkl: LklDto | undefined\r\n\tif (p.location?.state?.eventLklId) {\r\n\t\tconst savedEvents = getSavedForm<Array<EventFormData>>(\"ctfForms\", \"events\")\r\n\t\tconst savedEvent = savedEvents && savedEvents.find((event: EventFormData) => event.eventId === p.location?.state?.eventId)\r\n\t\tsavedLkl = savedEvent?.eventLklDtoList?.find((lklDto: LklDto) => lklDto.eventLklId === p.location?.state?.eventLklId)\r\n\t\tif (savedLkl) {\r\n\t\t\tif (savedLkl.createdDateTime) savedLkl.createdDateTime = moment(savedLkl.createdDateTime).toDate()\r\n\t\t\tif (savedLkl.lastUpdatedDateTime) savedLkl.lastUpdatedDateTime = moment(savedLkl.lastUpdatedDateTime).toDate()\r\n\t\t}\r\n\t}\r\n\r\n\tconst formMode: CTFFormProviderProps[\"formMode\"] = typeof savedLkl === \"undefined\" ? \"create\" : \"edit\"\r\n\r\n\treturn (\r\n\t\t<CTFFormProvider formMode={formMode}>\r\n\t\t\t<LKLForm eventId={p.location?.state?.eventId} savedForm={savedLkl} />\r\n\t\t</CTFFormProvider>\r\n\t)\r\n}\r\n\r\nexport default addLKLPage\r\n"],"sourceRoot":""}