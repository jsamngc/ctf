{"version":3,"sources":["webpack:///./src/components/FormSections/LocationDetails.tsx","webpack:///./node_modules/@material-ui/icons/esm/Close.js","webpack:///./node_modules/@material-ui/icons/esm/Person.js","webpack:///./node_modules/@chakra-ui/core/dist/es/FormLabel/index.js","webpack:///./src/components/FormIconInput.tsx","webpack:///./node_modules/@material-ui/icons/esm/Email.js","webpack:///./node_modules/@material-ui/icons/esm/AddCircle.js","webpack:///./node_modules/@material-ui/icons/esm/HighlightOff.js","webpack:///./src/components/POCEmail.tsx","webpack:///./node_modules/@material-ui/icons/esm/Phone.js","webpack:///./src/components/POCPhone.tsx","webpack:///./src/components/POCBox.tsx","webpack:///./src/components/FormSections/POCDetails.tsx","webpack:///./src/components/Forms/LKLForm.tsx","webpack:///./src/pages/addLKL.tsx","webpack:///./node_modules/@chakra-ui/core/dist/es/FormControl/index.js"],"names":["filterOnTextChange","e","target","value","replace","validateLongLat","range","regexMatch","RegExp","inRange","parseFloat","LocationDetails","useFormContext","trigger","register","errors","setValue","dirtyFields","formState","countryRef","useRef","postRef","stateRef","locationTypeRef","descriptionRef","watchCountry","useWatch","name","watchLongitude","watchLatitude","watchStreetAddress","watchCity","countries","useMemo","countriesList","countries_json","filter","_","index","push","label","sort","countryA","countryB","localeCompare","stateComp","undefined","locationTypes_json","locTypeA","locTypeB","Box","gridColumn","base","md","labelText","labelId","required","rules","onFocus","current","focus","render","onChange","onBlur","ref","id","aria-labelledby","options","states_json","size","disabled","validationState","state","ValidationState","ERROR","errorMessage","message","changes","selectedItem","provinceComp","maxLength","Form","title","showDivider","Grid","lg","gridGap","gridTemplateColumns","lklTitle","country","posts_json","post","country_cd","city","longitude","validate","latitude","locationType","pattern","description","replaceMSWordChars","createSvgIcon","createElement","d","props","colorMode","as","ml","color","light","dark","children","FormLabel","_ref","formControl","fontSize","pr","pb","opacity","isDisabled","fontWeight","textAlign","verticalAlign","display","isRequired","displayName","FormIconInput","p","icon","input","FormControl","fontFamily","lineHeight","Text","position","mr","m","React","trim","EMAIL_REGEX","POCEmail","addable","personDtoIndex","isFirst","onEmailAddressChange","triggerAllFields","onAdd","onRemove","split","prefix","setNumber","setNameOrder","nameOfInput","nameEmailAddress","nameEmailType","watchEmailAddress","watchEmailType","errorEmailDtoList","lookupLklDto","lklPocListDto","personDto","personEmailDtoList","errorsEmailDto","emailDto","dirtyEmailDtoList","dirtyEmailDto","errorFree","emailAddress","emailType","sectionDirty","validateAddable","errorMsgExist","sm","Email","emailTypes_json","alignSelf","justifySelf","mt","AddCircle","cursor","onClick","HighlightOff","PHONE_REGEX","POCPhone","onPhoneNumberChange","namePhoneNumber","namePhoneType","watchPhoneNumber","watchPhoneType","personPhoneDtoList","errorsPhoneDto","phoneDto","dirtyPhoneDtoList","dirtyPhoneDto","phoneNum","phoneTypeCd","Phone","phoneTypes_json","phoneListAllowed","emailListAllowed","POCBox","errorFirstName","errorLastName","setError","clearErrors","watch","givenName","surName","useState","nameFieldList","contactFieldList","setContactFieldList","phoneList","setPhoneList","emailList","setEmailList","isNameFieldsEmpty","Object","values","every","isAllPhoneEmailEmpty","specificList","filterOnNameBlur","length","forEach","type","Close","right","border","borderStyle","borderColor","padding","hidden","defaultValue","Person","map","charAt","key","prevEmailList","unused","email","includes","prevList","onAddEmail","emailName","prevPhoneList","phone","onAddPhone","phoneName","POCDetails","pocIndex","setPocIndex","pocBoxes","setPocBoxes","boxName","currPocBoxes","LKLForm","eventId","savedForm","useDisclosure","isDataLossOpen","isOpen","onDataLossOpen","onOpen","onDataLossClose","onClose","formMethods","useForm","mode","defaultValues","activeIndicator","handleSubmit","breadcrumbs","getValues","onSubmit","useCallback","data","skipNavigate","Layout","pageTitle","pageHeading","pageDescription","aria-label","marginTop","gridRow","buttonType","navigate","DataLossModal","onLeave","pageState","formSection","addLKLPage","savedLkl","location","eventLklId","savedEvents","getSavedForm","savedEvent","find","event","eventLklDtoList","lklDto","createdDateTime","moment","toDate","lastUpdatedDateTime","formMode","useFormControl","context","useFormControlContext","keys","reduce","acc","prop","FormControlContext","isInvalid","isReadOnly","rest","Provider","role"],"mappings":"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","file":"component---src-pages-add-lkl-tsx-855f8ddb7499e3ba1401.js","sourcesContent":["import React, { useRef, useMemo } from \"react\"\r\nimport { FormSection, replaceMSWordChars } from \"../Forms/Form\"\r\nimport { Box, Grid } from \"@chakra-ui/core\"\r\nimport { Controller, useFormContext, useWatch } from \"react-hook-form\"\r\nimport { Switch, Select, FormInput, Text, ValidationState, Textarea } from \"@c1ds/components\"\r\nimport countries_json from \"../../../content/countries.json\"\r\nimport posts_json from \"../../../content/posts.json\"\r\nimport states_json from \"../../../content/states.json\"\r\nimport locationTypes_json from \"../../../content/locationTypes.json\"\r\n\r\nconst LocationDetails: React.FC = () => {\r\n\tconst { trigger, register, errors, setValue, formState } = useFormContext<LklDto>()\r\n\tconst { dirtyFields } = formState\r\n\r\n\tconst countryRef = useRef<HTMLButtonElement>(null)\r\n\tconst postRef = useRef<HTMLButtonElement>(null)\r\n\tconst stateRef = useRef<HTMLButtonElement>(null)\r\n\tconst locationTypeRef = useRef<HTMLButtonElement>(null)\r\n\tconst descriptionRef = useRef<HTMLTextAreaElement>(null)\r\n\r\n\tconst watchCountry: string | undefined = useWatch({ name: \"country\" })\r\n\tconst watchLongitude: string | undefined = useWatch({ name: \"longitude\" })\r\n\tconst watchLatitude: string | undefined = useWatch({ name: \"latitude\" })\r\n\tconst watchStreetAddress: string | undefined = useWatch({ name: \"streetAddress\" })\r\n\tconst watchCity: string | undefined = useWatch({ name: \"city\" })\r\n\r\n\t// Temporarily decrease size of country list while performance is investigated\r\n\tconst countries = useMemo(() => {\r\n\t\tconst countriesList = countries_json.filter((_, index) => index % 5 === 0)\r\n\t\tcountriesList.push({\r\n\t\t\tlabel: \"UNITED STATES OF AMERICA\",\r\n\t\t\tvalue: \"USA\",\r\n\t\t})\r\n\t\tcountriesList.sort((countryA, countryB) => countryA.label.localeCompare(countryB.label))\r\n\t\treturn countriesList\r\n\t}, [])\r\n\r\n\tconst locationTypes = [\r\n\t\t{\r\n\t\t\tlabel: \" \",\r\n\t\t\tvalue: undefined,\r\n\t\t},\r\n\t\t...locationTypes_json.sort((locTypeA, locTypeB) => locTypeA.label.localeCompare(locTypeB.label)),\r\n\t]\r\n\r\n\tconst isDisabled = false\r\n\r\n\tconst stateComp = (\r\n\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 7\" }}>\r\n\t\t\t<FormInput labelText=\"State\" labelId=\"stateLabel\" required>\r\n\t\t\t\t<Controller\r\n\t\t\t\t\tname=\"state\"\r\n\t\t\t\t\trules={{\r\n\t\t\t\t\t\trequired: \"Please select a State\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonFocus={() => stateRef.current?.focus()}\r\n\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tref={stateRef}\r\n\t\t\t\t\t\t\tid=\"state\"\r\n\t\t\t\t\t\t\tname=\"state\"\r\n\t\t\t\t\t\t\taria-labelledby=\"stateLabel\"\r\n\t\t\t\t\t\t\toptions={states_json}\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tvalidationState={errors?.state ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\terrorMessage={errors?.state?.message}\r\n\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\tonChange(changes.selectedItem?.value)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\t\tdirtyFields?.state && onBlur()\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</FormInput>\r\n\t\t</Box>\r\n\t)\r\n\tconst provinceComp = (\r\n\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 7\" }}>\r\n\t\t\t<FormInput labelText=\"Province\" labelId=\"provinceLabel\">\r\n\t\t\t\t<Text\r\n\t\t\t\t\tid=\"province\"\r\n\t\t\t\t\tname=\"province\"\r\n\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\tmaxLength={50}\r\n\t\t\t\t/>\r\n\t\t\t</FormInput>\r\n\t\t</Box>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<FormSection title=\"\" showDivider={true}>\r\n\t\t\t<Grid\r\n\t\t\t\tgridColumn={{ base: \"1 / -1\", lg: \"1 / 9\" }}\r\n\t\t\t\tgridGap={{ base: \"16px\", md: \"24px\" }}\r\n\t\t\t\tgridTemplateColumns={{ base: \"1\", md: \"repeat(12,1fr)\" }}>\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 11\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"Location Title\" labelId=\"lklTitleLabel\" required>\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tid=\"lklTitle\"\r\n\t\t\t\t\t\t\tname=\"lklTitle\"\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\t\t\tvalidationState={errors?.lklTitle ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\terrorMessage={errors?.lklTitle?.message}\r\n\t\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\t\trequired: \"Please enter a Location Title\",\r\n\t\t\t\t\t\t\t\tmaxLength: { value: 50, message: \"Location Title cannot exceed 25 characters\" },\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tmaxLength={50}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 1\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"Active\" labelId=\"activeIndicatorLabel\">\r\n\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\tid=\"activeIndicator\"\r\n\t\t\t\t\t\t\tname=\"activeIndicator\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tvalue=\"Active\"\r\n\t\t\t\t\t\t\tref={register()}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"1 / 5\" }}>\r\n\t\t\t\t<FormInput labelText=\"Country\" labelId=\"countryLabel\" required>\r\n\t\t\t\t\t<Controller\r\n\t\t\t\t\t\tname=\"country\"\r\n\t\t\t\t\t\trules={{\r\n\t\t\t\t\t\t\trequired: \"Please select a Country\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonFocus={() => countryRef.current?.focus()}\r\n\t\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tref={countryRef}\r\n\t\t\t\t\t\t\t\tid=\"country\"\r\n\t\t\t\t\t\t\t\tname=\"country\"\r\n\t\t\t\t\t\t\t\taria-labelledby=\"countryLabel\"\r\n\t\t\t\t\t\t\t\toptions={countries}\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\t\tvalidationState={errors?.country ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\t\terrorMessage={errors?.country?.message}\r\n\t\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\t\tonChange(changes.selectedItem?.value)\r\n\t\t\t\t\t\t\t\t\tsetValue(\"post\", \"\")\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\t\t\tdirtyFields?.country && onBlur()\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 4\" }}>\r\n\t\t\t\t<FormInput labelText=\"Post\" labelId=\"postLabel\" required>\r\n\t\t\t\t\t<Controller\r\n\t\t\t\t\t\tname=\"post\"\r\n\t\t\t\t\t\trules={{\r\n\t\t\t\t\t\t\trequired: \"Please select a Post\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonFocus={() => postRef.current?.focus()}\r\n\t\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tref={postRef}\r\n\t\t\t\t\t\t\t\tid=\"post\"\r\n\t\t\t\t\t\t\t\tname=\"post\"\r\n\t\t\t\t\t\t\t\taria-labelledby=\"postLabel\"\r\n\t\t\t\t\t\t\t\toptions={posts_json.filter(post => post.country_cd === watchCountry)}\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\t\tvalidationState={errors?.post ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\t\terrorMessage={errors?.post?.message}\r\n\t\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\t\tonChange(changes.selectedItem?.value)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\t\t\tdirtyFields?.post && onBlur()\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 8\" }}>\r\n\t\t\t\t<FormInput labelText=\"Street Address\" labelId=\"streetAddressLabel\">\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tid=\"streetAddress\"\r\n\t\t\t\t\t\tname=\"streetAddress\"\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\tfilterOnTextChange(changes)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonBlur={() => trigger(\"city\")}\r\n\t\t\t\t\t\tmaxLength={200}\r\n\t\t\t\t\t\tref={register()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 8\" }}>\r\n\t\t\t\t<FormInput labelText=\"Apartment, Suite, Other\" labelId=\"additionalAddressLabel\">\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tid=\"additionalAddress\"\r\n\t\t\t\t\t\tname=\"additionalAddress\"\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\t\tmaxLength={200}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Grid\r\n\t\t\t\tgridColumn={{ base: \"1 / -1\", lg: \"1 / 9\" }}\r\n\t\t\t\tgridGap={{ base: \"16px\", md: \"24px\" }}\r\n\t\t\t\tgridTemplateColumns={{ base: \"repeat(4,1fr)\", md: \"repeat(22,1fr)\" }}>\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 11\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"City\" labelId=\"cityLabel\">\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tid=\"city\"\r\n\t\t\t\t\t\t\tname=\"city\"\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tvalidationState={errors?.city ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\terrorMessage={errors?.city?.message}\r\n\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\tfilterOnTextChange(changes)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tmaxLength={30}\r\n\t\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\t\trequired: watchStreetAddress && !watchCity ? \"City also required with Street Address\" : false,\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t\t{watchCountry === \"USA\" ? stateComp : provinceComp}\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / 2\", md: \"span 4\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"Postal Code\" labelId=\"postalCodeLabel\">\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tid=\"postalCode\"\r\n\t\t\t\t\t\t\tname=\"postalCode\"\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\t\t\tmaxLength={10}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t</Grid>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / 3\", md: \"1 / 3\" }}>\r\n\t\t\t\t<FormInput labelText=\"Longitude\" labelId=\"longitudeLabel\">\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tid=\"longitude\"\r\n\t\t\t\t\t\tname=\"longitude\"\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\tvalidationState={errors?.longitude ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\terrorMessage={errors?.longitude?.message}\r\n\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\ttrigger(\"latitude\")\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\tvalidate: value => (validateLongLat(value, 180) ? true : \"Invalid input\"),\r\n\t\t\t\t\t\t\trequired: watchLatitude && !watchLongitude ? \"Longitude value also required\" : false,\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"3 / 5\", md: \"span 2\" }}>\r\n\t\t\t\t<FormInput labelText=\"Latitude\" labelId=\"latitudeLabel\">\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tid=\"latitude\"\r\n\t\t\t\t\t\tname=\"latitude\"\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\tvalidationState={errors?.latitude ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\terrorMessage={errors?.latitude?.message}\r\n\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\ttrigger(\"longitude\")\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\tvalidate: value => (validateLongLat(value, 90) ? true : \"Invalid input\"),\r\n\t\t\t\t\t\t\trequired: watchLongitude && !watchLatitude ? \"Latitude value also required\" : false,\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 4\" }}>\r\n\t\t\t\t<FormInput labelText=\"Location Type\" labelId=\"locationTypeLabel\">\r\n\t\t\t\t\t<Controller\r\n\t\t\t\t\t\tname=\"locationType\"\r\n\t\t\t\t\t\tonFocus={() => locationTypeRef.current?.focus()}\r\n\t\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tref={locationTypeRef}\r\n\t\t\t\t\t\t\t\tid=\"locationType\"\r\n\t\t\t\t\t\t\t\tname=\"locationType\"\r\n\t\t\t\t\t\t\t\taria-labelledby=\"locationTypeLabel\"\r\n\t\t\t\t\t\t\t\toptions={locationTypes_json}\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\t\tvalidationState={errors?.locationType ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\t\terrorMessage={errors?.locationType?.message}\r\n\t\t\t\t\t\t\t\tonChange={changes => {\r\n\t\t\t\t\t\t\t\t\tonChange(changes.selectedItem?.value)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\t\t\tdirtyFields?.locationType && onBlur()\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"span 8\" }}>\r\n\t\t\t\t<FormInput labelText=\"Description\" labelId=\"descriptionLabel\">\r\n\t\t\t\t\t<Controller\r\n\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\trules={{\r\n\t\t\t\t\t\t\tpattern: {\r\n\t\t\t\t\t\t\t\tvalue: /^[A-Za-z0-9`~!@#$%^&*()_+•\\-=[\\]:\";',./?\\s]*$/,\r\n\t\t\t\t\t\t\t\tmessage: \"Please enter only plain text in the Description field\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tmaxLength: { value: 500, message: \"Description cannot exceed 500 characters\" },\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonFocus={() => descriptionRef.current?.focus()}\r\n\t\t\t\t\t\trender={({ onChange, onBlur, value }) => (\r\n\t\t\t\t\t\t\t<Textarea\r\n\t\t\t\t\t\t\t\tref={descriptionRef}\r\n\t\t\t\t\t\t\t\tid=\"description\"\r\n\t\t\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\t\t\taria-labelledby=\"descriptionLabel\"\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\tmaxLength={500}\r\n\t\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\t\tvalidationState={errors?.description ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\t\terrorMessage={errors?.description?.message}\r\n\t\t\t\t\t\t\t\tonChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n\t\t\t\t\t\t\t\t\te.target.value = replaceMSWordChars(e.target.value).replace(\r\n\t\t\t\t\t\t\t\t\t\t/[^A-Za-z0-9`~!@#$%^&*()_+•\\-=[\\]:\";',./?\\s]/g,\r\n\t\t\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\tonChange(e)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormInput>\r\n\t\t\t</Box>\r\n\t\t</FormSection>\r\n\t)\r\n}\r\n\r\nconst filterOnTextChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n\te.target.value = e.target.value.replace(/^[^A-Za-z0-9]+/, \"\")\r\n}\r\n\r\nconst validateLongLat = (value: string, range: number) => {\r\n\tif (!value) {\r\n\t\treturn true\r\n\t}\r\n\tconst regexMatch = RegExp(/^([-+]?)([\\d]{1,3})([.]?)([\\d]*)$/)\r\n\tconst inRange = parseFloat(value) >= -range && parseFloat(value) <= range\r\n\treturn regexMatch && inRange\r\n}\r\n\r\nexport default LocationDetails\r\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { forwardRef } from \"react\";\nimport Box from \"../Box\";\nimport { useFormControl } from \"../FormControl\";\nimport { useColorMode } from \"../ColorModeProvider\";\nexport var RequiredIndicator = function RequiredIndicator(props) {\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var color = {\n    light: \"red.500\",\n    dark: \"red.300\"\n  };\n  return jsx(Box, _extends({\n    as: \"span\",\n    ml: 1,\n    color: color[colorMode],\n    \"aria-hidden\": \"true\",\n    children: \"*\"\n  }, props));\n};\nexport var FormLabel = forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\"]);\n\n  var formControl = useFormControl(props);\n  return jsx(Box, _extends({\n    ref: ref,\n    fontSize: \"md\",\n    pr: \"12px\",\n    pb: \"4px\",\n    opacity: formControl.isDisabled ? \"0.4\" : \"1\",\n    fontWeight: \"medium\",\n    textAlign: \"left\",\n    verticalAlign: \"middle\",\n    display: \"inline-block\",\n    as: \"label\"\n  }, props), children, formControl.isRequired && jsx(RequiredIndicator, null));\n});\nFormLabel.displayName = \"FormLabel\";\nexport default FormLabel;","import { FormControl, FormLabel, Text, Box } from \"@chakra-ui/core\"\r\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\r\nimport * as React from \"react\"\r\n\r\ntype FormIconInputProps = {\r\n\tlabelText: string\r\n\tlabelId: string\r\n\trequired?: boolean\r\n\tdisabled?: boolean\r\n    children: React.ReactElement<React.InputHTMLAttributes<HTMLElement>>\r\n    icon?: typeof SvgIcon\r\n}\r\n\r\nexport const FormIconInput: React.FC<FormIconInputProps> = (p: FormIconInputProps) => {\r\n\tconst { labelText, labelId, children, required, icon, ...input } = p\r\n\r\n\treturn (\r\n\t\t<FormControl>\r\n\t\t\t<FormLabel\r\n\t\t\t\tid={labelId}\r\n\t\t\t\tfontFamily=\"body\"\r\n\t\t\t\tfontSize=\"label\"\r\n\t\t\t\tfontWeight=\"normal\"\r\n\t\t\t\tpb={0}\r\n\t\t\t\tcolor=\"label\"\r\n\t\t\t\tdisplay=\"block\"\r\n\t\t\t\tlineHeight=\"label\">\r\n\t\t\t\t{required && (\r\n\t\t\t\t\t<Text color=\"required\" as=\"span\">\r\n\t\t\t\t\t\t*&nbsp;\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t)}\r\n                {icon && <Box position=\"absolute\" as={icon} mr={4} color=\"label\" />}\r\n\t\t\t\t<Text m={0} ml={28}>{labelText}</Text>\r\n\t\t\t</FormLabel>\r\n\t\t\t{React.cloneElement(children, {\r\n\t\t\t\trequired,\r\n\t\t\t\t\"aria-labelledby\": `${labelId} ${children.props[\"aria-labelledby\"] ?? \"\"}`.trim(),\r\n\t\t\t\t...input,\r\n\t\t\t})}\r\n\t\t</FormControl>\r\n\t)\r\n}\r\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"\n}), 'Email');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddCircle');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'HighlightOff');","import React from \"react\"\r\nimport { Box, Grid } from \"@chakra-ui/core\"\r\nimport { Controller, useFormContext, useWatch } from \"react-hook-form\"\r\nimport { Select, FormInput, Text, ValidationState } from \"@c1ds/components\"\r\n\r\nimport { FormIconInput } from './FormIconInput'\r\nimport { Email, AddCircle, HighlightOff } from \"@material-ui/icons\"\r\n\r\nimport emailTypes_json from \"../../content/emailTypes.json\"\r\n\r\nconst EMAIL_REGEX = /^((?:[A-Za-z0-9!#&'+\\-/?_`{|}~]+|\"(?:\\\\\"|\\\\\\\\|[A-Za-z0-9.!#&'+\\-/?_`{|}~ ,:;<>@[].])+\")(?:\\.(?:[A-Za-z0-9!#&'+\\-/?_`{|}~]+|\"(?:\\\\\"|\\\\\\\\|[A-Za-z0-9.!#&'+\\-/?_`{|}~ ,:;<>@[].])+\"))*)@((?:[A-Za-z0-9]+(?:(?:[A-Za-z0-9-]*[A-Za-z0-9])?)\\.)+[A-Za-z]{1,})$/\r\n\r\ntype POCEmailProps = {\r\n    id: string\r\n    isFirst : boolean\r\n    addable: boolean\r\n    personDtoIndex : number\r\n    onEmailAddressChange : (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\r\n    triggerAllFields : () => void\r\n    onAdd : () => void\r\n    onRemove : () => void\r\n}\r\n\r\n// One set of Email address and type\r\nconst POCEmail: React.FC<POCEmailProps> = ( p : POCEmailProps) => {\r\n    const { id, addable, personDtoIndex, isFirst,\r\n            onEmailAddressChange, triggerAllFields, onAdd, onRemove } = p\r\n    const { errors, formState, register } = useFormContext<LklDto>()\r\n    const { dirtyFields } = formState\r\n\r\n    const [ prefix, setNumber ] = id.split('-')\r\n    // Parse input name to LKLDTO structure\r\n    const setNameOrder = (nameOfInput : string) => {\r\n        return `${prefix}[personEmailDtoList][${setNumber}]${nameOfInput}`\r\n    }\r\n    const nameEmailAddress = setNameOrder('[emailDto][emailAddress]')\r\n    const nameEmailType = setNameOrder(`[emailDto][emailType]`)\r\n    \r\n    const watchEmailAddress: string | undefined = useWatch({ name: nameEmailAddress })\r\n    const watchEmailType: string | undefined = useWatch({ name: nameEmailType })\r\n    \r\n    // Get Errors specific to this email set\r\n    const errorEmailDtoList = errors && errors.lookupLklDto && errors.lookupLklDto.lklPocListDto ? \r\n        errors.lookupLklDto?.lklPocListDto[personDtoIndex]?.personDto?.personEmailDtoList : null\r\n    const errorsEmailDto = errorEmailDtoList ? errorEmailDtoList[+setNumber]?.emailDto : null\r\n\r\n    // Get Dirty fields in the email set\r\n    const dirtyEmailDtoList = dirtyFields && dirtyFields.lookupLklDto && dirtyFields.lookupLklDto.lklPocListDto ? \r\n        dirtyFields.lookupLklDto?.lklPocListDto[personDtoIndex]?.personDto?.personEmailDtoList : null\r\n    const dirtyEmailDto = dirtyEmailDtoList ? dirtyEmailDtoList[+setNumber]?.emailDto : null\r\n\r\n    const errorFree = errorsEmailDto?.emailAddress === undefined && errorsEmailDto?.emailType === undefined\r\n    const sectionDirty = dirtyEmailDto?.emailAddress && dirtyEmailDto?.emailType\r\n    const validateAddable = (errorFree && sectionDirty && addable)\r\n\r\n    const errorMsgExist = errorsEmailDto?.emailType?.message !== '' && errorsEmailDto?.emailType?.message !== undefined\r\n    return (\r\n        <>\r\n            <Box gridColumn={{ base: \"1 / -1\", sm: \"1 / 9\", md: \"1 / 7\" }}>\r\n                <FormIconInput labelText=\"Email Address\" labelId=\"emailAddressLabel\" icon={Email}>\r\n                    <Text\r\n                        ref={register({\r\n                            required: watchEmailType && !watchEmailAddress ? \"Email Address is required\" : false,\r\n                            pattern: {\r\n                                value: EMAIL_REGEX,\r\n                                message: \"Please enter valid email in the field\",\r\n                            }\r\n                        })}\r\n                        id={nameEmailAddress}\r\n                        name={nameEmailAddress}\r\n                        size=\"full\"\r\n                        disabled={false}\r\n                        validationState={errorsEmailDto?.emailAddress ? ValidationState.ERROR : undefined}\r\n                        errorMessage={errorsEmailDto?.emailAddress?.message}\r\n                        onChange={onEmailAddressChange}\r\n                        maxLength={67}\r\n                        onBlur={() => {\r\n                            triggerAllFields()\r\n                        }}\r\n                    />\r\n                </FormIconInput>\r\n            </Box>\r\n\r\n            <Box gridColumn={{ base: \"1 / 13\", sm: \"9 / 13 \", md: \"7 / 13\" }}>\r\n                <Grid\r\n                    gridColumn={{ base: \"1 / -1\"}}\r\n                    gridGap={{ base: \"8px\", md: \"16px\" }}\r\n                    gridTemplateColumns={{ base: \"repeat(12,1fr)\" }}>\r\n                    <Box gridColumn={{ base: \"1 / 12\" }}>\r\n                        <FormInput labelText=\"Type\" labelId=\"emailTypeLabel\">\r\n                            <Controller\r\n                                name={nameEmailType}\r\n                                rules={{\r\n                                    required: watchEmailAddress && !watchEmailType ? \"Email Type is required\" : false\r\n                                }}\r\n                                render={({ onChange, onBlur, value }) => (\r\n                                    <Select\r\n                                        id={nameEmailType}\r\n                                        name={nameEmailType}\r\n                                        aria-labelledby=\"emailTypeLabel\"\r\n                                        options={emailTypes_json}\r\n                                        size=\"full\"\r\n                                        disabled={false}\r\n                                        validationState={errorsEmailDto?.emailType ? ValidationState.ERROR : undefined}\r\n                                        errorMessage={ errorsEmailDto?.emailType?.message}\r\n                                        onChange={changes => {\r\n                                            onChange(changes.selectedItem?.value)\r\n                                        }}\r\n                                        onBlur={() => {\r\n                                            triggerAllFields()\r\n                                        }}\r\n                                        value={value}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </FormInput>\r\n                    </Box>\r\n                    <Box gridColumn={{ base: \"12 / 13\"}} alignSelf=\"center\" justifySelf=\"center\">\r\n                        {isFirst ?\r\n                            <Box mt={errorFree ? 32 : errorMsgExist ? 0 : 32} as={AddCircle} \r\n                                cursor={ validateAddable ? \"pointer\" : \"cursor\"} \r\n                                color={ validateAddable ? \"clickable\" : \"disabledInputText\" }\r\n                                onClick={() => {\r\n                                    if(validateAddable) onAdd()\r\n                                }}\r\n                                />\r\n                        :\r\n                            <Box mt={errorFree ? 32 : errorMsgExist ? 0 : 32} as={HighlightOff} cursor=\"pointer\" color=\"clickable\" \r\n                                onClick={onRemove}/>\r\n                        }\r\n                    </Box>\r\n                </Grid>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default POCEmail\r\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z\"\n}), 'Phone');","import React from \"react\"\r\nimport { Box, Grid } from \"@chakra-ui/core\"\r\nimport { Controller, useFormContext, useWatch } from \"react-hook-form\"\r\nimport { Select, FormInput, Text, ValidationState } from \"@c1ds/components\"\r\n\r\nimport { FormIconInput } from './FormIconInput'\r\nimport { Phone, AddCircle, HighlightOff } from \"@material-ui/icons\"\r\n\r\nimport phoneTypes_json from \"../../content/phoneTypes.json\"\r\n\r\nconst PHONE_REGEX = /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s./0-9]*$/\r\n\r\ntype POCPhoneProps = {\r\n    id: string\r\n    isFirst : boolean\r\n    addable: boolean\r\n    personDtoIndex : number\r\n    onPhoneNumberChange : (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\r\n    triggerAllFields : () => void\r\n    onAdd : () => void\r\n    onRemove : () => void\r\n}\r\n\r\n// One set of Phone number and type\r\nconst POCPhone: React.FC<POCPhoneProps> = ( p : POCPhoneProps) => {\r\n    const { id, personDtoIndex,  isFirst, addable,\r\n            onPhoneNumberChange, triggerAllFields, onAdd, onRemove } = p\r\n    const { errors, formState, register } = useFormContext<LklDto>()\r\n    const { dirtyFields } = formState\r\n\r\n    const [ prefix, setNumber ] = id.split('-')\r\n    // Parse input name to LKLDTO structure\r\n    const setNameOrder = (nameOfInput : string) => {\r\n        return `${prefix}[personPhoneDtoList][${setNumber}]${nameOfInput}`\r\n    }\r\n    const namePhoneNumber = setNameOrder('[phoneDto][phoneNum]')\r\n    const namePhoneType = setNameOrder(`[phoneDto][phoneTypeCd]`)\r\n\r\n    const watchPhoneNumber: string | undefined = useWatch({ name: namePhoneNumber })\r\n    const watchPhoneType: string | undefined = useWatch({ name: namePhoneType })\r\n\r\n    // Get Errors specific to this phone set\r\n    const personPhoneDtoList = errors && errors.lookupLklDto && errors.lookupLklDto.lklPocListDto ? \r\n        errors.lookupLklDto?.lklPocListDto[personDtoIndex]?.personDto?.personPhoneDtoList : null\r\n    const errorsPhoneDto = personPhoneDtoList ? personPhoneDtoList[+setNumber]?.phoneDto : null\r\n\r\n    // Get Dirty fields in the phone set\r\n    const dirtyPhoneDtoList = dirtyFields && dirtyFields.lookupLklDto && dirtyFields.lookupLklDto.lklPocListDto ? \r\n        dirtyFields.lookupLklDto?.lklPocListDto[personDtoIndex]?.personDto?.personPhoneDtoList : null\r\n    const dirtyPhoneDto = dirtyPhoneDtoList ? dirtyPhoneDtoList[+setNumber]?.phoneDto : null\r\n\r\n    const errorFree = errorsPhoneDto?.phoneNum === undefined && errorsPhoneDto?.phoneTypeCd === undefined\r\n    const sectionDirty = dirtyPhoneDto?.phoneNum && dirtyPhoneDto?.phoneTypeCd\r\n    const validateAddable = (errorFree && sectionDirty && addable)\r\n\r\n    const errorMsgExist = errors[namePhoneType]?.message  !== undefined && errors[namePhoneType]?.message !== ''\r\n    return (\r\n        <>\r\n            <Box gridColumn={{ base: \"1 / -1\", sm: \"1 / 9\", md: \"1 / 7\" }}>\r\n                <FormIconInput labelText=\"Phone Number\" labelId=\"phoneNumberLabel\" icon={Phone}>\r\n                    <Text\r\n                        ref={register({\r\n                            required: watchPhoneType && !watchPhoneNumber ? \"Phone Number is required\" : false,\r\n                            pattern: {\r\n                                value: PHONE_REGEX,\r\n                                message: \"Please enter valid phone number in the field\",\r\n                            }\r\n                        })}\r\n                        id={namePhoneNumber}\r\n                        name={namePhoneNumber}\r\n                        size=\"full\"\r\n                        disabled={false}\r\n                        validationState={errorsPhoneDto?.phoneNum ? ValidationState.ERROR : undefined}\r\n                        errorMessage={errorsPhoneDto?.phoneNum?.message}\r\n                        onChange={onPhoneNumberChange}\r\n                        maxLength={30}\r\n                        onBlur={() => {\r\n                            triggerAllFields()\r\n                        }}\r\n                    />\r\n                </FormIconInput>\r\n            </Box>\r\n\r\n            <Box gridColumn={{ base: \"1 / 13\", sm: \"9 / 13 \", md: \"7 / 13\" }}>\r\n                <Grid\r\n                    gridColumn={{ base: \"1 / -1\"}}\r\n                    gridGap={{ base: \"8px\", md: \"16px\" }}\r\n                    gridTemplateColumns={{ base: \"repeat(12,1fr)\" }}>\r\n                    <Box gridColumn={{ base: \"1 / 12\" }}>\r\n                        <FormInput labelText=\"Type\" labelId=\"phoneTypeLabel\">\r\n                            <Controller\r\n                                name={namePhoneType}\r\n                                rules={\r\n                                    {required: watchPhoneNumber && !watchPhoneType ? \"Phone Type is required\" : false\r\n                                }}\r\n                                render={({ onChange, value }) => (\r\n                                    <Select\r\n                                        id={namePhoneType}\r\n                                        name={namePhoneType}\r\n                                        aria-labelledby=\"phoneTypeLabel\"\r\n                                        options={phoneTypes_json}\r\n                                        size=\"full\"\r\n                                        disabled={false}\r\n                                        validationState={errorsPhoneDto?.phoneTypeCd ? ValidationState.ERROR : undefined}\r\n                                        errorMessage={errorsPhoneDto?.phoneTypeCd?.message}\r\n                                        onChange={changes => {\r\n                                            onChange(changes.selectedItem?.value)\r\n                                        }}\r\n                                        onBlur={() => {\r\n                                            triggerAllFields()\r\n                                        }}\r\n                                        value={value}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </FormInput>\r\n                    </Box>\r\n                    <Box gridColumn={{ base: \"12 / 13\"}} alignSelf=\"center\" justifySelf=\"center\">\r\n                        {isFirst ?\r\n                            <Box mt={errorFree ? 32 : errorMsgExist ? 0 : 32} as={AddCircle} \r\n                                cursor={ validateAddable ? \"pointer\" : \"cursor\"} \r\n                                color={ validateAddable ? \"clickable\" : \"disabledInputText\" }\r\n                                onClick={() => {\r\n                                    if(validateAddable) onAdd()\r\n                                }}\r\n                                />\r\n                        :\r\n                            <Box mt={errorFree ? 32 : errorMsgExist ? 0 : 32} as={HighlightOff} cursor=\"pointer\" color=\"clickable\" \r\n                                onClick={onRemove}/>\r\n                        }\r\n                    </Box>\r\n                </Grid>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default POCPhone\r\n","import React, { useState } from \"react\"\r\nimport { Box, Grid, VisuallyHidden } from \"@chakra-ui/core\"\r\nimport { useFormContext, useWatch } from \"react-hook-form\"\r\nimport {  FormInput, Text, ValidationState } from \"@c1ds/components\"\r\n\r\nimport { Person, Close } from \"@material-ui/icons\"\r\n\r\nimport { FormIconInput } from './FormIconInput'\r\nimport POCEmail from './POCEmail'\r\nimport POCPhone from './POCPhone'\r\n\r\nconst phoneListAllowed = ['phoneDto1', 'phoneDto2', 'phoneDto3']\r\nconst emailListAllowed = ['emailDto1', 'emailDto2', 'emailDto3']\r\n\r\ninterface POCBoxProps {\r\n\tpersonDtoIndex: number\r\n\tonRemove: () => void\r\n}\r\nconst POCBox: React.FC<POCBoxProps> = (p: POCBoxProps) => {\r\n\r\n\tconst { personDtoIndex, onRemove } = p\r\n\tconst { errors, setError, clearErrors, register, watch, trigger } = useFormContext<LklDto>()\r\n\tconst isDisabled = false\r\n\r\n\t// Parse the LKLDTO structure names with current personDto index\r\n\tconst prefix = `lookupLklDto[lklPocListDto][${personDtoIndex}][personDto]`\r\n\r\n\t// Check if there is error in either of first name or last name\r\n\tlet errorFirstName, errorLastName\r\n\tif (errors.lookupLklDto?.lklPocListDto) {\r\n\t\terrorFirstName = errors.lookupLklDto?.lklPocListDto[personDtoIndex]?.personDto?.givenName\r\n\t\terrorLastName = errors.lookupLklDto?.lklPocListDto[personDtoIndex]?.personDto?.surName\r\n\t}\r\n\r\n\t// Default name sets for Names and Phone&Email\r\n\tconst [ nameFieldList, setNameFieldList ] = useState<string[]>([\r\n\t\t`${prefix}[givenName]`,\r\n\t\t`${prefix}[surName]`\r\n\t])\r\n\tconst [ contactFieldList, setContactFieldList ] = useState<string[]>([\r\n\t\t`${prefix}[personEmailDtoList][1][emailDto][emailType]`,\r\n\t\t`${prefix}[personEmailDtoList][1][emailDto][emailAddress]`,\r\n\t\t`${prefix}[personPhoneDtoList][1][phoneDto][phoneNum]`,\r\n\t\t`${prefix}[personPhoneDtoList][1][phoneDto][phoneTypeCd]`,\r\n\t])\r\n\tconst [ phoneList, setPhoneList ] = useState<string[]>(['phoneDto1'])\r\n\tconst [ emailList, setEmailList ] = useState<string[]>(['emailDto1'])\r\n\t\r\n\t// Check if both first name and last name are empty\r\n\tconst isNameFieldsEmpty = () => {\r\n\t\treturn Object.values(watch(nameFieldList)).every((value : string | boolean | Date | LookupLklDto | undefined) => {\r\n\t\t\treturn value === undefined || value === \"\"\r\n\t\t})\r\n\t}\r\n\r\n\t// Check if all of phone and email fields are empty\r\n\tconst isAllPhoneEmailEmpty = (specificList : string[] | undefined = undefined) => {\r\n\t\treturn Object.values(specificList ? specificList : watch(contactFieldList)).every(\r\n\t\t\t(value : string | boolean | Date | LookupLklDto | undefined) => {\r\n\t\t\t\treturn value === undefined || value === \"\"\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\t\r\n\tconst filterOnTextChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n\t\te.target.value = e.target.value.replace(/^[^A-Za-z0-9]+/, \"\")\r\n\t}\r\n\r\n\t// Name set onBlur behavior\r\n\tconst filterOnNameBlur = (e : React.FocusEvent<HTMLInputElement>) => {\r\n\t\tif(e.target.value.length > 0){\r\n\t\t\tif(isAllPhoneEmailEmpty()) {\r\n\t\t\t\tcontactFieldList.forEach((name : string) =>\r\n\t\t\t\t\tsetError(name, { type: \"manual\", message: \"\"})\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\ttrigger(nameFieldList)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif(isAllPhoneEmailEmpty()){\r\n\t\t\t\tclearErrors(contactFieldList)\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\ttrigger(nameFieldList)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Email and Phone onBlur behavior\r\n\tconst triggerAllFields = () => {\r\n\t\ttrigger([...contactFieldList, ...nameFieldList])\r\n\t}\r\n\r\n\tconst onAddEmail = (setNumber : string) => {\r\n\r\n\t\tsetEmailList(prevEmailList => {\r\n\t\t\tconst unused = emailListAllowed.filter(email => {\r\n\t\t\t\treturn !prevEmailList.includes(email)\r\n\t\t\t})\r\n\t\t\treturn (unused.length > 0) ? [...prevEmailList, unused[0]] : prevEmailList\r\n\t\t})\r\n\t\t\r\n\t\tsetContactFieldList(prevList => {\r\n\t\t\treturn [...prevList, \r\n\t\t\t\t`${prefix}[personEmailDtoList][${setNumber}][emailDto][emailAddress]`,\r\n\t\t\t\t`${prefix}[personEmailDtoList][${setNumber}][emailDto][emailType]`\r\n\t\t\t]\r\n\t\t})\r\n\t}\r\n\tconst onRemoveEmail = (emailName : string) => {\r\n\r\n\t\tsetEmailList(prevEmailList => {\r\n\t\t\tconst filteredList = prevEmailList.filter(email => {\r\n\t\t\t\treturn email !== emailName\r\n\t\t\t})\r\n\t\t\treturn filteredList\r\n\t\t})\r\n\t}\r\n\r\n\tconst onAddPhone = (setNumber : string) => {\r\n\r\n\t\tsetPhoneList(prevPhoneList => {\r\n\t\t\tconst unused = phoneListAllowed.filter(phone => {\r\n\t\t\t\treturn !prevPhoneList.includes(phone)\r\n\t\t\t})\r\n\t\t\treturn (unused.length > 0) ? [...prevPhoneList, unused[0]] : prevPhoneList\r\n\t\t})\r\n\r\n\t\tsetContactFieldList(prevList => {\r\n\t\t\treturn [...prevList, \r\n\t\t\t\t`${prefix}[personEmailDtoList][${setNumber}][phoneDto][phoneNum]`,\r\n\t\t\t\t`${prefix}[personEmailDtoList][${setNumber}][phoneDto][phoneTypeCd]`\r\n\t\t\t]\r\n\t\t})\r\n\t}\r\n\tconst onRemovePhone = (phoneName : string) => {\r\n\r\n\t\tsetPhoneList(prevPhoneList => {\r\n\t\t\tconst filteredList = prevPhoneList.filter(phone => {\r\n\t\t\t\treturn phone !== phoneName\r\n\t\t\t})\r\n\t\t\treturn filteredList\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t// TO-DO\r\n\t\t// 6. For phone number, we might need an update to C1DS to allow Select component\r\n\t\t//    to accept both dropdown and user input\r\n\t\t<Box position=\"relative\">\r\n\t\t\t{ personDtoIndex !== 0 && \r\n\t\t\t\t<Box \r\n\t\t\t\t\tas={Close} \r\n\t\t\t\t\tm={8} \r\n\t\t\t\t\tright={0} \r\n\t\t\t\t\tcolor=\"text\"\r\n\t\t\t\t\tposition=\"absolute\"\r\n\t\t\t\t\tcursor=\"pointer\"\r\n\t\t\t\t\tonClick={onRemove} />\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t<Grid\r\n\t\t\t\tborder=\"1px\"\r\n\t\t\t\tborderStyle=\"solid\"\r\n\t\t\t\tborderColor=\"lightGray\"\r\n\t\t\t\tgridColumn={{ base: \"1 / -1\", md: \"1 / 9\" }}\r\n\t\t\t\tgridGap={{ base: \"16px\", md: \"24px\" }}\r\n\t\t\t\tpadding={{ base: \"16px\", md: \"24px\" }}\r\n\t\t\t\tgridTemplateColumns={{ base: \"repeat(12,1fr)\" }}>\r\n\r\n\t\t\t\t<input \r\n\t\t\t\t\tref={register}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname={`${prefix}[personId]`} \r\n\t\t\t\t\thidden\r\n\t\t\t\t\tdefaultValue={`person${personDtoIndex}`}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"1 / 7\" }}>\r\n\t\t\t\t\t<FormIconInput labelText=\"First Name\" labelId=\"firstNameLabel\" icon={Person}>\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\t\trequired: isAllPhoneEmailEmpty() || !isNameFieldsEmpty() ? false : \"First Name is required\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tid={`firstName{}`}\r\n\t\t\t\t\t\t\tname={`${prefix}[givenName]`}\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tvalidationState={ errorFirstName ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\terrorMessage={errorFirstName?.message}\r\n\t\t\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\t\t\tonBlur={(filterOnNameBlur)}\r\n\t\t\t\t\t\t\tmaxLength={33}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormIconInput>\r\n\t\t\t\t</Box>\r\n\t\t\t\t\r\n\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"7 / -1\" }}>\r\n\t\t\t\t\t<FormInput labelText=\"Last Name\" labelId=\"lastNameLabel\">\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tref={register({\r\n\t\t\t\t\t\t\t\trequired: isAllPhoneEmailEmpty() || !isNameFieldsEmpty() ? false : \"Last Name is required\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tid=\"lastName\"\r\n\t\t\t\t\t\t\tname={`${prefix}[surName]`}\r\n\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t\tvalidationState={ errorLastName ? ValidationState.ERROR : undefined}\r\n\t\t\t\t\t\t\terrorMessage={errorLastName?.message}\r\n\t\t\t\t\t\t\tonChange={filterOnTextChange}\r\n\t\t\t\t\t\t\tonBlur={filterOnNameBlur}\r\n\t\t\t\t\t\t\tmaxLength={33}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormInput>\r\n\t\t\t\t</Box>\r\n\t\t\t\t\r\n\t\t\t\t{/* Email List , max = 3*/}\r\n\t\t\t\t{emailList.map((value: string, index: number) => {\r\n\t\t\t\t\tconst setNumber = value.charAt(value.length-1)\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<POCEmail \r\n\t\t\t\t\t\t\tkey={`${personDtoIndex}-${value}`}\r\n\t\t\t\t\t\t\tid={`${prefix}-${setNumber}`}\r\n\t\t\t\t\t\t\tpersonDtoIndex={personDtoIndex}\r\n\t\t\t\t\t\t\tisFirst={index === 0}\r\n\t\t\t\t\t\t\taddable={emailList.length < 3 && index === 0 }\r\n\t\t\t\t\t\t\tonEmailAddressChange={filterOnTextChange}\r\n\t\t\t\t\t\t\ttriggerAllFields={triggerAllFields}\r\n\t\t\t\t\t\t\tonAdd={() => onAddEmail(setNumber)}\r\n\t\t\t\t\t\t\tonRemove={()=> {\r\n\t\t\t\t\t\t\t\tonRemoveEmail(value)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\r\n\t\t\t\t{/* Phone List , max = 3*/}\r\n\t\t\t\t{phoneList.map((value: string, index: number) => {\r\n\t\t\t\t\tconst setNumber = value.charAt(value.length-1)\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<POCPhone\r\n\t\t\t\t\t\t\tkey={`${personDtoIndex}-${value}`}\r\n\t\t\t\t\t\t\tid={`${prefix}-${setNumber}`}\r\n\t\t\t\t\t\t\tpersonDtoIndex={personDtoIndex}\r\n\t\t\t\t\t\t\tisFirst={index === 0}\r\n\t\t\t\t\t\t\taddable={emailList.length < 3 && index === 0 }\r\n\t\t\t\t\t\t\tonPhoneNumberChange={filterOnTextChange}\r\n\t\t\t\t\t\t\ttriggerAllFields={triggerAllFields}\r\n\t\t\t\t\t\t\tonAdd={() => onAddPhone(setNumber)}\r\n\t\t\t\t\t\t\tonRemove={()=> {\r\n\t\t\t\t\t\t\t\tonRemovePhone(value)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</Grid>\r\n\t\t</Box>\r\n\t)\r\n}\r\n\r\nexport default POCBox\r\n","import React, { useState } from \"react\"\r\nimport { FormSection } from \"../Forms/Form\"\r\nimport { Box } from \"@chakra-ui/core\"\r\nimport { P, Link } from \"@c1ds/components\"\r\nimport POCBox from \"../POCBox\"\r\n\r\nconst POCDetails: React.FC = () => {\r\n\tconst [pocIndex, setPocIndex] = useState(1)\r\n\tconst [pocBoxes, setPocBoxes] = useState([\"personDto0\"])\r\n\r\n\treturn (\r\n\t\t<FormSection title=\"Point Of Contact\" showDivider={false}>\r\n\t\t\t<Box gridColumn=\"1 / -1\">\r\n\t\t\t\t<P>Enter a point of contact at this location.</P>\r\n\t\t\t</Box>\r\n\t\t\t{/* Display all pocBoxes available */}\r\n\t\t\t{pocBoxes.map((value: string) => {\r\n\t\t\t\tconst personDtoIndex = value.charAt(value.length-1)\r\n\t\t\t\treturn (\r\n\t\t\t\t\t// key : PocBox-{index} will use this for personId\r\n\t\t\t\t\t<Box key={value} gridColumn=\"1 / 9\">\r\n\t\t\t\t\t\t<POCBox \r\n\t\t\t\t\t\t\tpersonDtoIndex={+personDtoIndex}\r\n\t\t\t\t\t\t\tonRemove={()=>{\r\n\t\t\t\t\t\t\t\tsetPocBoxes(pocBoxes.filter(boxName => boxName !== value))\r\n\t\t\t\t\t\t\t}} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t\t{/* This link adds more pocBoxes */}\r\n\t\t\t<Box gridColumn=\"1 / -1\">\r\n\t\t\t\t<Link\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetPocBoxes((currPocBoxes) => {\r\n\t\t\t\t\t\t\treturn [...currPocBoxes, `personDto${pocIndex}`]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tsetPocIndex(pocIndex+1)\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\tAdd Another Point of Contact\r\n\t\t\t\t</Link>\r\n\t\t\t</Box>\r\n\t\t</FormSection>\r\n\t)\r\n}\r\n\r\nexport default POCDetails\r\n","import React, { useCallback }from \"react\"\r\nimport Layout, { LayoutProps } from \"../../components/Layout\"\r\nimport { navigate } from \"gatsby\"\r\nimport { FormProvider, useForm } from \"react-hook-form\"\r\nimport { Button, LinkButton } from \"@c1ds/components\"\r\nimport { Box, Grid, useDisclosure } from \"@chakra-ui/core\"\r\nimport { Form, useCTFFormContext } from \"./Form\"\r\nimport LocationDetails from \"../FormSections/LocationDetails\"\r\nimport POCDetails from \"../FormSections/POCDetails\"\r\nimport { DataLossModal } from \"../Modals/DataLossModal\"\r\nimport { EventPageState } from \"../../pages/event\"\r\n\r\ninterface LKLFormProps {\r\n\teventId: string\r\n\tsavedForm?: LklDto\r\n}\r\n\r\nconst LKLForm: React.FC<LKLFormProps> = (p: LKLFormProps) => {\r\n\tconst { eventId, savedForm } = p\r\n\t// const { isCreate, isEdit } = useCTFFormContext()\r\n\tconst { isOpen: isDataLossOpen, onOpen: onDataLossOpen, onClose: onDataLossClose } = useDisclosure()\r\n\r\n\tconst defaultValues = {\r\n\t\tactiveIndicator: true,\r\n\t}\r\n\t\r\n\tconst formMethods = useForm<LklDto>({\r\n\t\tmode: \"onBlur\",\r\n\t\tdefaultValues: defaultValues,\r\n\t})\r\n\tconst { register, handleSubmit, getValues } = formMethods\r\n\r\n\tconst breadcrumbs: LayoutProps[\"breadcrumbs\"] = [\r\n\t\t{ label: \"Event\", onClick: onDataLossOpen },\r\n\t\t{ label: \"Add Location\" },\r\n\t\t{ label: \"New Location\" },\r\n\t]\r\n\r\n\tconst onSubmit = useCallback(\r\n\t\t(data, skipNavigate = false) => {\r\n\t\t\t// console.log(data)\r\n\t\t},\r\n\t\t[]\r\n\t)\r\n\r\n\treturn (\r\n\t\t<Layout\r\n\t\t\tpageTitle=\"Location Details\"\r\n\t\t\tpageHeading=\"New Location\"\r\n\t\t\tpageDescription=\"Provide as much information as you have for the new location.\"\r\n\t\t\tbreadcrumbs={breadcrumbs}>\r\n\t\t\t<FormProvider {...formMethods}>\r\n\t\t\t\t<Form id=\"LKLForm\"\r\n\t\t\t\t\tonSubmit={handleSubmit(data => {\r\n\t\t\t\t\t\tonSubmit(data, false)\r\n\t\t\t\t\t})}>\r\n\t\t\t\t\t<LocationDetails />\r\n\t\t\t\t\t<POCDetails />\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tas=\"nav\"\r\n\t\t\t\t\t\taria-label=\"page\"\r\n\t\t\t\t\t\tid=\"pageNav\"\r\n\t\t\t\t\t\tgridColumn=\"1 / -1\"\r\n\t\t\t\t\t\talignSelf=\"center\"\r\n\t\t\t\t\t\tgridGap={{ base: \"16px\", md: \"24px\" }}\r\n\t\t\t\t\t\tmarginTop={{ md: \"72\" }}\r\n\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\tgridTemplateColumns={{ base: \"1\", md: \"repeat(14, 1fr)\", lg: \"repeat(12, 1fr)\" }}>\r\n\t\t\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"10 / 15\", lg: \"10 / 13\" }} gridRow={{ md: \"1\" }}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tsize=\"full\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tCreate New Location\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"5 / 10\", lg: \"7 / 10\" }} gridRow={{ md: \"1\" }}>\r\n\t\t\t\t\t\t\t<Button size=\"full\" buttonType=\"secondary\" type=\"button\" onClick={() => navigate(\"/\")}>\r\n\t\t\t\t\t\t\t\tCreate and Add Another\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Box gridColumn={{ base: \"1 / -1\", md: \"1 / 2\" }} gridRow={{ md: \"1\" }} justifySelf=\"center\">\r\n\t\t\t\t\t\t\t<LinkButton type=\"button\" onClick={onDataLossOpen}>\r\n\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t</LinkButton>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<DataLossModal\r\n\t\t\t\t\t\tisOpen={isDataLossOpen}\r\n\t\t\t\t\t\tonClose={onDataLossClose}\r\n\t\t\t\t\t\tonLeave={() => {\r\n\t\t\t\t\t\t\tconst pageState: EventPageState = {\r\n\t\t\t\t\t\t\t\t// TODO: Uncomment once form integration is established\r\n\t\t\t\t\t\t\t\t// eventId: getValues(\"eventId\"),\r\n\t\t\t\t\t\t\t\teventId: eventId,\r\n\t\t\t\t\t\t\t\tformSection: \"locations\",\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tnavigate(\"/event\", { state: pageState })\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form>\r\n\t\t\t</FormProvider>\r\n\t\t</Layout>\r\n\t)\r\n}\r\n\r\nexport default LKLForm\r\n","import React from \"react\"\r\nimport moment from \"moment\"\r\nimport { getSavedForm } from \"../components/Utility/formHelpers\"\r\nimport { CTFFormProvider, CTFFormProviderProps } from \"../components/Forms/Form\"\r\nimport LKLForm from \"../components/Forms/LKLForm\"\r\n\r\nexport interface LklPageState {\r\n\teventId: string\r\n\teventLklId?: string\r\n}\r\n\r\ntype LklPageProps = {\r\n\tlocation: {\r\n\t\tstate: LklPageState\r\n\t}\r\n}\r\n\r\nconst addLKLPage: React.FC<LklPageProps> = (p: LklPageProps) => {\r\n\tlet savedLkl: LklDto | undefined\r\n\tif (p.location?.state?.eventLklId) {\r\n\t\tconst savedEvents = getSavedForm<Array<EventFormData>>(\"ctfForms\", \"events\")\r\n\t\tconst savedEvent = savedEvents && savedEvents.find((event: EventFormData) => event.eventId === p.location?.state?.eventId)\r\n\t\tsavedLkl = savedEvent?.eventLklDtoList?.find((lklDto: LklDto) => lklDto.eventLklId === p.location?.state?.eventLklId)\r\n\t\tif (savedLkl) {\r\n\t\t\tif (savedLkl.createdDateTime) savedLkl.createdDateTime = moment(savedLkl.createdDateTime).toDate()\r\n\t\t\tif (savedLkl.lastUpdatedDateTime) savedLkl.lastUpdatedDateTime = moment(savedLkl.lastUpdatedDateTime).toDate()\r\n\t\t}\r\n\t}\r\n\r\n\tconst formMode: CTFFormProviderProps[\"formMode\"] = typeof savedLkl === \"undefined\" ? \"create\" : \"edit\"\r\n\r\n\treturn (\r\n\t\t<CTFFormProvider formMode={formMode}>\r\n\t\t\t<LKLForm eventId={p.location?.state?.eventId} savedForm={savedLkl} />\r\n\t\t</CTFFormProvider>\r\n\t)\r\n}\r\n\r\nexport default addLKLPage\r\n","import \"core-js/modules/es6.array.reduce\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { createContext, useContext, forwardRef } from \"react\";\nimport Box from \"../Box\";\nexport var useFormControl = function useFormControl(props) {\n  var context = useFormControlContext();\n\n  if (!context) {\n    return props;\n  }\n\n  var keys = Object.keys(context);\n  return keys.reduce(function (acc, prop) {\n    /** Giving precedence to `props` over `context` */\n    acc[prop] = props[prop];\n\n    if (context) {\n      if (props[prop] == null) {\n        acc[prop] = context[prop];\n      }\n    }\n\n    return acc;\n  }, {});\n};\nvar FormControlContext = createContext();\nexport var useFormControlContext = function useFormControlContext() {\n  return useContext(FormControlContext);\n};\nvar FormControl = forwardRef(function (_ref, ref) {\n  var isInvalid = _ref.isInvalid,\n      isRequired = _ref.isRequired,\n      isDisabled = _ref.isDisabled,\n      isReadOnly = _ref.isReadOnly,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"isInvalid\", \"isRequired\", \"isDisabled\", \"isReadOnly\"]);\n\n  var context = {\n    isRequired: isRequired,\n    isDisabled: isDisabled,\n    isInvalid: isInvalid,\n    isReadOnly: isReadOnly\n  };\n  return jsx(FormControlContext.Provider, {\n    value: context\n  }, jsx(Box, _extends({\n    role: \"group\",\n    ref: ref\n  }, rest)));\n});\nFormControl.displayName = \"FormControl\";\nexport default FormControl;"],"sourceRoot":""}